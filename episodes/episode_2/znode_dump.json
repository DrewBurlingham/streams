/ (2)
DATA:
    
 /zookeeper (1)
 DATA:
     
 /lwfusion (1)
 DATA:
     
  /lwfusion/3.1.0 (3)
  DATA:
      
   /lwfusion/3.1.0/core (27)
   DATA:
       
    /lwfusion/3.1.0/core/connectors (1)
    DATA:
        
     /lwfusion/3.1.0/core/connectors/datasources (1)
     DATA:
         
      /lwfusion/3.1.0/core/connectors/datasources/web-crawl (0)
      DATA:
          {
            "id" : "web-crawl",
            "created" : "2017-10-20T21:49:10.932Z",
            "modified" : "2017-10-20T21:49:10.932Z",
            "connector" : "lucid.web",
            "type" : "web",
            "pipeline" : "Bahn_DE-default",
            "parserId" : "default",
            "properties" : {
              "refreshOlderThan" : -1,
              "f.appendTrailingSlashToLinks" : false,
              "refreshErrors" : false,
              "restrictToTreeIgnoredHostPrefixes" : [ "www." ],
              "dedupeSaveSignature" : false,
              "crawlDBType" : "in-memory",
              "f.discardLinkURLQueries" : false,
              "fetchDelayMS" : 0,
              "f.respectMetaEquivRedirects" : false,
              "refreshAll" : true,
              "f.defaultMIMEType" : "application/octet-stream",
              "f.jsPageLoadTimeout" : 10000,
              "restrictToTreeAllowSubdomains" : false,
              "f.jsScriptTimeout" : 10000,
              "maxItems" : 500,
              "f.jsAjaxTimeout" : 10000,
              "trackEmbeddedIDs" : true,
              "dedupe" : false,
              "f.scrapeLinksBeforeFiltering" : false,
              "f.allowAllCertificates" : true,
              "collection" : "default",
              "forceRefresh" : false,
              "f.obeyRobots" : true,
              "parserRetryCount" : 0,
              "fetchDelayMSPerHost" : true,
              "fetchThreads" : 5,
              "indexCrawlDBToSolr" : false,
              "restrictToTree" : true,
              "retainOutlinks" : false,
              "f.defaultCharSet" : "UTF-8",
              "emitThreads" : 5,
              "diagnosticMode" : true,
              "delete" : true,
              "initial_mapping" : {
                "id" : "FromMap",
                "mappings" : [ {
                  "source" : "charSet",
                  "target" : "charSet_s",
                  "operation" : "move"
                }, {
                  "source" : "fetchedDate",
                  "target" : "fetchedDate_dt",
                  "operation" : "move"
                }, {
                  "source" : "lastModified",
                  "target" : "lastModified_dt",
                  "operation" : "move"
                }, {
                  "source" : "signature",
                  "target" : "dedupeSignature_s",
                  "operation" : "move"
                }, {
                  "source" : "contentSignature",
                  "target" : "signature_s",
                  "operation" : "move"
                }, {
                  "source" : "length",
                  "target" : "length_l",
                  "operation" : "move"
                }, {
                  "source" : "mimeType",
                  "target" : "mimeType_s",
                  "operation" : "move"
                }, {
                  "source" : "parent",
                  "target" : "parent_s",
                  "operation" : "move"
                }, {
                  "source" : "owner",
                  "target" : "owner_s",
                  "operation" : "move"
                }, {
                  "source" : "group",
                  "target" : "group_s",
                  "operation" : "move"
                } ],
                "reservedFieldsMappingAllowed" : false,
                "type" : "field-mapping",
                "skip" : false
              },
              "restrictToTreeUseHostAndPath" : false,
              "f.filteringRootTags" : [ "body", "head" ],
              "startLinks" : [ "https://www.bahn.com/en/view/index.shtml" ],
              "failFastOnStartLinkFailure" : true,
              "f.timeoutMS" : 10000,
              "chunkSize" : 1,
              "f.obeyRobotsDelay" : true,
              "deleteErrorsAfter" : -1,
              "f.userAgentName" : "Lucidworks-Anda/2.0",
              "retryEmit" : true,
              "f.crawlJS" : false,
              "depth" : 4,
              "f.cookieSpec" : "browser-compatibility",
              "f.maxSizeBytes" : 4194304,
              "refreshStartLinks" : false,
              "aliasExpiration" : 1
            }
          }
    /lwfusion/3.1.0/core/query-pipelines (5)
    DATA:
        
     /lwfusion/3.1.0/core/query-pipelines/related-items (0)
     DATA:
         {
           "id" : "related-items",
           "stages" : [ {
             "type" : "more-like-this",
             "id" : "f5158e92-4af8-400a-b00a-ff9677059e47",
             "moreLikeThisFields" : [ ],
             "useQueryParser" : true,
             "mindf" : 2,
             "maxdf" : 10000,
             "minwl" : 3,
             "docId" : "id",
             "type" : "more-like-this",
             "skip" : false
           }, {
             "type" : "solr-query",
             "id" : "4f699bdc-9c28-4287-af2c-2020e74cda90",
             "allowedRequestHandlers" : [ ],
             "httpMethod" : "POST",
             "allowFederatedSearch" : false,
             "type" : "solr-query",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/query-pipelines/_system (0)
     DATA:
         {
           "id" : "_system",
           "stages" : [ {
             "type" : "solr-query",
             "id" : "3f1517c8-25d6-491a-b3e0-d739a403ca9d",
             "allowedRequestHandlers" : [ ],
             "httpMethod" : "POST",
             "allowFederatedSearch" : false,
             "type" : "solr-query",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/query-pipelines/default (0)
     DATA:
         {
           "id" : "default",
           "stages" : [ {
             "type" : "recommendation",
             "id" : "3bd1dd6d-03b0-4533-9ef2-5153abefe559",
             "numRecommendations" : 10,
             "numSignals" : 100,
             "aggrType" : "*",
             "boostId" : "id",
             "boostingMethod" : "query-param",
             "boostingParam" : "bq",
             "type" : "recommendation",
             "skip" : false
           }, {
             "type" : "search-fields",
             "id" : "fc3a0531-2e4e-4083-940a-8fc05c5f6834",
             "rows" : 10,
             "start" : 0,
             "sort" : "",
             "queryFields" : [ {
               "field" : "title_t",
               "boost" : 5.0
             }, {
               "field" : "body_t"
             } ],
             "returnFields" : [ "*", "score" ],
             "type" : "search-fields",
             "skip" : false
           }, {
             "type" : "facet",
             "id" : "b817b70a-d9c1-45e9-9319-4eb1b623f40c",
             "fieldFacets" : [ {
               "field" : "body_t_lang",
               "sort" : "count",
               "minCount" : 1,
               "missing" : false
             }, {
               "field" : "title_t_lang",
               "sort" : "count",
               "minCount" : 1,
               "missing" : false
             } ],
             "type" : "facet",
             "skip" : false
           }, {
             "type" : "solr-query",
             "id" : "1c9f84e8-09dc-4adf-93ad-27569c07ef7d",
             "allowedRequestHandlers" : [ ],
             "httpMethod" : "POST",
             "allowFederatedSearch" : false,
             "type" : "solr-query",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/query-pipelines/_lw_qwb_tmp_479065324734418 (0)
     DATA:
         {
           "id" : "_lw_qwb_tmp_479065324734418",
           "stages" : [ {
             "type" : "recommendation",
             "id" : "3bd1dd6d-03b0-4533-9ef2-5153abefe559",
             "numRecommendations" : 10,
             "numSignals" : 100,
             "aggrType" : "*",
             "boostId" : "id",
             "boostingMethod" : "query-param",
             "boostingParam" : "bq",
             "type" : "recommendation",
             "skip" : false
           }, {
             "type" : "search-fields",
             "id" : "fc3a0531-2e4e-4083-940a-8fc05c5f6834",
             "rows" : 10,
             "start" : 0,
             "sort" : "",
             "queryFields" : [ {
               "field" : "title_t",
               "boost" : 5.0
             }, {
               "field" : "body_t"
             } ],
             "returnFields" : [ "*", "score" ],
             "type" : "search-fields",
             "skip" : false
           }, {
             "type" : "facet",
             "id" : "b817b70a-d9c1-45e9-9319-4eb1b623f40c",
             "fieldFacets" : [ {
               "field" : "body_t_lang",
               "sort" : "count",
               "minCount" : 1,
               "missing" : false
             }, {
               "field" : "title_t_lang",
               "sort" : "count",
               "minCount" : 1,
               "missing" : false
             } ],
             "type" : "facet",
             "skip" : false
           }, {
             "type" : "solr-query",
             "id" : "1c9f84e8-09dc-4adf-93ad-27569c07ef7d",
             "allowedRequestHandlers" : [ ],
             "httpMethod" : "POST",
             "allowFederatedSearch" : false,
             "type" : "solr-query",
             "skip" : false
           } ],
           "properties" : {
             "forSimulation" : "true",
             "lastModified" : "1508538341"
           }
         }
     /lwfusion/3.1.0/core/query-pipelines/_lw_qwb_tmp_8693497299788498 (0)
     DATA:
         {
           "id" : "_lw_qwb_tmp_8693497299788498",
           "stages" : [ {
             "type" : "recommendation",
             "id" : "3bd1dd6d-03b0-4533-9ef2-5153abefe559",
             "numRecommendations" : 10,
             "numSignals" : 100,
             "aggrType" : "*",
             "boostId" : "id",
             "boostingMethod" : "query-param",
             "boostingParam" : "bq",
             "type" : "recommendation",
             "skip" : false
           }, {
             "type" : "search-fields",
             "id" : "fc3a0531-2e4e-4083-940a-8fc05c5f6834",
             "rows" : 10,
             "start" : 0,
             "sort" : "",
             "queryFields" : [ {
               "field" : "title_t",
               "boost" : 5.0
             }, {
               "field" : "body_t"
             } ],
             "returnFields" : [ "*", "score" ],
             "type" : "search-fields",
             "skip" : false
           }, {
             "type" : "facet",
             "id" : "b817b70a-d9c1-45e9-9319-4eb1b623f40c",
             "fieldFacets" : [ {
               "field" : "body_t_lang",
               "sort" : "count",
               "minCount" : 1,
               "missing" : false
             }, {
               "field" : "title_t_lang",
               "sort" : "count",
               "minCount" : 1,
               "missing" : false
             } ],
             "type" : "facet",
             "skip" : false
           }, {
             "type" : "solr-query",
             "id" : "1c9f84e8-09dc-4adf-93ad-27569c07ef7d",
             "allowedRequestHandlers" : [ ],
             "httpMethod" : "POST",
             "allowFederatedSearch" : false,
             "type" : "solr-query",
             "skip" : false
           } ],
           "properties" : {
             "forSimulation" : "true",
             "lastModified" : "1508537922"
           }
         }
    /lwfusion/3.1.0/core/job-schedules (14)
    DATA:
        
     /lwfusion/3.1.0/core/job-schedules/task:delete-old-system-logs (0)
     DATA:
         {
           "resource" : "task:delete-old-system-logs",
           "enabled" : true,
           "triggers" : [ {
             "type" : "cron",
             "enabled" : true,
             "expression" : "0 20 4 ? * SUN",
             "type" : "cron"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:default_click_signals_aggregation (0)
     DATA:
         {
           "resource" : "spark:default_click_signals_aggregation",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : true,
             "interval" : 2,
             "timeUnit" : "minute",
             "startTime" : "2017-10-20T20:42:01.037Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:hourlyMetricsRollup-gauges (0)
     DATA:
         {
           "resource" : "spark:hourlyMetricsRollup-gauges",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "hour",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:hourlyMetricsRollup-counters (0)
     DATA:
         {
           "resource" : "spark:hourlyMetricsRollup-counters",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "hour",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:dailyMetricsRollup-timers (0)
     DATA:
         {
           "resource" : "spark:dailyMetricsRollup-timers",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "day",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:dailyMetricsRollup-counters (0)
     DATA:
         {
           "resource" : "spark:dailyMetricsRollup-counters",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "day",
             "startTime" : "2017-10-20T20:41:30.636Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:dailyMetricsRollup-gauges (0)
     DATA:
         {
           "resource" : "spark:dailyMetricsRollup-gauges",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "day",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:hourlyMetricsRollup-histograms (0)
     DATA:
         {
           "resource" : "spark:hourlyMetricsRollup-histograms",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "hour",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/task:delete-old-audit-logs (0)
     DATA:
         {
           "resource" : "task:delete-old-audit-logs",
           "enabled" : true,
           "triggers" : [ {
             "type" : "cron",
             "enabled" : true,
             "expression" : "0 15 4 ? * SUN",
             "type" : "cron"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:hourlyMetricsRollup-timers (0)
     DATA:
         {
           "resource" : "spark:hourlyMetricsRollup-timers",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "hour",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:dailyMetricsRollup-meters (0)
     DATA:
         {
           "resource" : "spark:dailyMetricsRollup-meters",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "day",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:hourlyMetricsRollup-meters (0)
     DATA:
         {
           "resource" : "spark:hourlyMetricsRollup-meters",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "hour",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/spark:dailyMetricsRollup-histograms (0)
     DATA:
         {
           "resource" : "spark:dailyMetricsRollup-histograms",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "day",
             "startTime" : "2017-10-20T20:41:30.639Z",
             "type" : "interval"
           } ],
           "default" : false
         }
     /lwfusion/3.1.0/core/job-schedules/task:delete-old-metrics (0)
     DATA:
         {
           "resource" : "task:delete-old-metrics",
           "enabled" : true,
           "triggers" : [ {
             "type" : "interval",
             "enabled" : false,
             "interval" : 1,
             "timeUnit" : "week",
             "startTime" : "2017-10-20T20:46:31.092Z",
             "type" : "interval"
           } ],
           "default" : false
         }
    /lwfusion/3.1.0/core/keys (1)
    DATA:
        
     /lwfusion/3.1.0/core/keys/default (0)
     DATA:
         {
           "id" : "default",
           "algorithm" : "AES",
           "size" : 128,
           "type" : "secret",
           "createdOn" : "2017-10-20T20:39:45.518Z",
           "value" : "hfB9WKYB8JhN9nkw7BcSFI/aitG/qZmvNOEbnZ/Ec4jfHyx4Dimwp5/CYiCsZKla765/4gTGbL4Rq6DHt+c7Bm/S3Dk="
         }
    /lwfusion/3.1.0/core/stateful-jobs (4)
    DATA:
        
     /lwfusion/3.1.0/core/stateful-jobs/scheduler (1)
     DATA:
         
      /lwfusion/3.1.0/core/stateful-jobs/scheduler/_redirect (0)
      DATA:
          "http://10.128.0.2:8765/api/v1/jobs"
     /lwfusion/3.1.0/core/stateful-jobs/connectors (1)
     DATA:
         
      /lwfusion/3.1.0/core/stateful-jobs/connectors/web-crawl (0)
      DATA:
          "http://10.128.0.2:8984/connectors/v1/connectors"
     /lwfusion/3.1.0/core/stateful-jobs/jobs (1)
     DATA:
         
      /lwfusion/3.1.0/core/stateful-jobs/jobs/_redirect (0)
      DATA:
          "http://10.128.0.2:8765/api/v1/jobs"
     /lwfusion/3.1.0/core/stateful-jobs/usage (1)
     DATA:
         
      /lwfusion/3.1.0/core/stateful-jobs/usage/_redirect (0)
      DATA:
          "http://10.128.0.2:8765/api/v1/usage"
    /lwfusion/3.1.0/core/parsers (2)
    DATA:
        
     /lwfusion/3.1.0/core/parsers/default (0)
     DATA:
         {
           "id" : "default",
           "enableMediaTypeDetection" : true,
           "maxParserDepth" : 16,
           "parserStages" : [ {
             "type" : "archive",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "244692ec-57c8-4fb0-a127-d5875ba809d0",
             "alwaysDetect" : true,
             "inheritMediaTypes" : true
           }, {
             "type" : "csv",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "db318312-27f1-4308-a376-3cf8e2e4a2f4",
             "charset" : "detect",
             "ignoreBOM" : false,
             "autoDetect" : true,
             "hasHeaders" : true,
             "headers" : [ ],
             "fillValue" : "<FILL>",
             "trimWhitespace" : true,
             "skipEmptyLines" : true,
             "includeRowNumber" : true,
             "commentHandling" : "ignore",
             "maxRowLength" : 10485760,
             "maxNumColumns" : 1000,
             "maxColumnChars" : 10485760,
             "columnHandling" : "default",
             "inheritMediaTypes" : true
           }, {
             "type" : "json",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "74f2f531-55db-467c-8580-67f1e5cd3b90",
             "splitArrays" : true,
             "includePath" : false,
             "mappings" : [ ],
             "listHandling" : "multivalued",
             "inheritMediaTypes" : true
           }, {
             "type" : "xml",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "f400ea05-c959-4369-a51c-5a033a5a0c95",
             "rootPaths" : [ "/" ],
             "maxSize" : 65536,
             "listHandling" : "multivalued",
             "inheritMediaTypes" : true
           }, {
             "type" : "html",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "74426b09-f6bd-4e21-ad8a-142b06ee5654",
             "charset" : "detect",
             "mappings" : [ ],
             "keepParent" : true,
             "extractHtmlLinks" : false,
             "extractBodyText" : true,
             "inheritMediaTypes" : true
           }, {
             "type" : "text",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "234b99f9-1f4d-417a-ac14-154fabe6460d",
             "charset" : "detect",
             "ignoreBOM" : false,
             "maxLength" : 1048576,
             "maxLineLength" : 1048576,
             "outputField" : "body",
             "splitLines" : false,
             "skipEmptyLines" : false,
             "skipHeaderLines" : 0,
             "trimWhitespace" : false,
             "commentHandling" : "include",
             "comment" : "#",
             "commentField" : "comment",
             "inheritMediaTypes" : true
           }, {
             "type" : "tika",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "9c3e916f-9eca-42da-8530-80f8d7c8cccc",
             "includeImages" : false,
             "flattenCompound" : true,
             "addFailedDocs" : false,
             "addOriginalContent" : false,
             "contentEncoding" : "binary",
             "returnXml" : false,
             "keepOriginalStructure" : false,
             "extractHtmlLinks" : false,
             "extractOtherLinks" : false,
             "excludeContentTypes" : [ ],
             "zipBombCompressionRatio" : 200,
             "inheritMediaTypes" : true
           }, {
             "type" : "fallback",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "986a4970-2fa4-420d-9d02-094d03eea9c2",
             "metadataOnly" : false,
             "maxBytesToKeep" : 1048576,
             "inheritMediaTypes" : true
           } ]
         }
     /lwfusion/3.1.0/core/parsers/_lw_tmp_1508538407 (0)
     DATA:
         {
           "id" : "_lw_tmp_1508538407",
           "enableMediaTypeDetection" : true,
           "maxParserDepth" : 16,
           "parserStages" : [ {
             "type" : "archive",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "244692ec-57c8-4fb0-a127-d5875ba809d0",
             "alwaysDetect" : true,
             "inheritMediaTypes" : true
           }, {
             "type" : "csv",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "db318312-27f1-4308-a376-3cf8e2e4a2f4",
             "charset" : "detect",
             "ignoreBOM" : false,
             "autoDetect" : true,
             "hasHeaders" : true,
             "headers" : [ ],
             "fillValue" : "<FILL>",
             "trimWhitespace" : true,
             "skipEmptyLines" : true,
             "includeRowNumber" : true,
             "commentHandling" : "ignore",
             "maxRowLength" : 10485760,
             "maxNumColumns" : 1000,
             "maxColumnChars" : 10485760,
             "columnHandling" : "default",
             "inheritMediaTypes" : true
           }, {
             "type" : "json",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "74f2f531-55db-467c-8580-67f1e5cd3b90",
             "splitArrays" : true,
             "includePath" : false,
             "mappings" : [ ],
             "listHandling" : "multivalued",
             "inheritMediaTypes" : true
           }, {
             "type" : "xml",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "f400ea05-c959-4369-a51c-5a033a5a0c95",
             "rootPaths" : [ "/" ],
             "maxSize" : 65536,
             "listHandling" : "multivalued",
             "inheritMediaTypes" : true
           }, {
             "type" : "html",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "74426b09-f6bd-4e21-ad8a-142b06ee5654",
             "charset" : "detect",
             "mappings" : [ ],
             "keepParent" : true,
             "extractHtmlLinks" : false,
             "extractBodyText" : true,
             "inheritMediaTypes" : true
           }, {
             "type" : "text",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "234b99f9-1f4d-417a-ac14-154fabe6460d",
             "charset" : "detect",
             "ignoreBOM" : false,
             "maxLength" : 1048576,
             "maxLineLength" : 1048576,
             "outputField" : "body",
             "splitLines" : false,
             "skipEmptyLines" : false,
             "skipHeaderLines" : 0,
             "trimWhitespace" : false,
             "commentHandling" : "include",
             "comment" : "#",
             "commentField" : "comment",
             "inheritMediaTypes" : true
           }, {
             "type" : "tika",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "9c3e916f-9eca-42da-8530-80f8d7c8cccc",
             "includeImages" : false,
             "flattenCompound" : true,
             "addFailedDocs" : false,
             "addOriginalContent" : false,
             "contentEncoding" : "binary",
             "returnXml" : false,
             "keepOriginalStructure" : false,
             "extractHtmlLinks" : false,
             "extractOtherLinks" : false,
             "excludeContentTypes" : [ ],
             "zipBombCompressionRatio" : 200,
             "inheritMediaTypes" : true
           }, {
             "type" : "fallback",
             "enabled" : true,
             "mediaTypes" : [ ],
             "pathPatterns" : [ ],
             "errorHandling" : "mark",
             "id" : "986a4970-2fa4-420d-9d02-094d03eea9c2",
             "metadataOnly" : false,
             "maxBytesToKeep" : 1048576,
             "inheritMediaTypes" : true
           } ]
         }
    /lwfusion/3.1.0/core/conf (3)
    DATA:
        
     /lwfusion/3.1.0/core/conf/catalog.jdbc.user (0)
     DATA:
         catalog_jdbc_service_account
     /lwfusion/3.1.0/core/conf/catalog.jdbc.pass (0)
     DATA:
         default@BTEpNZPf6X11COneg0GkHDk35EDCjyY81LQCWMzlj6cBAAABXzuFeLFzxcrqy2QZsJjrnuMZF/KCTwRnrChZ5OtVGLjrzAx7pR9IE54SRVzrZvaFqCb/0Er6K3oeh7bzBIpP++/z++Q1
     /lwfusion/3.1.0/core/conf/catalog.jdbc.pass.encrypted (0)
     DATA:
         true
    /lwfusion/3.1.0/core/leaders (2)
    DATA:
        
     /lwfusion/3.1.0/core/leaders/DefaultListener (1)
     DATA:
         
      /lwfusion/3.1.0/core/leaders/DefaultListener/_c_6e1a69f6-e6b8-4a16-a654-90676d30b4a0-latch-0000000000 (0)
      DATA:
          
     /lwfusion/3.1.0/core/leaders/UsageMonitor (2)
     DATA:
         
      /lwfusion/3.1.0/core/leaders/UsageMonitor/_c_8c4b2fa0-7a48-49d9-93ee-feb87bd3ea03-latch-0000000001 (0)
      DATA:
          
      /lwfusion/3.1.0/core/leaders/UsageMonitor/_c_c3d2172e-38d4-46ad-820d-1e1ec8a068ea-latch-0000000000 (0)
      DATA:
          
    /lwfusion/3.1.0/core/locks (13)
    DATA:
        
     /lwfusion/3.1.0/core/locks/KeyRingProvider (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/KeyRingProvider/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/KeyRingProvider/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/AbstractDefaultScheduleRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/AbstractDefaultScheduleRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/AbstractDefaultScheduleRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/SolrHistoryStore (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/SolrHistoryStore/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/SolrHistoryStore/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/RecommenderCollectionRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/RecommenderCollectionRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/RecommenderCollectionRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/AuditComponent (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/AuditComponent/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/AuditComponent/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/JobsHistoryCollectionRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/JobsHistoryCollectionRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/JobsHistoryCollectionRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/DefaultCollectionRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/DefaultCollectionRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/DefaultCollectionRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/class com.lucidworks.apollo.jobs.SystemLogCleanupTaskRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/class com.lucidworks.apollo.jobs.SystemLogCleanupTaskRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/class com.lucidworks.apollo.jobs.SystemLogCleanupTaskRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/SolrMetricLoggingComponent (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/SolrMetricLoggingComponent/_c_7d638bc9-fb8c-4bfd-a000-12bb145ba40e-latch-0000000000 (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/SolrMetricLoggingComponent/_c_67f25242-53d0-45f9-8e44-adc77e8f1fca-latch-0000000001 (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/class com.lucidworks.apollo.jobs.AuditLogCleanupTaskRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/class com.lucidworks.apollo.jobs.AuditLogCleanupTaskRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/class com.lucidworks.apollo.jobs.AuditLogCleanupTaskRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/SolrLoggingComponent (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/SolrLoggingComponent/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/SolrLoggingComponent/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/BlobCollectionRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/BlobCollectionRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/BlobCollectionRegistrar/locks (0)
      DATA:
          
     /lwfusion/3.1.0/core/locks/MetricSchedulesRegistrar (2)
     DATA:
         
      /lwfusion/3.1.0/core/locks/MetricSchedulesRegistrar/leases (0)
      DATA:
          
      /lwfusion/3.1.0/core/locks/MetricSchedulesRegistrar/locks (0)
      DATA:
          
    /lwfusion/3.1.0/core/spark-drivers (0)
    DATA:
        
    /lwfusion/3.1.0/core/features (5)
    DATA:
        
     /lwfusion/3.1.0/core/features/partitionByTime (0)
     DATA:
         {
           "name" : "partitionByTime",
           "defaults" : { },
           "callback" : {
             "uri" : "service://collections/{collection}/partitions/_changed",
             "method" : "post",
             "queryParams" : { },
             "headers" : { }
           }
         }
     /lwfusion/3.1.0/core/features/signals (0)
     DATA:
         {
           "name" : "signals",
           "defaults" : { },
           "callback" : {
             "uri" : "service://signals/_changed",
             "method" : "post",
             "queryParams" : { },
             "headers" : { }
           }
         }
     /lwfusion/3.1.0/core/features/dynamicSchema (0)
     DATA:
         {
           "name" : "dynamicSchema",
           "defaults" : { },
           "callback" : {
             "uri" : "service://dynamicSchema/_changed",
             "method" : "post",
             "queryParams" : { },
             "headers" : { }
           }
         }
     /lwfusion/3.1.0/core/features/searchLogs (0)
     DATA:
         {
           "name" : "searchLogs",
           "defaults" : { },
           "callback" : {
             "uri" : "service://searchLogs/_changed",
             "method" : "post",
             "queryParams" : { },
             "headers" : { }
           }
         }
     /lwfusion/3.1.0/core/features/recommendations (0)
     DATA:
         {
           "name" : "recommendations",
           "defaults" : {
             "idField" : "id",
             "itemsForUser" : true,
             "itemsForQuery" : false,
             "itemsForItem" : true,
             "queriesForQuery" : false
           },
           "callback" : {
             "uri" : "service://recommend/_changed",
             "method" : "post",
             "queryParams" : { },
             "headers" : { }
           }
         }
    /lwfusion/3.1.0/core/collections (12)
    DATA:
        
     /lwfusion/3.1.0/core/collections/system_metrics (0)
     DATA:
         {
           "id" : "system_metrics",
           "createdAt" : "2017-10-20T20:41:04.816Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "system_metrics",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "METRICS",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/system_blobs (0)
     DATA:
         {
           "id" : "system_blobs",
           "createdAt" : "2017-10-20T20:40:26.449Z",
           "searchClusterId" : "default",
           "commitWithin" : -1,
           "features" : { },
           "solrParams" : {
             "name" : "system_blobs",
             "numShards" : 1,
             "replicationFactor" : 1
           },
           "type" : "BLOBS",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/default (0)
     DATA:
         {
           "id" : "default",
           "createdAt" : "2017-10-20T20:40:50.024Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : {
             "searchLogs" : {
               "name" : "searchLogs",
               "collectionId" : "default",
               "params" : { },
               "enabled" : true
             },
             "signals" : {
               "name" : "signals",
               "collectionId" : "default",
               "params" : { },
               "enabled" : true
             }
           },
           "solrParams" : {
             "name" : "default",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "DATA",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/system_messages (0)
     DATA:
         {
           "id" : "system_messages",
           "createdAt" : "2017-10-20T20:40:30.884Z",
           "searchClusterId" : "default",
           "commitWithin" : -1,
           "features" : { },
           "solrParams" : {
             "name" : "system_messages",
             "numShards" : 1,
             "replicationFactor" : 1
           },
           "type" : "MESSAGES",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/default_logs (0)
     DATA:
         {
           "id" : "default_logs",
           "createdAt" : "2017-10-20T20:41:01.106Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "default_logs",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "SEARCHLOGS",
           "relatedCollectionId" : "default",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/default_signals (0)
     DATA:
         {
           "id" : "default_signals",
           "createdAt" : "2017-10-20T20:40:53.998Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "default_signals",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "SIGNALS",
           "relatedCollectionId" : "default",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/recommender_models (0)
     DATA:
         {
           "id" : "recommender_models",
           "createdAt" : "2017-10-20T20:40:42.776Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "recommender_models",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "RECOMMENDATIONS",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/default_signals_aggr (0)
     DATA:
         {
           "id" : "default_signals_aggr",
           "createdAt" : "2017-10-20T20:40:57.432Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "default_signals_aggr",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "SIGNALS_AGGREGATION",
           "relatedCollectionId" : "default",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/logs (0)
     DATA:
         {
           "id" : "logs",
           "createdAt" : "2017-10-20T20:40:34.791Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "logs",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "LOGS",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/audit_logs (0)
     DATA:
         {
           "id" : "audit_logs",
           "createdAt" : "2017-10-20T20:40:38.301Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "audit_logs",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "LOGS",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/system_jobs_history (0)
     DATA:
         {
           "id" : "system_jobs_history",
           "createdAt" : "2017-10-20T20:40:46.494Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "system_jobs_history",
             "numShards" : 2,
             "replicationFactor" : 1,
             "maxShardsPerNode" : 2
           },
           "type" : "JOB_HISTORY",
           "metadata" : { }
         }
     /lwfusion/3.1.0/core/collections/system_history (0)
     DATA:
         {
           "id" : "system_history",
           "createdAt" : "2017-10-20T20:39:49.066Z",
           "searchClusterId" : "default",
           "commitWithin" : 10000,
           "features" : { },
           "solrParams" : {
             "name" : "system_history",
             "numShards" : 1,
             "replicationFactor" : 1
           },
           "type" : "HISTORY",
           "metadata" : { }
         }
    /lwfusion/3.1.0/core/spark-masters (0)
    DATA:
        
    /lwfusion/3.1.0/core/links (10)
    DATA:
        
     /lwfusion/3.1.0/core/links/1ad776cc-08fe-db19-4440-00ae470e3685 (0)
     DATA:
         {
           "subject" : "datasource:web-crawl",
           "object" : "index-pipeline:Bahn_DE-default",
           "linkType" : "dependsOn"
         }
     /lwfusion/3.1.0/core/links/3e392c38-06ac-e724-67ea-05cb01b02946 (0)
     DATA:
         {
           "subject" : "datasource:web-crawl",
           "object" : "parser:default",
           "linkType" : "dependsOn"
         }
     /lwfusion/3.1.0/core/links/ffcbc4e4-49d5-fd49-7a22-61622417339a (0)
     DATA:
         {
           "subject" : "index-profile:default-default",
           "object" : "collection:default",
           "linkType" : "relatesTo"
         }
     /lwfusion/3.1.0/core/links/04f88baa-a923-1fd1-1106-9ab4faea9b72 (0)
     DATA:
         {
           "subject" : "group:40f61f6d-8ceb-45c7-b35e-fde2b40fa6ce",
           "object" : "collection:default",
           "linkType" : "relatesTo"
         }
     /lwfusion/3.1.0/core/links/6888a34b-7f85-9441-4e13-863579d37ade (0)
     DATA:
         {
           "subject" : "datasource:web-crawl",
           "object" : "collection:default",
           "linkType" : "relatesTo"
         }
     /lwfusion/3.1.0/core/links/c2cfddc0-5a71-6ca9-6a95-eb399226a086 (0)
     DATA:
         {
           "subject" : "index-profile:default-default",
           "object" : "index-pipeline:default",
           "linkType" : "relatesTo"
         }
     /lwfusion/3.1.0/core/links/02483462-6f22-25e1-0eee-6248c78dd669 (0)
     DATA:
         {
           "subject" : "group:40f61f6d-8ceb-45c7-b35e-fde2b40fa6ce",
           "object" : "spark:default_click_signals_aggregation",
           "linkType" : "hasPart"
         }
     /lwfusion/3.1.0/core/links/d524d56a-13ce-f399-904c-f6d8d6af261d (0)
     DATA:
         {
           "subject" : "group:40f61f6d-8ceb-45c7-b35e-fde2b40fa6ce",
           "object" : "collection:default_signals",
           "linkType" : "hasPart"
         }
     /lwfusion/3.1.0/core/links/f94cb204-1421-9889-9c0f-73e3be1268d5 (0)
     DATA:
         {
           "subject" : "group:40f61f6d-8ceb-45c7-b35e-fde2b40fa6ce",
           "object" : "collection:default_signals_aggr",
           "linkType" : "hasPart"
         }
     /lwfusion/3.1.0/core/links/3a69e2cf-3d0c-de90-3a5d-47b0703776e8 (0)
     DATA:
         {
           "subject" : "query-profile:default-default",
           "object" : "collection:default",
           "linkType" : "relatesTo"
         }
    /lwfusion/3.1.0/core/sparkJobs (11)
    DATA:
        
     /lwfusion/3.1.0/core/sparkJobs/hourlyMetricsRollup-gauges (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "hourlyMetricsRollup-gauges",
           "definition" : {
             "id" : "hourlyMetricsRollup-gauges",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "gauge" ],
             "selectQuery" : "value_d:*",
             "timeRange" : "[NOW-1MONTH TO NOW-1DAY]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "value_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "value_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "value_d" ],
               "targetField" : "mean_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "count",
               "sourceFields" : [ "value_d" ],
               "targetField" : "count_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "value_d" ],
               "targetField" : "sum_d",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/dailyMetricsRollup-meters (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "dailyMetricsRollup-meters",
           "definition" : {
             "id" : "dailyMetricsRollup-meters",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "meter" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-13MONTHS TO NOW-1MONTH]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_mean_rate_d" ],
               "targetField" : "mean_mean_rate_d",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/default_click_signals_aggregation (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "default_click_signals_aggregation",
           "definition" : {
             "id" : "default_click_signals_aggregation",
             "groupingFields" : [ "query_s", "doc_id_s", "filters_s" ],
             "signalTypes" : [ "click" ],
             "selectQuery" : "*:*",
             "outputPipeline" : "_system",
             "rollupPipeline" : "_system",
             "rollupAggregator" : "click",
             "aggregator" : "click",
             "sourceRemove" : false,
             "sourceCatchup" : true,
             "outputRollup" : true,
             "statsFields" : [ "aggr_count_i", "count_i", "position_i", "weight_d" ]
           },
           "inputCollection" : "default_signals",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/dailyMetricsRollup-gauges (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "dailyMetricsRollup-gauges",
           "definition" : {
             "id" : "dailyMetricsRollup-gauges",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "gauge" ],
             "selectQuery" : "value_d:*",
             "timeRange" : "[NOW-13MONTHS TO NOW-1MONTH]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "expr",
               "sourceFields" : [ "mean_d", "count_d", "sum_d" ],
               "targetField" : "mean_d",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "associative",
                 "value" : "true"
               }, {
                 "key" : "expr",
                 "value" : "sum_d / count_d"
               } ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_d" ],
               "targetField" : "count_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "sum_d" ],
               "targetField" : "sum_d",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/dailyMetricsRollup-histograms (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "dailyMetricsRollup-histograms",
           "definition" : {
             "id" : "dailyMetricsRollup-histograms",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "histogram" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-13MONTHS TO NOW-1MONTH]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p50_d" ],
               "targetField" : "p50_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p75_d" ],
               "targetField" : "p75_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p98_d" ],
               "targetField" : "p98_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p99_d" ],
               "targetField" : "p99_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p999_d" ],
               "targetField" : "p999_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_mean_rate_d" ],
               "targetField" : "mean_mean_rate_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_mean_duration_d" ],
               "targetField" : "mean_mean_duration_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "quantiles_ds" ],
               "targetField" : "quantiles_ds",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "quantiles_ls" ],
               "targetField" : "quantiles_ls",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/dailyMetricsRollup-timers (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "dailyMetricsRollup-timers",
           "definition" : {
             "id" : "dailyMetricsRollup-timers",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "timer" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-13MONTHS TO NOW-1MONTH]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p50_d" ],
               "targetField" : "p50_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p75_d" ],
               "targetField" : "p75_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p98_d" ],
               "targetField" : "p98_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p99_d" ],
               "targetField" : "p99_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p999_d" ],
               "targetField" : "p999_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_mean_rate_d" ],
               "targetField" : "mean_mean_rate_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_mean_duration_d" ],
               "targetField" : "mean_mean_duration_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "quantiles_ds" ],
               "targetField" : "quantiles_ds",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "quantiles_ls" ],
               "targetField" : "quantiles_ls",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/hourlyMetricsRollup-timers (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "hourlyMetricsRollup-timers",
           "definition" : {
             "id" : "hourlyMetricsRollup-timers",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "timer" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-1MONTH TO NOW-1DAY]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_rate_d" ],
               "targetField" : "mean_mean_rate_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_d" ],
               "targetField" : "mean_mean_duration_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p50_d" ],
               "targetField" : "p50_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p75_d" ],
               "targetField" : "p75_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p98_d" ],
               "targetField" : "p98_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p99_d" ],
               "targetField" : "p99_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p999_d" ],
               "targetField" : "p999_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "values_ds" ],
               "targetField" : "quantiles_ds",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "values_ls" ],
               "targetField" : "quantiles_ls",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             }, {
               "type" : "histogram",
               "sourceFields" : [ "values_ds" ],
               "targetField" : "histogram_ds",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "histogram",
               "sourceFields" : [ "values_ls" ],
               "targetField" : "histogram_ls",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/hourlyMetricsRollup-counters (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "hourlyMetricsRollup-counters",
           "definition" : {
             "id" : "hourlyMetricsRollup-counters",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "counter" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-1MONTH TO NOW-1DAY]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "count_l" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/hourlyMetricsRollup-meters (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "hourlyMetricsRollup-meters",
           "definition" : {
             "id" : "hourlyMetricsRollup-meters",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "meter" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-1MONTH TO NOW-1DAY]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "count_l" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_rate_d" ],
               "targetField" : "mean_mean_rate_d",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/hourlyMetricsRollup-histograms (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "hourlyMetricsRollup-histograms",
           "definition" : {
             "id" : "hourlyMetricsRollup-histograms",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "histogram" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-1MONTH TO NOW-1DAY]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "min",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "mean_d" ],
               "targetField" : "mean_mean_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p50_d" ],
               "targetField" : "p50_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p75_d" ],
               "targetField" : "p75_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p98_d" ],
               "targetField" : "p98_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p99_d" ],
               "targetField" : "p99_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "mean",
               "sourceFields" : [ "p999_d" ],
               "targetField" : "p999_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "values_ds" ],
               "targetField" : "quantiles_ds",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             }, {
               "type" : "quantiles",
               "sourceFields" : [ "values_ls" ],
               "targetField" : "quantiles_ls",
               "mapper" : false,
               "parameters" : [ {
                 "key" : "multiValued",
                 "value" : "true"
               } ]
             }, {
               "type" : "histogram",
               "sourceFields" : [ "values_ds" ],
               "targetField" : "histogram_ds",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "histogram",
               "sourceFields" : [ "values_ls" ],
               "targetField" : "histogram_ls",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
     /lwfusion/3.1.0/core/sparkJobs/dailyMetricsRollup-counters (0)
     DATA:
         {
           "type" : "aggregation",
           "id" : "dailyMetricsRollup-counters",
           "definition" : {
             "id" : "dailyMetricsRollup-counters",
             "groupingFields" : [ "name_s", "server_s" ],
             "signalTypes" : [ "counter" ],
             "selectQuery" : "*:*",
             "timeRange" : "[NOW-13MONTHS TO NOW-1MONTH]",
             "outputPipeline" : "default",
             "outputCollection" : "system_metrics",
             "sourceRemove" : true,
             "sourceCatchup" : false,
             "outputRollup" : false,
             "aggregates" : [ {
               "type" : "max",
               "sourceFields" : [ "max_d" ],
               "targetField" : "max_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "min",
               "sourceFields" : [ "min_d" ],
               "targetField" : "min_d",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "max",
               "sourceFields" : [ "count_l" ],
               "targetField" : "count_l",
               "mapper" : false,
               "parameters" : [ ]
             }, {
               "type" : "sum",
               "sourceFields" : [ "count_increment_l" ],
               "targetField" : "count_increment_l",
               "mapper" : false,
               "parameters" : [ ]
             } ]
           },
           "inputCollection" : "system_metrics",
           "rows" : 10000
         }
    /lwfusion/3.1.0/core/tasks (3)
    DATA:
        
     /lwfusion/3.1.0/core/tasks/delete-old-system-logs (0)
     DATA:
         {
           "type" : "system-logs-cleanup",
           "id" : "delete-old-system-logs",
           "collection" : "logs",
           "days" : 30,
           "type" : "system-logs-cleanup",
           "type" : "system-logs-cleanup"
         }
     /lwfusion/3.1.0/core/tasks/delete-old-audit-logs (0)
     DATA:
         {
           "type" : "system-logs-cleanup",
           "id" : "delete-old-audit-logs",
           "collection" : "audit_logs",
           "days" : 30,
           "type" : "system-logs-cleanup",
           "type" : "system-logs-cleanup"
         }
     /lwfusion/3.1.0/core/tasks/delete-old-metrics (0)
     DATA:
         {
           "type" : "rest-call",
           "id" : "delete-old-metrics",
           "callParams" : {
             "uri" : "solr://system_metrics/update",
             "method" : "get",
             "queryParams" : {
               "wt" : "json",
               "stream.body" : "<delete><query>timestamp_tdt:[* TO NOW-13MONTHS]</query></delete>"
             },
             "headers" : { }
           },
           "type" : "rest-call",
           "schedule.createTime" : "2017-10-20T20:45:43.175Z",
           "schedule.endTime" : null,
           "type" : "rest-call",
           "schedule.creatorType" : "system",
           "schedule.startTime" : "2017-10-20T20:45:43.175Z",
           "schedule.adapted" : "true",
           "schedule.creatorId" : "MetricSchedulesRegistrar"
         }
    /lwfusion/3.1.0/core/cluster-id (0)
    DATA:
        1c8dc826-b350-4005-b869-465a9a26218d
    /lwfusion/3.1.0/core/index-profiles (1)
    DATA:
        
     /lwfusion/3.1.0/core/index-profiles/default (0)
     DATA:
         {
           "pipelines" : {
             "default" : "default"
           }
         }
    /lwfusion/3.1.0/core/spark-drivers-scripted (0)
    DATA:
        
    /lwfusion/3.1.0/core/groups (1)
    DATA:
        
     /lwfusion/3.1.0/core/groups/40f61f6d-8ceb-45c7-b35e-fde2b40fa6ce (0)
     DATA:
         {
           "id" : "40f61f6d-8ceb-45c7-b35e-fde2b40fa6ce",
           "name" : "signals-default",
           "isSystem" : true,
           "description" : "Collection 'default' objects for signals support"
         }
    /lwfusion/3.1.0/core/services (47)
    DATA:
        
     /lwfusion/3.1.0/core/services/aggregator::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/aggregator::v1/b14962e8-98bd-4a1f-a3ce-68e299c3a02d (0)
      DATA:
          {"name":"aggregator::v1","id":"b14962e8-98bd-4a1f-a3ce-68e299c3a02d","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SignalAggregatorResource","uri":"/api/v1/aggregator","baseApiUri":"/v1","methods":[{"uri":"/api/v1/aggregator","name":"getWorkerStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/aggregations","name":"postAggregation","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/aggregator/aggregations","name":"listAggregations","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs/{collection}","name":"listJobs","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs/{collection}","name":"execUndefinedAggregation","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"time","type":"String"},{"name":"rows","type":"String"},{"name":"sync","type":"String"}],"hasEntity":true},{"uri":"/api/v1/aggregator/jobs/{collection}","name":"stopJobsForCollection","verb":"DELETE","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/aggregations/{id}","name":"getAggregation","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/aggregations/{id}","name":"deleteAggregation","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/aggregations/{id}","name":"updateAggregation","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/aggregator/jobs","name":"stopAllJobs","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs","name":"listAllJobs","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs/{collection}/{id}","name":"execDefinedAggregation","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"queryParams":[{"name":"time","type":"String"},{"name":"rows","type":"String"},{"name":"sync","type":"String"}],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs/{collection}/{id}","name":"getJobStatus","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs/{collection}/{id}","name":"stopJob","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/jobs/{collection}/{id}/output","name":"deleteJobOutput","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"queryParams":[{"name":"jobId","type":"String"}],"hasEntity":false},{"uri":"/api/v1/aggregator/spark/driver","name":"stopSparkDriver","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/aggregations/schema","name":"aggregationsSchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/aggregator/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988099,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/aggregator","variable":false}]}}
     /lwfusion/3.1.0/core/services/scheduler::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/scheduler::v1/2856d13b-9210-4e71-a31d-f7dc1578bae1 (0)
      DATA:
          {"name":"scheduler::v1","id":"2856d13b-9210-4e71-a31d-f7dc1578bae1","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SchedulerAdaptorResource","uri":"/api/v1/scheduler","baseApiUri":"/v1","methods":[{"uri":"/api/v1/scheduler/schedules/{id}","name":"getSchedule","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/schedules/{id}","name":"updateSchedule","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/schedules/{id}","name":"deleteSchedule","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/schedules","name":"addSchedule","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/schedules","name":"deleteSchedules","verb":"DELETE","pathParams":[],"queryParams":[{"name":"creatorType","type":"String"},{"name":"creatorId","type":"String"}],"hasEntity":false},{"uri":"/api/v1/scheduler/schedules","name":"getSchedules","verb":"GET","pathParams":[],"queryParams":[{"name":"creatorType","type":"String"},{"name":"creatorId","type":"String"}],"hasEntity":false},{"uri":"/api/v1/scheduler/jobs","name":"getRunningJobs","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/jobs","name":"stopRunningJobs","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/jobs/{id}","name":"getRunningJob","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/jobs/{id}","name":"stopRunningJob","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/scheduler/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988221,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/scheduler","variable":false}]}}
     /lwfusion/3.1.0/core/services/usage::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/usage::v1/1e614bbb-3520-4678-a5ef-f74b6b072b5e (0)
      DATA:
          {"name":"usage::v1","id":"1e614bbb-3520-4678-a5ef-f74b6b072b5e","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.UsageResource","uri":"/connectors/v1/usage","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/usage","name":"getUsageMetrics","verb":"GET","pathParams":[],"queryParams":[{"name":"local","type":"Boolean"},{"name":"includeServerInfo","type":"Boolean"}],"hasEntity":false},{"uri":"/connectors/v1/usage/counters/{key}","name":"getCounter","verb":"GET","pathParams":[{"name":"key","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/usage/counters/{key}","name":"incrementCounter","verb":"PUT","pathParams":[{"name":"key","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/usage/counters","name":"getCounters","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/usage/id","name":"getUUID","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/usage/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089998,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/usage","variable":false}]}}
      /lwfusion/3.1.0/core/services/usage::v1/92056206-f657-4f80-aa10-5ce70a6be4a3 (0)
      DATA:
          {"name":"usage::v1","id":"92056206-f657-4f80-aa10-5ce70a6be4a3","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.UsageResource","uri":"/api/v1/usage","baseApiUri":"/v1","methods":[{"uri":"/api/v1/usage","name":"getUsageMetrics","verb":"GET","pathParams":[],"queryParams":[{"name":"local","type":"Boolean"},{"name":"includeServerInfo","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/usage/counters","name":"getCounters","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/usage/counters/{key}","name":"getCounter","verb":"GET","pathParams":[{"name":"key","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/usage/counters/{key}","name":"incrementCounter","verb":"PUT","pathParams":[{"name":"key","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/usage/id","name":"getUUID","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/usage/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988385,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/usage","variable":false}]}}
     /lwfusion/3.1.0/core/services/dynamicSchema::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/dynamicSchema::v1/c60313cd-eb35-4f67-b355-29d26ddbbefe (0)
      DATA:
          {"name":"dynamicSchema::v1","id":"c60313cd-eb35-4f67-b355-29d26ddbbefe","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ManagedSchemaResource","uri":"/api/v1/dynamicSchema","baseApiUri":"/v1","methods":[{"uri":"/api/v1/dynamicSchema/_changed","name":"changeCallback","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/dynamicSchema/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988304,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/dynamicSchema","variable":false}]}}
     /lwfusion/3.1.0/core/services/searchCluster::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/searchCluster::v1/280c5518-0c12-4eb7-affe-7583a8e4748c (0)
      DATA:
          {"name":"searchCluster::v1","id":"280c5518-0c12-4eb7-affe-7583a8e4748c","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SearchClusterResource","uri":"/connectors/v1/searchCluster","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/searchCluster","name":"listSearchClusters","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/searchCluster","name":"createSearchCluster","verb":"POST","pathParams":[],"queryParams":[{"name":"validate","type":"Boolean"}],"hasEntity":true},{"uri":"/connectors/v1/searchCluster/_schema","name":"getSchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/searchCluster/{id}","name":"getSearchCluster","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/searchCluster/{id}","name":"deleteSearchCluster","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/searchCluster/{id}","name":"createOrUpdateSearchCluster","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"validate","type":"Boolean"}],"hasEntity":true},{"uri":"/connectors/v1/searchCluster/{id}/systemInfo","name":"getSystemInfo","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"nodeName","type":"String"},{"name":"all","type":"Boolean"}],"hasEntity":false},{"uri":"/connectors/v1/searchCluster/{id}/nodes","name":"getClusterState","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/searchCluster/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089977,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/searchCluster","variable":false}]}}
      /lwfusion/3.1.0/core/services/searchCluster::v1/39511487-0606-4021-a8a7-096ef4f6299d (0)
      DATA:
          {"name":"searchCluster::v1","id":"39511487-0606-4021-a8a7-096ef4f6299d","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SearchClusterResource","uri":"/api/v1/searchCluster","baseApiUri":"/v1","methods":[{"uri":"/api/v1/searchCluster","name":"listSearchClusters","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/searchCluster","name":"createSearchCluster","verb":"POST","pathParams":[],"queryParams":[{"name":"validate","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/searchCluster/_schema","name":"getSchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/searchCluster/{id}","name":"getSearchCluster","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/searchCluster/{id}","name":"deleteSearchCluster","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/searchCluster/{id}","name":"createOrUpdateSearchCluster","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"validate","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/searchCluster/{id}/nodes","name":"getClusterState","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/searchCluster/{id}/systemInfo","name":"getSystemInfo","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"nodeName","type":"String"},{"name":"all","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/searchCluster/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988370,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/searchCluster","variable":false}]}}
     /lwfusion/3.1.0/core/services/solrAdmin::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/solrAdmin::v1/af579726-3022-4276-98dc-60ba059c7b90 (0)
      DATA:
          {"name":"solrAdmin::v1","id":"af579726-3022-4276-98dc-60ba059c7b90","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SolrAdminProxyResource","uri":"/connectors/v1/solrAdmin","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyPostRequestToSolr","verb":"POST","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyPutRequestToSolr","verb":"PUT","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyDeleteRequestToSolr","verb":"DELETE","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyHeadRequestToSolr","verb":"HEAD","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyOptionsRequestToSolr","verb":"OPTIONS","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyGetRequestToSolr","verb":"GET","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solrAdmin/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089984,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/solrAdmin","variable":false}]}}
      /lwfusion/3.1.0/core/services/solrAdmin::v1/9a33e706-b8fd-49ef-abe9-956e4a4e294a (0)
      DATA:
          {"name":"solrAdmin::v1","id":"9a33e706-b8fd-49ef-abe9-956e4a4e294a","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SolrAdminProxyResource","uri":"/api/v1/solrAdmin","baseApiUri":"/v1","methods":[{"uri":"/api/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyGetRequestToSolr","verb":"GET","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyPostRequestToSolr","verb":"POST","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyPutRequestToSolr","verb":"PUT","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyDeleteRequestToSolr","verb":"DELETE","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyHeadRequestToSolr","verb":"HEAD","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solrAdmin/{searchClusterId}/{path:.*}","name":"proxyOptionsRequestToSolr","verb":"OPTIONS","pathParams":[{"name":"searchClusterId","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solrAdmin/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988377,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/solrAdmin","variable":false}]}}
     /lwfusion/3.1.0/core/services/tasks::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/tasks::v1/7fc7bb0b-531b-4963-bb0a-f0e7934ab78b (0)
      DATA:
          {"name":"tasks::v1","id":"7fc7bb0b-531b-4963-bb0a-f0e7934ab78b","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.TaskResource","uri":"/api/v1/tasks","baseApiUri":"/v1","methods":[{"uri":"/api/v1/tasks","name":"createEntity","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/tasks","name":"getAllEntities","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/tasks/{id}","name":"getEntity","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/tasks/{id}","name":"updateEntity","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/tasks/{id}","name":"deleteEntity","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/tasks/_schema","name":"getEntitySchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/tasks/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988169,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/tasks","variable":false}]}}
     /lwfusion/3.1.0/core/services/index-profiles::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/index-profiles::v1/9e3d0200-34c0-4aca-95d8-dd73a519492d (0)
      DATA:
          {"name":"index-profiles::v1","id":"9e3d0200-34c0-4aca-95d8-dd73a519492d","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexProfileResource","uri":"/api/v1/collections/{collection}/index-profiles","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/index-profiles","name":"removeProfiles","verb":"DELETE","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/index-profiles","name":"listProfiles","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/index-profiles/{alias}/index","name":"indexPipelineDocument","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/index-profiles/{alias}/index","name":"index","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"},{"name":"contentSourceName","type":"String"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/index-profiles/{alias}/debug","name":"debug","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/index-profiles/{alias}","name":"getProfile","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/index-profiles/{alias}","name":"removeProfile","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/index-profiles/{alias}","name":"addProfile","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/index-profiles/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988195,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/index-profiles","variable":false}]}}
      /lwfusion/3.1.0/core/services/index-profiles::v1/037ab251-6357-40a7-8b2d-d206ec5cc8b8 (0)
      DATA:
          {"name":"index-profiles::v1","id":"037ab251-6357-40a7-8b2d-d206ec5cc8b8","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexProfileResource","uri":"/connectors/v1/collections/{collection}/index-profiles","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/collections/{collection}/index-profiles","name":"removeProfiles","verb":"DELETE","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/collections/{collection}/index-profiles","name":"listProfiles","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/collections/{collection}/index-profiles/{alias}/index","name":"indexPipelineDocument","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/collections/{collection}/index-profiles/{alias}/index","name":"index","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"},{"name":"contentSourceName","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/collections/{collection}/index-profiles/{alias}/debug","name":"debug","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/collections/{collection}/index-profiles/{alias}","name":"addProfile","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/collections/{collection}/index-profiles/{alias}","name":"getProfile","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/collections/{collection}/index-profiles/{alias}","name":"removeProfile","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/collections/{collection}/index-profiles/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532087517,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/index-profiles","variable":false}]}}
     /lwfusion/3.1.0/core/services/stopwords::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/stopwords::v1/3d43ef1f-e033-4b7c-b275-455389d81b0b (0)
      DATA:
          {"name":"stopwords::v1","id":"3d43ef1f-e033-4b7c-b275-455389d81b0b","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.deprecated.StopwordsResource","uri":"/api/v1/stopwords","baseApiUri":"/v1","methods":[{"uri":"/api/v1/stopwords/{collection}","name":"importResource","verb":"PUT","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/stopwords/{collection}","name":"exportResource","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/stopwords/{collection}","name":"get","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/stopwords/{collection}","name":"put","verb":"PUT","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/stopwords/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988320,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/stopwords","variable":false}]}}
     /lwfusion/3.1.0/core/services/objects::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/objects::v1/91da1935-be80-4939-9d04-e18034437bf6 (0)
      DATA:
          {"name":"objects::v1","id":"91da1935-be80-4939-9d04-e18034437bf6","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ObjectExportImportResource","uri":"/api/v1/objects","baseApiUri":"/v1","methods":[{"uri":"/api/v1/objects/validate","name":"validate","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/objects/export","name":"export","verb":"GET","pathParams":[],"queryParams":[{"name":"type","type":"List"},{"name":"filterPolicy","type":"FilterPolicy"},{"name":"deep","type":"boolean"}],"hasEntity":false},{"uri":"/api/v1/objects/import","name":"importData","verb":"POST","pathParams":[],"queryParams":[{"name":"importPolicy","type":"ImportPolicy"}],"hasEntity":true},{"uri":"/api/v1/objects/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988296,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/objects","variable":false}]}}
     /lwfusion/3.1.0/core/services/index-pipeline-templates::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/index-pipeline-templates::v1/4308140c-585b-41a1-b1db-5dc80ac980aa (0)
      DATA:
          {"name":"index-pipeline-templates::v1","id":"4308140c-585b-41a1-b1db-5dc80ac980aa","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexPipelineTemplateResource","uri":"/api/v1/templates/index-pipelines","baseApiUri":"/v1","methods":[{"uri":"/api/v1/templates/index-pipelines","name":"getTemplates","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/templates/index-pipelines/{templateId}","name":"getTemplate","verb":"GET","pathParams":[{"name":"templateId","type":"String"}],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/api/v1/templates/index-pipelines/default","name":"getDefaultTemplate","verb":"GET","pathParams":[],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/api/v1/templates/index-pipelines/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988190,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/templates/index-pipelines","variable":false}]}}
      /lwfusion/3.1.0/core/services/index-pipeline-templates::v1/ab024d8f-43ac-4f07-acaa-a3edac51c527 (0)
      DATA:
          {"name":"index-pipeline-templates::v1","id":"ab024d8f-43ac-4f07-acaa-a3edac51c527","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexPipelineTemplateResource","uri":"/connectors/v1/templates/index-pipelines","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/templates/index-pipelines","name":"getTemplates","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/templates/index-pipelines/default","name":"getDefaultTemplate","verb":"GET","pathParams":[],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/templates/index-pipelines/{templateId}","name":"getTemplate","verb":"GET","pathParams":[{"name":"templateId","type":"String"}],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/templates/index-pipelines/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532087502,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/templates/index-pipelines","variable":false}]}}
     /lwfusion/3.1.0/core/services/recommend::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/recommend::v1/258988ea-0526-44e3-8e6a-343eb9264a2a (0)
      DATA:
          {"name":"recommend::v1","id":"258988ea-0526-44e3-8e6a-343eb9264a2a","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.RecommendationResource","uri":"/api/v1/recommend","baseApiUri":"/v1","methods":[{"uri":"/api/v1/recommend","name":"postRecommendation","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/recommend/{collection}/itemsForItem","name":"getItemsForItem","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"docId","type":"String"},{"name":"shinglesLimit","type":"int"},{"name":"termsLimit","type":"int"},{"name":"aggrRows","type":"int"},{"name":"rows","type":"int"},{"name":"aggrType","type":"String"}],"hasEntity":false},{"uri":"/api/v1/recommend/_changed","name":"changeCallback","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/recommend/{collection}/queriesForItem","name":"getQueriesForItem","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"docId","type":"String"},{"name":"rows","type":"int"},{"name":"aggrType","type":"String"}],"hasEntity":false},{"uri":"/api/v1/recommend/{collection}/itemsForQuery","name":"getItemsForQuery","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"q","type":"String"},{"name":"rows","type":"Integer"},{"name":"fq","type":"List"},{"name":"aggrRows","type":"Integer"},{"name":"aggrType","type":"String"},{"name":"debug","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/recommend/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531987876,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/recommend","variable":false}]}}
     /lwfusion/3.1.0/core/services/taxonomy::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/taxonomy::v1/d65af47d-569c-4e25-b861-09c1028e1d1d (0)
      DATA:
          {"name":"taxonomy::v1","id":"d65af47d-569c-4e25-b861-09c1028e1d1d","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.TaxonomyResource","uri":"/api/v1/collections/{collection}/taxonomy","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/taxonomy","name":"getRootCategories","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/taxonomy","name":"createRootCategories","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/taxonomy","name":"deleteTaxonomy","verb":"DELETE","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/taxonomy","name":"replaceTaxonomy","verb":"PUT","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/taxonomy/_schema","name":"getSchema","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/taxonomy/{category}","name":"getCategory","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"category","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/taxonomy/{category}","name":"deleteCategory","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"category","type":"String"}],"queryParams":[{"name":"version","type":"String"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/taxonomy/{category}","name":"updateCategory","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"category","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/taxonomy/{category}/children/{child}","name":"addChildCategory","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"category","type":"String"},{"name":"child","type":"String"}],"queryParams":[{"name":"parentVersion","type":"String"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/taxonomy/{category}/children/{child}","name":"removeChildCategory","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"category","type":"String"},{"name":"child","type":"String"}],"queryParams":[{"name":"parentVersion","type":"String"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/taxonomy/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988325,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/taxonomy","variable":false}]}}
     /lwfusion/3.1.0/core/services/zk-import-export::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/zk-import-export::v1/e021794c-0164-4c42-8a61-cf13076d33de (0)
      DATA:
          {"name":"zk-import-export::v1","id":"e021794c-0164-4c42-8a61-cf13076d33de","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ZKImportExportResource","uri":"/api/v1/zk/export","baseApiUri":"/v1","methods":[{"uri":"/api/v1/zk/export/{path:.*}","name":"getNodeInfo","verb":"GET","pathParams":[{"name":"path","type":"String"}],"queryParams":[{"name":"recursive","type":"Boolean"},{"name":"excludePaths","type":"List"},{"name":"includePaths","type":"List"},{"name":"encodeValues","type":"String"},{"name":"ephemeral","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/zk/export/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988337,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/zk/export","variable":false}]}}
     /lwfusion/3.1.0/core/services/links::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/links::v1/f77a8487-c690-4f62-a5de-8c4d6fc091d7 (0)
      DATA:
          {"name":"links::v1","id":"f77a8487-c690-4f62-a5de-8c4d6fc091d7","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.LinkResource","uri":"/api/v1/links","baseApiUri":"/v1","methods":[{"uri":"/api/v1/links","name":"deleteLink","verb":"DELETE","pathParams":[],"queryParams":[{"name":"subject","type":"String"},{"name":"object","type":"String"},{"name":"linkType","type":"String"}],"hasEntity":false},{"uri":"/api/v1/links","name":"listLinks","verb":"GET","pathParams":[],"queryParams":[{"name":"subject","type":"String"},{"name":"object","type":"String"},{"name":"linkType","type":"String"}],"hasEntity":false},{"uri":"/api/v1/links","name":"putLink","verb":"PUT","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/links/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988230,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/links","variable":false}]}}
     /lwfusion/3.1.0/core/services/signals::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/signals::v1/a54ab04e-3d1a-466d-bf83-cee44ccdb9dd (0)
      DATA:
          {"name":"signals::v1","id":"a54ab04e-3d1a-466d-bf83-cee44ccdb9dd","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SignalResource","uri":"/api/v1/signals","baseApiUri":"/v1","methods":[{"uri":"/api/v1/signals/_changed","name":"changeCallback","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/signals/create/{collection}","name":"createSignalsCollections","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/signals/{collection}","name":"createSignals","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"pipeline","type":"String"},{"name":"commit","type":"boolean"},{"name":"async","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/signals/{collection}/i","name":"processIncomingRequest","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/signals/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988117,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/signals","variable":false}]}}
     /lwfusion/3.1.0/core/services/spark::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/spark::v1/88e3c5ce-ea23-4087-bde2-941647cbccf2 (0)
      DATA:
          {"name":"spark::v1","id":"88e3c5ce-ea23-4087-bde2-941647cbccf2","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SparkResource","uri":"/api/v1/spark","baseApiUri":"/v1","methods":[{"uri":"/api/v1/spark/configurations/{id}","name":"updateConfiguration","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/spark/configurations/{id}","name":"getConfiguration","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/configurations/{id}","name":"deleteConfiguration","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/configurations","name":"createConfiguration","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/spark/configurations","name":"listConfigurations","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/jobs/{id}","name":"startJob","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"sync","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/spark/jobs/{id}","name":"getJobStatus","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/jobs/{id}","name":"stopJob","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/jobs","name":"stopAllJobs","verb":"DELETE","pathParams":[],"queryParams":[{"name":"type","type":"String"}],"hasEntity":false},{"uri":"/api/v1/spark/jobs","name":"listAllJobs","verb":"GET","pathParams":[],"queryParams":[{"name":"type","type":"String"}],"hasEntity":false},{"uri":"/api/v1/spark/jobs","name":"startUndefinedJob","verb":"POST","pathParams":[],"queryParams":[{"name":"sync","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/spark/driver","name":"stopSparkContext","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/jar","name":"getUberjar","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/master","name":"getMaster","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/master/status","name":"getAllMasterStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/master/config","name":"getMasters","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/worker/config","name":"getWorkers","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/driver/status","name":"getDrivers","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/schema","name":"getConfigurationTypes","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/spark/script","name":"startUndefinedScriptedJob","verb":"POST","pathParams":[],"queryParams":[{"name":"sync","type":"Boolean"},{"name":"rows","type":"Integer"}],"hasEntity":true},{"uri":"/api/v1/spark/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531987909,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/spark","variable":false}]}}
     /lwfusion/3.1.0/core/services/query-profiles::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/query-profiles::v1/3d02b464-2df4-450e-98ac-f25284fb49df (0)
      DATA:
          {"name":"query-profiles::v1","id":"3d02b464-2df4-450e-98ac-f25284fb49df","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.QueryProfileResource","uri":"/api/v1/collections/{collection}/query-profiles","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/query-profiles","name":"removeProfiles","verb":"DELETE","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/query-profiles","name":"listProfiles","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/query-profiles/{alias}/{handler}","name":"queryWithPost","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"},{"name":"handler","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/query-profiles/{alias}/{handler}","name":"query","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"},{"name":"handler","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/query-profiles/{alias}","name":"getProfile","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/query-profiles/{alias}","name":"removeProfile","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/query-profiles/{alias}","name":"addProfile","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"alias","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/query-profiles/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988141,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/query-profiles","variable":false}]}}
     /lwfusion/3.1.0/core/services/blobs::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/blobs::v1/01396175-2966-4a42-8239-01fb8154a44f (0)
      DATA:
          {"name":"blobs::v1","id":"01396175-2966-4a42-8239-01fb8154a44f","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.BlobResource","uri":"/connectors/v1/blobs","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/blobs","name":"listBlobManifests","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/blobs","name":"postBlob","verb":"POST","pathParams":[],"queryParams":[{"name":"Content-Length","type":"Long"}],"hasEntity":true},{"uri":"/connectors/v1/blobs","name":"formUploadBlob","verb":"POST","pathParams":[],"queryParams":[{"name":"Content-Length","type":"Long"}],"hasEntity":true},{"uri":"/connectors/v1/blobs/{id:.*}","name":"deleteFile","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/blobs/{id:.*}","name":"getBlob","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/blobs/{id:.*}","name":"putBlob","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"Content-Length","type":"Long"}],"hasEntity":true},{"uri":"/connectors/v1/blobs/{id:.*}/manifest","name":"getBlobManifest","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/blobs/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532087565,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/blobs","variable":false}]}}
      /lwfusion/3.1.0/core/services/blobs::v1/ab9e40eb-12fd-47e0-9415-bca0062bae7e (0)
      DATA:
          {"name":"blobs::v1","id":"ab9e40eb-12fd-47e0-9415-bca0062bae7e","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.BlobResource","uri":"/api/v1/blobs","baseApiUri":"/v1","methods":[{"uri":"/api/v1/blobs","name":"listBlobManifests","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/blobs","name":"postBlob","verb":"POST","pathParams":[],"queryParams":[{"name":"Content-Length","type":"Long"}],"hasEntity":true},{"uri":"/api/v1/blobs","name":"formUploadBlob","verb":"POST","pathParams":[],"queryParams":[{"name":"Content-Length","type":"Long"}],"hasEntity":true},{"uri":"/api/v1/blobs/{id:.*}","name":"deleteFile","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/blobs/{id:.*}","name":"getBlob","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/blobs/{id:.*}","name":"putBlob","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"Content-Length","type":"Long"}],"hasEntity":true},{"uri":"/api/v1/blobs/{id:.*}/manifest","name":"getBlobManifest","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/blobs/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988289,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/blobs","variable":false}]}}
     /lwfusion/3.1.0/core/services/introspect::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/introspect::v1/fd30b33e-29cf-414b-9dd5-94e33a0d4a6b (0)
      DATA:
          {"name":"introspect::v1","id":"fd30b33e-29cf-414b-9dd5-94e33a0d4a6b","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IntrospectionResource","uri":"/connectors/v1/introspect","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/introspect","name":"listServices","verb":"GET","pathParams":[],"queryParams":[{"name":"local","type":"Boolean"}],"hasEntity":false},{"uri":"/connectors/v1/introspect/{service}","name":"getServiceInstance","verb":"GET","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/introspect/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089970,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/introspect","variable":false}]}}
      /lwfusion/3.1.0/core/services/introspect::v1/543e4894-9f0a-4f8c-beab-bc06e65aeb46 (0)
      DATA:
          {"name":"introspect::v1","id":"543e4894-9f0a-4f8c-beab-bc06e65aeb46","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IntrospectionResource","uri":"/api/v1/introspect","baseApiUri":"/v1","methods":[{"uri":"/api/v1/introspect","name":"listServices","verb":"GET","pathParams":[],"queryParams":[{"name":"local","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/introspect/{service}","name":"getServiceInstance","verb":"GET","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/introspect/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988363,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/introspect","variable":false}]}}
     /lwfusion/3.1.0/core/services/solrconfig::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/solrconfig::v1/791fd1a6-0583-40f3-b489-0096d838038f (0)
      DATA:
          {"name":"solrconfig::v1","id":"791fd1a6-0583-40f3-b489-0096d838038f","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SolrConfigResource","uri":"/api/v1/collections/{collection}/solr-config","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/solr-config","name":"listConfigNodes","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"recursive","type":"Boolean"},{"name":"expand","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/solr-config/{path:.*}","name":"getConfigNodeAsBytes","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/solr-config/{path:.*}","name":"putFile","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[{"name":"reload","type":"Boolean"},{"name":"validate","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/solr-config/{path:.*}","name":"getConfigNodeAsString","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/solr-config/{path:.*}","name":"getConfigNode","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[{"name":"recursive","type":"Boolean"},{"name":"expand","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/solr-config/{path:.*}","name":"postFile","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[{"name":"reload","type":"Boolean"},{"name":"validate","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/solr-config/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988312,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/solr-config","variable":false}]}}
     /lwfusion/3.1.0/core/services/experiments::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/experiments::v1/ddb87f52-df34-46d2-9173-5f9f63f5d4c5 (0)
      DATA:
          {"name":"experiments::v1","id":"ddb87f52-df34-46d2-9173-5f9f63f5d4c5","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ExperimentResource","uri":"/api/v1/experiments","baseApiUri":"/v1","methods":[{"uri":"/api/v1/experiments","name":"listExperiments0","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs","name":"listJobs","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs/{id}","name":"startJob","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs/{id}","name":"getJobStatus","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs/{id}","name":"stopJob","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"recompute","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/experiments/configs/{id}","name":"getExperiment","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/configs/{id}","name":"updateExperiment","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/experiments/configs/{id}","name":"deleteExperiment","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/configs","name":"listExperiments","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/configs","name":"createExperiment","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/experiments/configs/{id}/state","name":"getExperimentState","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/configs/{id}/state","name":"deleteExperimentState","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs/{id}/recompute","name":"recomputeJob","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs/{id}/recompute","name":"resetJob","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/_schema","name":"experimentSchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/experiments/jobs/{id}/variant/{variant}","name":"updateVariant","verb":"PUT","pathParams":[{"name":"id","type":"String"},{"name":"variant","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/experiments/jobs/{id}/variant","name":"getVariant","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"variant","type":"String"}],"hasEntity":false},{"uri":"/api/v1/experiments/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531987918,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/experiments","variable":false}]}}
     /lwfusion/3.1.0/core/services/history::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/history::v1/b5b779e3-dc10-46fc-baf8-3fc64017bb01 (0)
      DATA:
          {"name":"history::v1","id":"b5b779e3-dc10-46fc-baf8-3fc64017bb01","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.HistoryResource","uri":"/api/v1/history","baseApiUri":"/v1","methods":[{"uri":"/api/v1/history","name":"listAllServices","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/history","name":"clearAllServiceHistory","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/history/{service}","name":"addServiceHistory","verb":"PUT","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/history/{service}","name":"getServiceHistory","verb":"GET","pathParams":[{"name":"service","type":"String"}],"queryParams":[{"name":"timeRange","type":"String"},{"name":"maxLength","type":"Integer"}],"hasEntity":false},{"uri":"/api/v1/history/{service}","name":"clearServiceHistory","verb":"DELETE","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/history/{service}/items/{item}","name":"addItemHistory","verb":"PUT","pathParams":[{"name":"service","type":"String"},{"name":"item","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/history/{service}/items/{item}","name":"getItemHistory","verb":"GET","pathParams":[{"name":"service","type":"String"},{"name":"item","type":"String"}],"queryParams":[{"name":"timeRange","type":"String"},{"name":"maxLength","type":"Integer"}],"hasEntity":false},{"uri":"/api/v1/history/{service}/items/{item}","name":"clearItemHistory","verb":"DELETE","pathParams":[{"name":"service","type":"String"},{"name":"item","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/history/{service}/items","name":"listAllItems","verb":"GET","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/history/{service}/items","name":"clearAllItemHistory","verb":"DELETE","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/history/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988362,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/history","variable":false}]}}
      /lwfusion/3.1.0/core/services/history::v1/7433032b-cf63-4712-8711-615bc6dd02fa (0)
      DATA:
          {"name":"history::v1","id":"7433032b-cf63-4712-8711-615bc6dd02fa","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.HistoryResource","uri":"/connectors/v1/history","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/history","name":"listAllServices","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/history","name":"clearAllServiceHistory","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/history/{service}","name":"addServiceHistory","verb":"PUT","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/history/{service}","name":"getServiceHistory","verb":"GET","pathParams":[{"name":"service","type":"String"}],"queryParams":[{"name":"timeRange","type":"String"},{"name":"maxLength","type":"Integer"}],"hasEntity":false},{"uri":"/connectors/v1/history/{service}","name":"clearServiceHistory","verb":"DELETE","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/history/{service}/items","name":"listAllItems","verb":"GET","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/history/{service}/items","name":"clearAllItemHistory","verb":"DELETE","pathParams":[{"name":"service","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/history/{service}/items/{item}","name":"getItemHistory","verb":"GET","pathParams":[{"name":"service","type":"String"},{"name":"item","type":"String"}],"queryParams":[{"name":"timeRange","type":"String"},{"name":"maxLength","type":"Integer"}],"hasEntity":false},{"uri":"/connectors/v1/history/{service}/items/{item}","name":"clearItemHistory","verb":"DELETE","pathParams":[{"name":"service","type":"String"},{"name":"item","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/history/{service}/items/{item}","name":"addItemHistory","verb":"PUT","pathParams":[{"name":"service","type":"String"},{"name":"item","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/history/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089968,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/history","variable":false}]}}
     /lwfusion/3.1.0/core/services/parser-templates::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/parser-templates::v1/afb1eee4-6b63-4fa8-85db-a95cf01c57d1 (0)
      DATA:
          {"name":"parser-templates::v1","id":"afb1eee4-6b63-4fa8-85db-a95cf01c57d1","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ParserTemplateResource","uri":"/api/v1/templates/parsers","baseApiUri":"/v1","methods":[{"uri":"/api/v1/templates/parsers","name":"getTemplates","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/templates/parsers/{templateId}","name":"getTemplate","verb":"GET","pathParams":[{"name":"templateId","type":"String"}],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/api/v1/templates/parsers/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988111,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/templates/parsers","variable":false}]}}
      /lwfusion/3.1.0/core/services/parser-templates::v1/c1e42573-836e-4d2b-9cf9-889dc5beb180 (0)
      DATA:
          {"name":"parser-templates::v1","id":"c1e42573-836e-4d2b-9cf9-889dc5beb180","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ParserTemplateResource","uri":"/connectors/v1/templates/parsers","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/templates/parsers","name":"getTemplates","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/templates/parsers/{templateId}","name":"getTemplate","verb":"GET","pathParams":[{"name":"templateId","type":"String"}],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/templates/parsers/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532090028,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/templates/parsers","variable":false}]}}
     /lwfusion/3.1.0/core/services/collections::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/collections::v1/8e119a4f-0ad1-4d62-8f06-4993df14431e (0)
      DATA:
          {"name":"collections::v1","id":"8e119a4f-0ad1-4d62-8f06-4993df14431e","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.CollectionResource","uri":"/api/v1/collections","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections","name":"createCollection","verb":"POST","pathParams":[],"queryParams":[{"name":"pipelines","type":"boolean"}],"hasEntity":true},{"uri":"/api/v1/collections","name":"getCollections","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/features/{feature}","name":"getFeature","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"feature","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/features/{feature}","name":"resetFeature","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"feature","type":"String"}],"queryParams":[{"name":"callback","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/features/{feature}","name":"overwriteFeature","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"feature","type":"String"}],"queryParams":[{"name":"callback","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}","name":"getCollection","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}","name":"overwriteCollection","verb":"PUT","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}","name":"deleteCollection","verb":"DELETE","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"solr","type":"Boolean"},{"name":"purge","type":"Boolean"},{"name":"pipelines","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/stats","name":"getCollectionMetrics","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/status","name":"getCollectionStatus","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/features","name":"listFeatures","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988302,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections","variable":false}]}}
     /lwfusion/3.1.0/core/services/partitions::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/partitions::v1/e25e3c58-f056-48ca-986d-86374d52bc31 (0)
      DATA:
          {"name":"partitions::v1","id":"e25e3c58-f056-48ca-986d-86374d52bc31","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.PartitionResource","uri":"/api/v1/collections/{collection}/partitions","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/partitions","name":"getPartitions","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/partitions/_schema","name":"getSchema","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/partitions/_changed","name":"changeCallback","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/partitions/{partition}","name":"deletePartition","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"partition","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/partitions/_scheduledCallback","name":"scheduledCallback","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/partitions/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988329,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/partitions","variable":false}]}}
     /lwfusion/3.1.0/core/services/index-pipelines::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/index-pipelines::v1/ca9f2964-888e-4cdd-971e-123df6c4493c (0)
      DATA:
          {"name":"index-pipelines::v1","id":"ca9f2964-888e-4cdd-971e-123df6c4493c","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexPipelineResource","uri":"/api/v1/index-pipelines","baseApiUri":"/v1","methods":[{"uri":"/api/v1/index-pipelines","name":"createPipeline","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/index-pipelines","name":"listPipelines","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-pipelines/{id}/collections/{collection}/index","name":"indexPipelineDocument","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/api/v1/index-pipelines/{id}/collections/{collection}/index","name":"indexPipelineDocumentNoStats","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/api/v1/index-pipelines/{id}/collections/{collection}/index","name":"indexNoStats","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"},{"name":"stageId","type":"String"},{"name":"parserId","type":"String"},{"name":"skipParsing","type":"Boolean"},{"name":"autoDetectFormat","type":"Boolean"},{"name":"contentSourceName","type":"String"}],"hasEntity":true},{"uri":"/api/v1/index-pipelines/{id}/collections/{collection}/index","name":"index","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"},{"name":"stageId","type":"String"},{"name":"parserId","type":"String"},{"name":"skipParsing","type":"Boolean"},{"name":"autoDetectFormat","type":"Boolean"},{"name":"contentSourceName","type":"String"}],"hasEntity":true},{"uri":"/api/v1/index-pipelines/{id}/collections/{collection}/debug","name":"debugPipelineDocument","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/api/v1/index-pipelines/{id}/metrics","name":"getPipelineMetrics","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"pretty","type":"Boolean"},{"name":"rateUnit","type":"String"},{"name":"durationUnit","type":"String"},{"name":"showSamples","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/index-pipelines/{id}/collections/{collection}/logs","name":"getPipelineLogs","verb":"GET","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"rows","type":"Integer"},{"name":"level","type":"String"}],"hasEntity":false},{"uri":"/api/v1/index-pipelines/{id}","name":"getPipeline","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-pipelines/{id}","name":"deletePipeline","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-pipelines/{id}","name":"createOrUpdatePipeline","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/index-pipelines/{id}/refresh","name":"refreshPipeline","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-pipelines/{id}/refresh","name":"stopPipeline","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-pipelines/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988188,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/index-pipelines","variable":false}]}}
      /lwfusion/3.1.0/core/services/index-pipelines::v1/7a8d3e61-ebc3-4f4c-8f3b-fad075799075 (0)
      DATA:
          {"name":"index-pipelines::v1","id":"7a8d3e61-ebc3-4f4c-8f3b-fad075799075","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexPipelineResource","uri":"/connectors/v1/index-pipelines","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/index-pipelines","name":"createPipeline","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines","name":"listPipelines","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/{id}/collections/{collection}/index","name":"indexPipelineDocument","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines/{id}/collections/{collection}/index","name":"indexPipelineDocumentNoStats","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines/{id}/collections/{collection}/index","name":"indexNoStats","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"},{"name":"stageId","type":"String"},{"name":"parserId","type":"String"},{"name":"skipParsing","type":"Boolean"},{"name":"autoDetectFormat","type":"Boolean"},{"name":"contentSourceName","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines/{id}/collections/{collection}/index","name":"index","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"stats","type":"Boolean"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"},{"name":"stageId","type":"String"},{"name":"parserId","type":"String"},{"name":"skipParsing","type":"Boolean"},{"name":"autoDetectFormat","type":"Boolean"},{"name":"contentSourceName","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines/{id}/metrics","name":"getPipelineMetrics","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"pretty","type":"Boolean"},{"name":"rateUnit","type":"String"},{"name":"durationUnit","type":"String"},{"name":"showSamples","type":"Boolean"}],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/{id}/collections/{collection}/logs","name":"getPipelineLogs","verb":"GET","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"rows","type":"Integer"},{"name":"level","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/{id}/collections/{collection}/debug","name":"debugPipelineDocument","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[{"name":"simulate","type":"Boolean"},{"name":"echo","type":"Boolean"},{"name":"echoMaxCount","type":"Integer"},{"name":"bufferDocsForSolr","type":"Boolean"},{"name":"throwOnError","type":"Boolean"},{"name":"eventsCollection","type":"String"},{"name":"eventsPipeline","type":"String"},{"name":"eventTypes","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines/{id}","name":"getPipeline","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/{id}","name":"deletePipeline","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/{id}","name":"createOrUpdatePipeline","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/index-pipelines/{id}/refresh","name":"refreshPipeline","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/{id}/refresh","name":"stopPipeline","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-pipelines/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532087499,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/index-pipelines","variable":false}]}}
     /lwfusion/3.1.0/core/services/features::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/features::v1/803e924b-3c10-4a98-8f57-4c9b6efd0cc5 (0)
      DATA:
          {"name":"features::v1","id":"803e924b-3c10-4a98-8f57-4c9b6efd0cc5","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.FeatureResource","uri":"/api/v1/features","baseApiUri":"/v1","methods":[{"uri":"/api/v1/features","name":"listFeatures","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/features/{feature}","name":"getFeature","verb":"GET","pathParams":[{"name":"feature","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/features/{feature}/_schema","name":"getFeatureSchema","verb":"GET","pathParams":[{"name":"feature","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/features/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988303,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/features","variable":false}]}}
     /lwfusion/3.1.0/core/services/jobs::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/jobs::v1/bd0c370a-1536-479f-ad3b-98d7075ed44d (0)
      DATA:
          {"name":"jobs::v1","id":"bd0c370a-1536-479f-ad3b-98d7075ed44d","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.JobResource","uri":"/api/v1/jobs","baseApiUri":"/v1","methods":[{"uri":"/api/v1/jobs","name":"listJobs","verb":"GET","pathParams":[],"queryParams":[{"name":"status","type":"List"},{"name":"enabled","type":"String"},{"name":"type","type":"List"}],"hasEntity":false},{"uri":"/api/v1/jobs/{resource}/schedule","name":"getJobConfig","verb":"GET","pathParams":[{"name":"resource","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/{resource}/schedule","name":"setJobConfig","verb":"PUT","pathParams":[{"name":"resource","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/{resource}/schedule","name":"resetJobConfig","verb":"DELETE","pathParams":[{"name":"resource","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/{resource}/actions","name":"controlJob","verb":"POST","pathParams":[{"name":"resource","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/{resource}/history","name":"listJobHistory","verb":"GET","pathParams":[{"name":"resource","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/{resource}","name":"getJob","verb":"GET","pathParams":[{"name":"resource","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/_schema","name":"getJobConfigSchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/jobs/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988167,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/jobs","variable":false}]}}
     /lwfusion/3.1.0/core/services/schema::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/schema::v1/0ca7b239-4522-44a4-8526-f6f7c60c3e23 (0)
      DATA:
          {"name":"schema::v1","id":"0ca7b239-4522-44a4-8526-f6f7c60c3e23","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SchemaResource","uri":"/api/v1/collections/{collection}/schema","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/schema/fields.schema","name":"getSchema","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/schema/fields","name":"addField","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/schema/fields","name":"getFields","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/schema/dynamicfields","name":"addDynamicField","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/schema/dynamicfields","name":"getDynamicFields","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/schema/dynamicfields.schema","name":"getDynamicSchema","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/schema/fields/{field}","name":"deleteField","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"field","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/schema/dynamicfields/{field}","name":"deleteDynamicField","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"field","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/schema/fields/{fieldName}","name":"updateField","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"fieldName","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/schema/dynamicfields/{fieldName}","name":"updateDynamicField","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"fieldName","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/schema/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988308,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/schema","variable":false}]}}
     /lwfusion/3.1.0/core/services/index-stages::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/index-stages::v1/2fbb2110-c0aa-4fa3-9eb8-e8c750f23dda (0)
      DATA:
          {"name":"index-stages::v1","id":"2fbb2110-c0aa-4fa3-9eb8-e8c750f23dda","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexStageResource","uri":"/api/v1/index-stages","baseApiUri":"/v1","methods":[{"uri":"/api/v1/index-stages/instances/{id}/{collection}/test","name":"testStage","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/index-stages/{type}/metrics","name":"getStageMetrics","verb":"GET","pathParams":[{"name":"type","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-stages/instances","name":"createStage","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/index-stages/instances","name":"listStageInstances","verb":"GET","pathParams":[],"queryParams":[{"name":"type","type":"String"}],"hasEntity":false},{"uri":"/api/v1/index-stages/schema","name":"listStageSchemas","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-stages/schema/{type}","name":"getStageSchema","verb":"GET","pathParams":[{"name":"type","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-stages/instances/{id}","name":"getStageInstance","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-stages/instances/{id}","name":"deleteStageInstance","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/index-stages/instances/{id}","name":"createOrUpdateStageInstance","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/index-stages/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988179,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/index-stages","variable":false}]}}
      /lwfusion/3.1.0/core/services/index-stages::v1/d10a02f5-88d1-483a-b553-81c5756a5677 (0)
      DATA:
          {"name":"index-stages::v1","id":"d10a02f5-88d1-483a-b553-81c5756a5677","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.IndexStageResource","uri":"/connectors/v1/index-stages","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/index-stages/instances/{id}/{collection}/test","name":"testStage","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/index-stages/{type}/metrics","name":"getStageMetrics","verb":"GET","pathParams":[{"name":"type","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-stages/instances","name":"createStage","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/index-stages/instances","name":"listStageInstances","verb":"GET","pathParams":[],"queryParams":[{"name":"type","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/index-stages/schema","name":"listStageSchemas","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-stages/schema/{type}","name":"getStageSchema","verb":"GET","pathParams":[{"name":"type","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-stages/instances/{id}","name":"getStageInstance","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-stages/instances/{id}","name":"deleteStageInstance","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/index-stages/instances/{id}","name":"createOrUpdateStageInstance","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/index-stages/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532087484,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/index-stages","variable":false}]}}
     /lwfusion/3.1.0/core/services/query-pipeline-templates::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/query-pipeline-templates::v1/1b3633c3-e0e4-4ddc-bd92-730d54c1077c (0)
      DATA:
          {"name":"query-pipeline-templates::v1","id":"1b3633c3-e0e4-4ddc-bd92-730d54c1077c","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.QueryPipelineTemplateResource","uri":"/api/v1/templates/query-pipelines","baseApiUri":"/v1","methods":[{"uri":"/api/v1/templates/query-pipelines","name":"getTemplates","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/templates/query-pipelines/{templateId}","name":"getTemplate","verb":"GET","pathParams":[{"name":"templateId","type":"String"}],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/api/v1/templates/query-pipelines/default","name":"getSearchDefaultsTemplate","verb":"GET","pathParams":[],"queryParams":[{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/api/v1/templates/query-pipelines/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988142,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/templates/query-pipelines","variable":false}]}}
     /lwfusion/3.1.0/core/services/nodes::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/nodes::v1/7f374fba-0599-438a-a4ac-a5318c464a99 (0)
      DATA:
          {"name":"nodes::v1","id":"7f374fba-0599-438a-a4ac-a5318c464a99","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.NodesResource","uri":"/api/v1/nodes","baseApiUri":"/v1","methods":[{"uri":"/api/v1/nodes/hosts","name":"hosts","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/nodes/up","name":"up","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/nodes/upByHost","name":"upByHost","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/nodes/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988364,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/nodes","variable":false}]}}
      /lwfusion/3.1.0/core/services/nodes::v1/63acbe88-ca85-45a5-917e-81229033a53a (0)
      DATA:
          {"name":"nodes::v1","id":"63acbe88-ca85-45a5-917e-81229033a53a","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.NodesResource","uri":"/connectors/v1/nodes","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/nodes/hosts","name":"hosts","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/nodes/up","name":"up","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/nodes/upByHost","name":"upByHost","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/nodes/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089971,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/nodes","variable":false}]}}
     /lwfusion/3.1.0/core/services/registration::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/registration::v1/5b6bcad2-10d9-44bd-9b89-fa940f7ee6c5 (0)
      DATA:
          {"name":"registration::v1","id":"5b6bcad2-10d9-44bd-9b89-fa940f7ee6c5","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.RegistrationResource","uri":"/api/v1/registration","baseApiUri":"/v1","methods":[{"uri":"/api/v1/registration","name":"get","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/registration","name":"update","verb":"PUT","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/registration/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988366,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/registration","variable":false}]}}
      /lwfusion/3.1.0/core/services/registration::v1/27d14679-6079-400f-a715-bbc1372e15c8 (0)
      DATA:
          {"name":"registration::v1","id":"27d14679-6079-400f-a715-bbc1372e15c8","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.RegistrationResource","uri":"/connectors/v1/registration","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/registration","name":"get","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/registration","name":"update","verb":"PUT","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/registration/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089973,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/registration","variable":false}]}}
     /lwfusion/3.1.0/core/services/system::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/system::v1/6cc108f9-dffb-4774-9168-ecbe5a75273b (0)
      DATA:
          {"name":"system::v1","id":"6cc108f9-dffb-4774-9168-ecbe5a75273b","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SystemResource","uri":"/api/v1/system","baseApiUri":"/v1","methods":[{"uri":"/api/v1/system/status_code","name":"getStatusCode","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/metrics","name":"getMetrics","verb":"GET","pathParams":[],"queryParams":[{"name":"pretty","type":"Boolean"},{"name":"rateUnit","type":"String"},{"name":"durationUnit","type":"String"},{"name":"showSamples","type":"Boolean"},{"name":"pattern","type":"String"},{"name":"prefix","type":"String"}],"hasEntity":false},{"uri":"/api/v1/system/buffers","name":"flushBuffers","verb":"PUT","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/ping","name":"ping","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/metric/{name}","name":"getSingleMetric","verb":"GET","pathParams":[{"name":"name","type":"String"}],"queryParams":[{"name":"pretty","type":"Boolean"},{"name":"rateUnit","type":"String"},{"name":"durationUnit","type":"String"},{"name":"showSamples","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/system/threads","name":"threadDump","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/metricNames","name":"getMetricNames","verb":"GET","pathParams":[],"queryParams":[{"name":"pattern","type":"String"},{"name":"prefix","type":"String"}],"hasEntity":false},{"uri":"/api/v1/system/ping/zk","name":"pingZK","verb":"GET","pathParams":[],"queryParams":[{"name":"timeout","type":"int"}],"hasEntity":false},{"uri":"/api/v1/system/resolve","name":"resolveUrn","verb":"GET","pathParams":[],"queryParams":[{"name":"urn","type":"String"}],"hasEntity":false},{"uri":"/api/v1/system/teapot","name":"teapot","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/log","name":"log","verb":"PUT","pathParams":[],"queryParams":[{"name":"logLevel","type":"String"},{"name":"message","type":"String"}],"hasEntity":false},{"uri":"/api/v1/system/gc","name":"gc","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/version","name":"version","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/system/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988383,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/system","variable":false}]}}
      /lwfusion/3.1.0/core/services/system::v1/bf6d9e28-17e5-4df6-b126-b8a1676659b3 (0)
      DATA:
          {"name":"system::v1","id":"bf6d9e28-17e5-4df6-b126-b8a1676659b3","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SystemResource","uri":"/connectors/v1/system","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/system/status_code","name":"getStatusCode","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/metrics","name":"getMetrics","verb":"GET","pathParams":[],"queryParams":[{"name":"pretty","type":"Boolean"},{"name":"rateUnit","type":"String"},{"name":"durationUnit","type":"String"},{"name":"showSamples","type":"Boolean"},{"name":"pattern","type":"String"},{"name":"prefix","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/system/buffers","name":"flushBuffers","verb":"PUT","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/ping","name":"ping","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/metricNames","name":"getMetricNames","verb":"GET","pathParams":[],"queryParams":[{"name":"pattern","type":"String"},{"name":"prefix","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/system/threads","name":"threadDump","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/metric/{name}","name":"getSingleMetric","verb":"GET","pathParams":[{"name":"name","type":"String"}],"queryParams":[{"name":"pretty","type":"Boolean"},{"name":"rateUnit","type":"String"},{"name":"durationUnit","type":"String"},{"name":"showSamples","type":"Boolean"}],"hasEntity":false},{"uri":"/connectors/v1/system/ping/zk","name":"pingZK","verb":"GET","pathParams":[],"queryParams":[{"name":"timeout","type":"int"}],"hasEntity":false},{"uri":"/connectors/v1/system/resolve","name":"resolveUrn","verb":"GET","pathParams":[],"queryParams":[{"name":"urn","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/system/teapot","name":"teapot","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/log","name":"log","verb":"PUT","pathParams":[],"queryParams":[{"name":"logLevel","type":"String"},{"name":"message","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/system/gc","name":"gc","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/version","name":"version","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/system/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089994,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/system","variable":false}]}}
     /lwfusion/3.1.0/core/services/synonyms::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/synonyms::v1/c9c5077b-99d3-4c3a-806b-abe6c9fe90bf (0)
      DATA:
          {"name":"synonyms::v1","id":"c9c5077b-99d3-4c3a-806b-abe6c9fe90bf","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.deprecated.SynonymsResource","uri":"/api/v1/synonyms","baseApiUri":"/v1","methods":[{"uri":"/api/v1/synonyms/{collection}","name":"importResource","verb":"PUT","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/synonyms/{collection}","name":"exportResource","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/synonyms/{collection}","name":"get","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/synonyms/{collection}","name":"put","verb":"PUT","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/synonyms/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988322,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/synonyms","variable":false}]}}
     /lwfusion/3.1.0/core/services/query-pipelines::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/query-pipelines::v1/8aa40e4a-1793-4d83-b717-15aee7d96d93 (0)
      DATA:
          {"name":"query-pipelines::v1","id":"8aa40e4a-1793-4d83-b717-15aee7d96d93","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.QueryPipelineResource","uri":"/api/v1/query-pipelines","baseApiUri":"/v1","methods":[{"uri":"/api/v1/query-pipelines","name":"createPipeline","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-pipelines","name":"listPipelines","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-pipelines/{id}/collections/{collection}/{handler}","name":"queryWithPost","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"},{"name":"handler","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-pipelines/{id}/collections/{collection}/{handler}","name":"queryWithJSON","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"},{"name":"handler","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-pipelines/{id}/collections/{collection}/{handler}","name":"queryWithAudio","verb":"POST","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"},{"name":"handler","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-pipelines/{id}/collections/{collection}/{handler}","name":"query","verb":"GET","pathParams":[{"name":"id","type":"String"},{"name":"collection","type":"String"},{"name":"handler","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-pipelines/{id}","name":"getPipeline","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-pipelines/{id}","name":"deletePipeline","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-pipelines/{id}","name":"createOrUpdatePipeline","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-pipelines/{id}/refresh","name":"refreshPipeline","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-pipelines/{id}/refresh","name":"stopPipeline","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-pipelines/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988138,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/query-pipelines","variable":false}]}}
     /lwfusion/3.1.0/core/services/synonyms-editor::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/synonyms-editor::v1/cdbb80f1-ba7e-4f39-a2ed-82ce22b5c28c (0)
      DATA:
          {"name":"synonyms-editor::v1","id":"cdbb80f1-ba7e-4f39-a2ed-82ce22b5c28c","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SynonymsResource","uri":"/api/v1/collections/{collection}/synonyms","baseApiUri":"/v1","methods":[{"uri":"/api/v1/collections/{collection}/synonyms","name":"listFiles","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}","name":"changeState","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}","name":"getFile","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/items","name":"getSynonyms","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/items","name":"exportToCsv","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/items","name":"importFromCsv","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/items","name":"addSynonym","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[{"name":"commit","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/items/{id}","name":"updateSynonym","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"},{"name":"id","type":"String"}],"queryParams":[{"name":"commit","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/items/{id}","name":"deleteSynonym","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"},{"name":"id","type":"String"}],"queryParams":[{"name":"commit","type":"Boolean"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/synonyms/{path:.*}/suggestions","name":"getSuggestions","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[{"name":"field","type":"String"},{"name":"q","type":"String"}],"hasEntity":false},{"uri":"/api/v1/collections/{collection}/synonyms/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988317,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/collections/","variable":false},{"value":"collection","variable":true},{"value":"/synonyms","variable":false}]}}
     /lwfusion/3.1.0/core/services/connectors::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/connectors::v1/58193c5e-f8cd-47af-a3c0-149f6e350304 (0)
      DATA:
          {"name":"connectors::v1","id":"58193c5e-f8cd-47af-a3c0-149f6e350304","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.resources.ConnectorsResource","uri":"/connectors/v1/connectors","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/connectors","name":"getConnectorTypes0","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db/{table}/items/{item}","name":"getItem","verb":"GET","pathParams":[{"name":"id","type":"String"},{"name":"table","type":"String"},{"name":"item","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db/{table}/items/{item}","name":"deleteItem","verb":"DELETE","pathParams":[{"name":"id","type":"String"},{"name":"table","type":"String"},{"name":"item","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}/resources","name":"listResources","verb":"GET","pathParams":[{"name":"connector","type":"String"}],"queryParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db","name":"dropDb","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"remove_output","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db","name":"getDb","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/history/{id}","name":"removeHistory","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/history/{id}","name":"getHistory","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"cumulative","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources","name":"removeDataSources","verb":"DELETE","pathParams":[],"queryParams":[{"name":"collection","type":"String"},{"name":"force","type":"boolean"},{"name":"remove_output","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources","name":"addDataSource","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/connectors/datasources","name":"getDataSources","verb":"GET","pathParams":[],"queryParams":[{"name":"collection","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db/{table}/items","name":"getItems","verb":"GET","pathParams":[{"name":"id","type":"String"},{"name":"table","type":"String"}],"queryParams":[{"name":"start","type":"String"},{"name":"rows","type":"int"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}","name":"getDataSource","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}","name":"updateDataSource","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/connectors/datasources/{id}","name":"removeDataSource","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"force","type":"boolean"},{"name":"remove_output","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins","name":"getConnectorTypes","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins","name":"initConnector","verb":"POST","pathParams":[],"queryParams":[{"name":"alias","type":"String"},{"name":"class_name","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins","name":"close","verb":"DELETE","pathParams":[],"queryParams":[{"name":"connector","type":"String"},{"name":"collection","type":"String"},{"name":"dry_run","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/pluginsByCategory","name":"getConnectorTypesByCategory","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}/types","name":"getConnectorSchemaTypes","verb":"GET","pathParams":[{"name":"connector","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}/types/{type}","name":"getConnectorSchemaType","verb":"GET","pathParams":[{"name":"connector","type":"String"},{"name":"type","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/validation","name":"validateDataSource","verb":"PUT","pathParams":[],"queryParams":[{"name":"remove_unknown_props","type":"boolean"},{"name":"verify_access","type":"boolean"}],"hasEntity":true},{"uri":"/connectors/v1/connectors/plugins/{connector}","name":"setClosing","verb":"PUT","pathParams":[{"name":"connector","type":"String"}],"queryParams":[{"name":"collection","type":"String"},{"name":"close","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}","name":"getConnectorSpecs0","verb":"GET","pathParams":[{"name":"connector","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/jobs/{id}","name":"startJob","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/jobs/{id}","name":"stopJob","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"abort","type":"boolean"},{"name":"wait_time","type":"long"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/jobs/{id}","name":"getJobStatus","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/jobs","name":"listJobs","verb":"GET","pathParams":[],"queryParams":[{"name":"connector","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/jobs","name":"finishAllJobs","verb":"DELETE","pathParams":[],"queryParams":[{"name":"connector","type":"String"},{"name":"collection","type":"String"},{"name":"abort","type":"boolean"},{"name":"wait_time","type":"long"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/jobs/{id}/pipeline","name":"getPipelineStats","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/security_filter/{collection}","name":"buildSecurityFilter","verb":"GET","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"username","type":"String"},{"name":"datasources","type":"List"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/security_filter/{collection}","name":"buildSecurityFilterFromSubject","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[{"name":"datasources","type":"List"}],"hasEntity":true},{"uri":"/connectors/v1/connectors/datasources/{id}/output","name":"deleteOutputData","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/usage","name":"getUsageNumbers","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db/{table}","name":"getTableStats","verb":"GET","pathParams":[{"name":"id","type":"String"},{"name":"table","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/db/{table}","name":"dropTable","verb":"DELETE","pathParams":[{"name":"id","type":"String"},{"name":"table","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/status","name":"connectorsShutdown","verb":"DELETE","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/status","name":"reset","verb":"PUT","pathParams":[],"queryParams":[{"name":"initRegistry","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connectorName}/source","name":"installOrUpdatePlugin","verb":"PUT","pathParams":[{"name":"connectorName","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connectorName}/source","name":"uninstallPlugin","verb":"DELETE","pathParams":[{"name":"connectorName","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/sample/pipeline-debug","name":"datasourceDocsSamplePipelineDebug","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"limit","type":"Integer"},{"name":"wait","type":"Integer"},{"name":"refresh","type":"Boolean"},{"name":"maxFieldLength","type":"Integer"},{"name":"excludeBinaryFields","type":"Boolean"},{"name":"pipelineId","type":"String"},{"name":"parserId","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/datasources/{id}/sample","name":"datasourceDocsSample","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"limit","type":"Integer"},{"name":"wait","type":"Integer"},{"name":"refresh","type":"Boolean"},{"name":"maxFieldLength","type":"Integer"},{"name":"excludeBinaryFields","type":"Boolean"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}/resources/{name}","name":"uploadResource","verb":"POST","pathParams":[{"name":"connector","type":"String"},{"name":"name","type":"String"}],"queryParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"hasEntity":true},{"uri":"/connectors/v1/connectors/plugins/{connector}/resources/{name}","name":"deleteResource","verb":"DELETE","pathParams":[{"name":"connector","type":"String"},{"name":"name","type":"String"}],"queryParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}/resources/{name}","name":"openResource","verb":"GET","pathParams":[{"name":"connector","type":"String"},{"name":"name","type":"String"}],"queryParams":[{"name":"collection","type":"String"},{"name":"id","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/suggestions/datasources","name":"suggestDataSourceConfig","verb":"GET","pathParams":[],"queryParams":[{"name":"input","type":"String"}],"hasEntity":false},{"uri":"/connectors/v1/connectors/plugins/{connector}/state","name":"reset","verb":"PUT","pathParams":[{"name":"connector","type":"String"}],"queryParams":[{"name":"collection","type":"String"}],"hasEntity":false}]},"registrationTimeUTC":1508532087312,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/connectors","variable":false}]}}
     /lwfusion/3.1.0/core/services/messaging::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/messaging::v1/0d738229-1740-4674-aa9d-a8e473bc2747 (0)
      DATA:
          {"name":"messaging::v1","id":"0d738229-1740-4674-aa9d-a8e473bc2747","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.MessagingResource","uri":"/api/v1/messaging","baseApiUri":"/v1","methods":[{"uri":"/api/v1/messaging","name":"supportedMessageTypes","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/service/{messageType}","name":"removeService","verb":"DELETE","pathParams":[{"name":"messageType","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/service/{messageType}","name":"updateService","verb":"PUT","pathParams":[{"name":"messageType","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/service","name":"addService","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/service","name":"serviceConfigurations","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/send","name":"send","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/service/schema/{messageType}","name":"getMessageServiceSchema","verb":"GET","pathParams":[{"name":"messageType","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/service/schema","name":"listMessageServiceSchemas","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/scheduled","name":"scheduled","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/send/{messageType}/{id}","name":"sendScheduled","verb":"PUT","pathParams":[{"name":"messageType","type":"String"},{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/schedule/{id}","name":"deleteScheduledItem","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/schedule/{id}","name":"update","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/messaging/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988245,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/messaging","variable":false}]}}
     /lwfusion/3.1.0/core/services/configurations::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/configurations::v1/e3ca3b15-5b18-469b-bff3-dd068778781b (0)
      DATA:
          {"name":"configurations::v1","id":"e3ca3b15-5b18-469b-bff3-dd068778781b","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ConfigurationResource","uri":"/api/v1/configurations","baseApiUri":"/v1","methods":[{"uri":"/api/v1/configurations","name":"find","verb":"GET","pathParams":[],"queryParams":[{"name":"pattern","type":"String"},{"name":"prefix","type":"String"},{"name":"verbose","type":"boolean"}],"hasEntity":false},{"uri":"/api/v1/configurations/{key}","name":"createProperty","verb":"POST","pathParams":[{"name":"key","type":"String"}],"queryParams":[{"name":"secret","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/configurations/{key}","name":"setProperty","verb":"PUT","pathParams":[{"name":"key","type":"String"}],"queryParams":[{"name":"secret","type":"Boolean"}],"hasEntity":true},{"uri":"/api/v1/configurations/{key}","name":"getProperty","verb":"GET","pathParams":[{"name":"key","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/configurations/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988360,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/configurations","variable":false}]}}
      /lwfusion/3.1.0/core/services/configurations::v1/d0b61175-9a7b-40c7-8704-fc1659a0f82e (0)
      DATA:
          {"name":"configurations::v1","id":"d0b61175-9a7b-40c7-8704-fc1659a0f82e","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ConfigurationResource","uri":"/connectors/v1/configurations","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/configurations","name":"find","verb":"GET","pathParams":[],"queryParams":[{"name":"pattern","type":"String"},{"name":"prefix","type":"String"},{"name":"verbose","type":"boolean"}],"hasEntity":false},{"uri":"/connectors/v1/configurations/{key}","name":"createProperty","verb":"POST","pathParams":[{"name":"key","type":"String"}],"queryParams":[{"name":"secret","type":"Boolean"}],"hasEntity":true},{"uri":"/connectors/v1/configurations/{key}","name":"setProperty","verb":"PUT","pathParams":[{"name":"key","type":"String"}],"queryParams":[{"name":"secret","type":"Boolean"}],"hasEntity":true},{"uri":"/connectors/v1/configurations/{key}","name":"getProperty","verb":"GET","pathParams":[{"name":"key","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/configurations/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089966,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/configurations","variable":false}]}}
     /lwfusion/3.1.0/core/services/solr::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/solr::v1/6ead3aab-e778-453d-bf89-a5b4e962fa67 (0)
      DATA:
          {"name":"solr::v1","id":"6ead3aab-e778-453d-bf89-a5b4e962fa67","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SolrProxyResource","uri":"/connectors/v1/solr","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/solr","name":"ok","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/solr/{collection}/{path:.*}","name":"proxyRequestToSolr","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/solr/{collection}/{path:.*}","name":"proxyPostRequestToSolr","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/solr/{collection}/{path:.*}","name":"proxyPutRequestToSolr","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/solr/{collection}/{path:.*}","name":"proxyDeleteRequestToSolr","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/solr/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532089989,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/solr","variable":false}]}}
      /lwfusion/3.1.0/core/services/solr::v1/39423308-3908-48db-a73f-5e09aa16f467 (0)
      DATA:
          {"name":"solr::v1","id":"39423308-3908-48db-a73f-5e09aa16f467","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SolrProxyResource","uri":"/api/v1/solr","baseApiUri":"/v1","methods":[{"uri":"/api/v1/solr","name":"ok","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/solr/{collection}/{path:.*}","name":"proxyRequestToSolr","verb":"GET","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/solr/{collection}/{path:.*}","name":"proxyPostRequestToSolr","verb":"POST","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/solr/{collection}/{path:.*}","name":"proxyPutRequestToSolr","verb":"PUT","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/solr/{collection}/{path:.*}","name":"proxyDeleteRequestToSolr","verb":"DELETE","pathParams":[{"name":"collection","type":"String"},{"name":"path","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/solr/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988379,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/solr","variable":false}]}}
     /lwfusion/3.1.0/core/services/searchLogs::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/searchLogs::v1/80855da1-dddc-4a95-b5fa-40bfdc35a3cd (0)
      DATA:
          {"name":"searchLogs::v1","id":"80855da1-dddc-4a95-b5fa-40bfdc35a3cd","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.SearchLogsResource","uri":"/api/v1/searchLogs","baseApiUri":"/v1","methods":[{"uri":"/api/v1/searchLogs/{collection}/searchlog","name":"searchLogs","verb":"POST","pathParams":[{"name":"collection","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/searchLogs/_changed","name":"changeCallback","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/searchLogs/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988331,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/searchLogs","variable":false}]}}
     /lwfusion/3.1.0/core/services/query-stages::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/query-stages::v1/6f77771b-20fc-482a-baf5-f6ca2d5712a7 (0)
      DATA:
          {"name":"query-stages::v1","id":"6f77771b-20fc-482a-baf5-f6ca2d5712a7","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.QueryStageResource","uri":"/api/v1/query-stages","baseApiUri":"/v1","methods":[{"uri":"/api/v1/query-stages/test","name":"testStage","verb":"POST","pathParams":[],"queryParams":[{"name":"collection","type":"String"}],"hasEntity":true},{"uri":"/api/v1/query-stages/instances/{id}/test","name":"testStageInstance","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"collection","type":"String"}],"hasEntity":false},{"uri":"/api/v1/query-stages/instances","name":"createStage","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-stages/instances","name":"listStageInstances","verb":"GET","pathParams":[],"queryParams":[{"name":"type","type":"String"}],"hasEntity":false},{"uri":"/api/v1/query-stages/schema","name":"listStageSchemas","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-stages/schema/{type}","name":"getStageSchema","verb":"GET","pathParams":[{"name":"type","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-stages/instances/{id}","name":"getStageInstance","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-stages/instances/{id}","name":"deleteStageInstance","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/query-stages/instances/{id}","name":"createOrUpdateStageInstance","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/query-stages/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988131,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/query-stages","variable":false}]}}
     /lwfusion/3.1.0/core/services/catalog::v1 (1)
     DATA:
         
      /lwfusion/3.1.0/core/services/catalog::v1/425ea094-a7e7-436b-bb01-e6534a33129e (0)
      DATA:
          {"name":"catalog::v1","id":"425ea094-a7e7-436b-bb01-e6534a33129e","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.AnalyticsCatalogResource","uri":"/api/v1/catalog","baseApiUri":"/v1","methods":[{"uri":"/api/v1/catalog","name":"createProject","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/catalog","name":"getProjects","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/assets/{asset}/count","name":"getCount","verb":"GET","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/assets/{asset}/rows","name":"getRows","verb":"GET","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/query","name":"executeQuery","verb":"POST","pathParams":[{"name":"project","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/catalog/{project}/assets/{asset}/columns/{column}","name":"getColumnInfo","verb":"GET","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"},{"name":"column","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/assets/{asset}","name":"getAsset","verb":"GET","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/assets/{asset}","name":"updateAsset","verb":"PUT","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/catalog/{project}/assets/{asset}","name":"deleteAsset","verb":"DELETE","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"}],"queryParams":[{"name":"version","type":"long"}],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/assets","name":"createAsset","verb":"POST","pathParams":[{"name":"project","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/catalog/{project}/assets","name":"getAssetsForProject","verb":"GET","pathParams":[{"name":"project","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/_search","name":"findAssets","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}","name":"getProject","verb":"GET","pathParams":[{"name":"project","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}","name":"deleteProject","verb":"DELETE","pathParams":[{"name":"project","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/{project}/assets/{asset}/schema","name":"getAssetSchema","verb":"GET","pathParams":[{"name":"project","type":"String"},{"name":"asset","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/_schema","name":"getDataAssetSchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/catalog/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531987927,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/catalog","variable":false}]}}
     /lwfusion/3.1.0/core/services/groups::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/groups::v1/596c9ac6-506d-482e-b06d-34180048c60a (0)
      DATA:
          {"name":"groups::v1","id":"596c9ac6-506d-482e-b06d-34180048c60a","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ObjectGroupResource","uri":"/connectors/v1/groups","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/groups","name":"createEntity","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/groups","name":"getAllEntities","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/groups/{id}","name":"getEntity","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/groups/{id}","name":"deleteEntity","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/groups/{id}","name":"updateEntity","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/groups/_schema","name":"getEntitySchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/groups/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532090003,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/groups","variable":false}]}}
      /lwfusion/3.1.0/core/services/groups::v1/e2a56649-d76c-4560-9804-6184b6004a35 (0)
      DATA:
          {"name":"groups::v1","id":"e2a56649-d76c-4560-9804-6184b6004a35","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ObjectGroupResource","uri":"/api/v1/groups","baseApiUri":"/v1","methods":[{"uri":"/api/v1/groups","name":"createEntity","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/groups","name":"getAllEntities","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/groups/{id}","name":"getEntity","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/groups/{id}","name":"updateEntity","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/groups/{id}","name":"deleteEntity","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/groups/_schema","name":"getEntitySchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/groups/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988387,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/groups","variable":false}]}}
     /lwfusion/3.1.0/core/services/parsers::v1 (2)
     DATA:
         
      /lwfusion/3.1.0/core/services/parsers::v1/02e5a779-ef0f-4f72-b00f-ee555f1ca2e4 (0)
      DATA:
          {"name":"parsers::v1","id":"02e5a779-ef0f-4f72-b00f-ee555f1ca2e4","address":"10.128.0.2","port":8984,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ParserResource","uri":"/connectors/v1/parsers","baseApiUri":"/v1","methods":[{"uri":"/connectors/v1/parsers","name":"createEntity","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/parsers","name":"getAllEntities","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/parsers/{id}/parse","name":"parseFileForm","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"limit","type":"Integer"},{"name":"offset","type":"Integer"}],"hasEntity":true},{"uri":"/connectors/v1/parsers/{id}/parse","name":"parseFileDirect","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"limit","type":"Integer"},{"name":"offset","type":"Integer"}],"hasEntity":true},{"uri":"/connectors/v1/parsers/{id}","name":"getEntity","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/parsers/{id}","name":"deleteEntity","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/parsers/{id}","name":"updateEntity","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/connectors/v1/parsers/_schema","name":"getEntitySchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/connectors/v1/parsers/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508532090026,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/connectors/v1/parsers","variable":false}]}}
      /lwfusion/3.1.0/core/services/parsers::v1/10516c63-d688-48a3-beb1-f2515d557048 (0)
      DATA:
          {"name":"parsers::v1","id":"10516c63-d688-48a3-beb1-f2515d557048","address":"10.128.0.2","port":8765,"sslPort":null,"payload":{"@class":"com.lucidworks.apollo.common.models.ResourceDescriptor","name":"com.lucidworks.apollo.resources.ParserResource","uri":"/api/v1/parsers","baseApiUri":"/v1","methods":[{"uri":"/api/v1/parsers","name":"createEntity","verb":"POST","pathParams":[],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/parsers","name":"getAllEntities","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/parsers/{id}/parse","name":"parseFileForm","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"limit","type":"Integer"},{"name":"offset","type":"Integer"}],"hasEntity":true},{"uri":"/api/v1/parsers/{id}/parse","name":"parseFileDirect","verb":"POST","pathParams":[{"name":"id","type":"String"}],"queryParams":[{"name":"limit","type":"Integer"},{"name":"offset","type":"Integer"}],"hasEntity":true},{"uri":"/api/v1/parsers/{id}","name":"getEntity","verb":"GET","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/parsers/{id}","name":"updateEntity","verb":"PUT","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":true},{"uri":"/api/v1/parsers/{id}","name":"deleteEntity","verb":"DELETE","pathParams":[{"name":"id","type":"String"}],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/parsers/_schema","name":"getEntitySchema","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false},{"uri":"/api/v1/parsers/status","name":"getStatus","verb":"GET","pathParams":[],"queryParams":[],"hasEntity":false}]},"registrationTimeUTC":1508531988109,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"scheme","variable":true},{"value":"://","variable":false},{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true},{"value":"/api/v1/parsers","variable":false}]}}
    /lwfusion/3.1.0/core/ignite-nodes-1.7.0 (1)
    DATA:
        
     /lwfusion/3.1.0/core/ignite-nodes-1.7.0/ignite (2)
     DATA:
         
      /lwfusion/3.1.0/core/ignite-nodes-1.7.0/ignite/69f805e2-7e75-4410-a3a7-5052ca277154 (0)
      DATA:
          {"name":"ignite","id":"69f805e2-7e75-4410-a3a7-5052ca277154","address":"10.128.0.2","port":49201,"sslPort":null,"payload":null,"registrationTimeUTC":1508532085690,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true}]}}
      /lwfusion/3.1.0/core/ignite-nodes-1.7.0/ignite/e3da8006-9dda-4fde-a604-7bababb18d4b (0)
      DATA:
          {"name":"ignite","id":"e3da8006-9dda-4fde-a604-7bababb18d4b","address":"10.128.0.2","port":49200,"sslPort":null,"payload":null,"registrationTimeUTC":1508531986584,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true}]}}
    /lwfusion/3.1.0/core/messaging (1)
    DATA:
        
     /lwfusion/3.1.0/core/messaging/log (0)
     DATA:
         {
           "type" : "logging-message-service-config",
           "defaultLogLevel" : "info",
           "template" : "<to>: <from>: <subject> : <body>",
           "serviceType" : "log"
         }
    /lwfusion/3.1.0/core/index-stages (3)
    DATA:
        
     /lwfusion/3.1.0/core/index-stages/conn_tika (0)
     DATA:
         {
           "type" : "tika-parser",
           "id" : "conn_tika",
           "includeImages" : true,
           "flattenCompound" : false,
           "addFailedDocs" : true,
           "addOriginalContent" : false,
           "contentField" : "_raw_content_",
           "contentEncoding" : "binary",
           "returnXml" : false,
           "keepOriginalStructure" : false,
           "extractHtmlLinks" : true,
           "extractOtherLinks" : false,
           "includeContentTypes" : [ ],
           "excludeContentTypes" : [ ],
           "zipBombCompressionRatio" : 200,
           "type" : "tika-parser",
           "skip" : false
         }
     /lwfusion/3.1.0/core/index-stages/conn_language_detection (0)
     DATA:
         {
           "type" : "lang-detect",
           "id" : "conn_language_detection",
           "source" : [ "content", "title" ],
           "outputType" : "document",
           "outputKey" : "languages",
           "documentPostfix" : "_lang",
           "type" : "lang-detect",
           "skip" : false
         }
     /lwfusion/3.1.0/core/index-stages/conn_mapping (0)
     DATA:
         {
           "type" : "field-mapping",
           "id" : "conn_mapping",
           "mappings" : [ {
             "source" : "Content-Encoding",
             "target" : "contentEncoding_s",
             "operation" : "move"
           }, {
             "source" : "Character-Set",
             "target" : "characterSet_s",
             "operation" : "move"
           }, {
             "source" : "Content-Length",
             "target" : "contentLength_l",
             "operation" : "move"
           }, {
             "source" : "FileSize",
             "target" : "fileSize_l",
             "operation" : "move"
           }, {
             "source" : "FileName",
             "target" : "fileName_s",
             "operation" : "move"
           }, {
             "source" : "Content-Type",
             "target" : "mimeType_s",
             "operation" : "move"
           }, {
             "source" : "MimeType",
             "target" : "mimeType_s",
             "operation" : "move"
           }, {
             "source" : "Title",
             "target" : "title",
             "operation" : "move"
           }, {
             "source" : "Description",
             "target" : "description",
             "operation" : "move"
           }, {
             "source" : "Subject",
             "target" : "subject",
             "operation" : "move"
           }, {
             "source" : "created",
             "target" : "dateCreated_dt",
             "operation" : "move"
           }, {
             "source" : "ContentCreated",
             "target" : "dateCreated_dt",
             "operation" : "move"
           }, {
             "source" : "meta:creation_date",
             "target" : "dateCreated_dt",
             "operation" : "move"
           }, {
             "source" : "Creation-Date",
             "target" : "dateCreated_dt",
             "operation" : "move"
           }, {
             "source" : "date",
             "target" : "dateCreated_dt",
             "operation" : "move"
           }, {
             "source" : "Author",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "meta:author",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "Contributor",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "LastModifiedBy",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "Last-Author",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "fullname",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "meta:last-author",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "Last-Modified",
             "target" : "last_modified",
             "operation" : "move"
           }, {
             "source" : "fileLastModified",
             "target" : "last_modified",
             "operation" : "move"
           }, {
             "source" : "ContentLastModified",
             "target" : "last_modified",
             "operation" : "move"
           }, {
             "source" : "Last-Save-Date",
             "target" : "last_modified",
             "operation" : "move"
           }, {
             "source" : "fullText",
             "target" : "content_txt",
             "operation" : "move"
           }, {
             "source" : "plainTextContent",
             "target" : "content_txt",
             "operation" : "move"
           }, {
             "source" : "plainTextMessageContent",
             "target" : "content_txt",
             "operation" : "move"
           }, {
             "source" : "body",
             "target" : "content_txt",
             "operation" : "move"
           }, {
             "source" : "content",
             "target" : "content_txt",
             "operation" : "move"
           }, {
             "source" : "keyword",
             "target" : "keywords",
             "operation" : "move"
           }, {
             "source" : "Keywords",
             "target" : "keywords",
             "operation" : "move"
           }, {
             "source" : "messageSubject",
             "target" : "title",
             "operation" : "move"
           }, {
             "source" : "name",
             "target" : "title",
             "operation" : "move"
           }, {
             "source" : "Page-Count",
             "target" : "pageCount_i",
             "operation" : "move"
           }, {
             "source" : "PageCount",
             "target" : "pageCount_i",
             "operation" : "move"
           }, {
             "source" : "Slide-Count",
             "target" : "pageCount_i",
             "operation" : "move"
           }, {
             "source" : "Slides",
             "target" : "pageCount_i",
             "operation" : "move"
           }, {
             "source" : "xmpTPg:NPages",
             "target" : "pageCount_i",
             "operation" : "move"
           }, {
             "source" : "parsing_time",
             "target" : "parsing_time_l",
             "operation" : "move"
           }, {
             "source" : "parsing",
             "target" : "parsing_s",
             "operation" : "move"
           }, {
             "source" : "Comments",
             "target" : "comments",
             "operation" : "move"
           }, {
             "source" : "resourceName",
             "target" : "resourcename_s",
             "operation" : "move"
           }, {
             "source" : "resource_name",
             "target" : "resourcename_s",
             "operation" : "move"
           }, {
             "source" : "Content-Location",
             "target" : "url",
             "operation" : "move"
           }, {
             "source" : "meta:character-count",
             "target" : "character-count_i",
             "operation" : "move"
           }, {
             "source" : "Word-Count",
             "target" : "wordCount_i",
             "operation" : "move"
           }, {
             "source" : "type",
             "target" : "type_s",
             "operation" : "move"
           }, {
             "source" : "X-Parsed-By",
             "target" : "xParsedBy_ss",
             "operation" : "move"
           }, {
             "source" : "body.links.anchor",
             "target" : "body_links_anchor_ss",
             "operation" : "move"
           }, {
             "source" : "body.links.params.alt",
             "target" : "body_links_params_alt_ss",
             "operation" : "move"
           }, {
             "source" : "body.links.params.type",
             "target" : "body_links_params_type_ss",
             "operation" : "move"
           }, {
             "source" : "body.links.title",
             "target" : "body_links_title_ss",
             "operation" : "move"
           }, {
             "source" : "body.links.targetUri",
             "target" : "body_links_targetUri_ss",
             "operation" : "move"
           }, {
             "source" : "Brightness Value",
             "target" : "Brightness_Value_ss",
             "operation" : "move"
           }, {
             "source" : "svn:eol-style",
             "target" : "svn_eol_style_s",
             "operation" : "move"
           }, {
             "source" : "svn:keywords",
             "target" : "svn_keywords",
             "operation" : "move"
           }, {
             "source" : "svn:last-author",
             "target" : "author",
             "operation" : "move"
           }, {
             "source" : "svn:last-change-date",
             "target" : "last_modified",
             "operation" : "move"
           }, {
             "source" : "svn:last-change-revision",
             "target" : "svn_last_change_revision_s",
             "operation" : "move"
           }, {
             "source" : "svn:mergeinfo",
             "target" : "svn_mergeinfo_txt",
             "operation" : "move"
           }, {
             "source" : "svn:mime-type",
             "target" : "svn_mime_type_ss",
             "operation" : "move"
           }, {
             "source" : "/(.*)_[isltbfd]s?/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_txt/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_en/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_dts?/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_t[ilfd]/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_p/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_c/",
             "operation" : "keep"
           }, {
             "source" : "/(.*)_coordinate/",
             "operation" : "keep"
           }, {
             "source" : "/attr_(.*)/",
             "operation" : "keep"
           }, {
             "source" : "/random_(.*)/",
             "operation" : "keep"
           }, {
             "source" : "/ignored_(.*)/",
             "operation" : "keep"
           } ],
           "reservedFieldsMappingAllowed" : false,
           "type" : "field-mapping",
           "skip" : false
         }
    /lwfusion/3.1.0/core/search-clusters (1)
    DATA:
        
     /lwfusion/3.1.0/core/search-clusters/default (0)
     DATA:
         {
           "id" : "default",
           "connectString" : "localhost:9983/lwfusion/3.1.0/solr",
           "zkClientTimeout" : 30000,
           "zkConnectTimeout" : 60000,
           "cloud" : true,
           "bufferFlushInterval" : 1000,
           "bufferSize" : 100,
           "concurrency" : 10,
           "authConfig" : {
             "authType" : "none"
           },
           "validateCluster" : true
         }
    /lwfusion/3.1.0/core/index-pipelines (6)
    DATA:
        
     /lwfusion/3.1.0/core/index-pipelines/_signals_ingest (0)
     DATA:
         {
           "id" : "_signals_ingest",
           "stages" : [ {
             "type" : "signal-formatter",
             "id" : "ingest-signals",
             "flatten" : true,
             "allowedTypes" : [ ],
             "undefinedType" : "general",
             "timestampLocale" : "en-US",
             "type" : "signal-formatter",
             "skip" : false
           }, {
             "type" : "field-mapping",
             "id" : "mapping-signals",
             "mappings" : [ {
               "source" : "type",
               "target" : "type_s",
               "operation" : "move"
             }, {
               "source" : "flag",
               "target" : "flag_s",
               "operation" : "move"
             }, {
               "source" : "params.flag",
               "target" : "flag_s",
               "operation" : "move"
             }, {
               "source" : "timestamp",
               "target" : "timestamp_tdt",
               "operation" : "move"
             }, {
               "source" : "params.count",
               "target" : "count_i",
               "operation" : "move"
             }, {
               "source" : "params.weight",
               "target" : "weight_d",
               "operation" : "move"
             }, {
               "source" : "params.query",
               "target" : "query_s",
               "operation" : "copy"
             }, {
               "source" : "params.query",
               "target" : "query_t",
               "operation" : "move"
             }, {
               "source" : "params.docId",
               "target" : "doc_id_s",
               "operation" : "move"
             }, {
               "source" : "params.userId",
               "target" : "user_id_s",
               "operation" : "move"
             }, {
               "source" : "params.sessionId",
               "target" : "session_id_s",
               "operation" : "move"
             }, {
               "source" : "params.filterQueries",
               "target" : "filters_s",
               "operation" : "move"
             }, {
               "source" : "/params\\.(.*)(?<!_.{1,2})$/",
               "target" : "params.$1_s",
               "operation" : "move"
             } ],
             "reservedFieldsMappingAllowed" : false,
             "type" : "field-mapping",
             "skip" : false
           }, {
             "type" : "solr-index",
             "id" : "solr-system",
             "enforceSchema" : true,
             "dateFormats" : [ ],
             "params" : [ ],
             "bufferDocsForSolr" : true,
             "type" : "solr-index",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/index-pipelines/default (0)
     DATA:
         {
           "id" : "default",
           "stages" : [ {
             "type" : "field-mapping",
             "id" : "b880db00-48d5-4ae7-ab5a-214e4ecfca6e",
             "mappings" : [ ],
             "reservedFieldsMappingAllowed" : false,
             "type" : "field-mapping",
             "skip" : false
           }, {
             "type" : "solr-dynamic-field-name-mapping",
             "id" : "3b472ce5-7104-4ad8-97c3-f5d79be93cac",
             "duplicateSingleValuedFields" : false,
             "fieldsToExclude" : [ ],
             "advancedTextFieldsIndexing" : true,
             "maxTextLengthForAdvancedIndexing" : 100,
             "type" : "solr-dynamic-field-name-mapping",
             "skip" : false
           }, {
             "type" : "solr-index",
             "id" : "bfc524f4-dffe-4d0e-b1b7-9fd51b73b2f0",
             "enforceSchema" : true,
             "dateFormats" : [ ],
             "params" : [ ],
             "bufferDocsForSolr" : false,
             "type" : "solr-index",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/index-pipelines/_system (0)
     DATA:
         {
           "id" : "_system",
           "stages" : [ {
             "type" : "solr-index",
             "id" : "solr-system",
             "enforceSchema" : true,
             "dateFormats" : [ ],
             "params" : [ ],
             "bufferDocsForSolr" : true,
             "type" : "solr-index",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/index-pipelines/Bahn_DE-default (0)
     DATA:
         {
           "id" : "Bahn_DE-default",
           "stages" : [ {
             "type" : "solr-dynamic-field-name-mapping",
             "id" : "87d6fc9e-b9fd-42d0-b1f8-a7fea22075b8",
             "duplicateSingleValuedFields" : false,
             "fieldsToExclude" : [ ],
             "advancedTextFieldsIndexing" : true,
             "maxTextLengthForAdvancedIndexing" : 100,
             "type" : "solr-dynamic-field-name-mapping",
             "skip" : false
           }, {
             "type" : "lang-detect",
             "id" : "ha",
             "source" : [ "title_t", "body_t" ],
             "outputType" : "document",
             "outputKey" : "languages",
             "documentPostfix" : "_lang",
             "type" : "lang-detect",
             "skip" : false,
             "label" : "detect-lang"
           }, {
             "type" : "solr-index",
             "id" : "41d237da-9047-4f26-aaaf-d9b3b95f4d08",
             "enforceSchema" : true,
             "dateFormats" : [ ],
             "params" : [ ],
             "bufferDocsForSolr" : false,
             "type" : "solr-index",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/index-pipelines/metadata_normalization (0)
     DATA:
         {
           "id" : "metadata_normalization",
           "stages" : [ {
             "type" : "tika-parser",
             "id" : "conn_tika",
             "includeImages" : true,
             "flattenCompound" : false,
             "addFailedDocs" : true,
             "addOriginalContent" : false,
             "contentField" : "_raw_content_",
             "contentEncoding" : "binary",
             "returnXml" : false,
             "keepOriginalStructure" : false,
             "extractHtmlLinks" : true,
             "extractOtherLinks" : false,
             "includeContentTypes" : [ ],
             "excludeContentTypes" : [ ],
             "zipBombCompressionRatio" : 200,
             "type" : "tika-parser",
             "skip" : false
           }, {
             "type" : "field-mapping",
             "id" : "conn_mapping",
             "mappings" : [ {
               "source" : "Content-Encoding",
               "target" : "contentEncoding_s",
               "operation" : "move"
             }, {
               "source" : "Character-Set",
               "target" : "characterSet_s",
               "operation" : "move"
             }, {
               "source" : "Content-Length",
               "target" : "contentLength_l",
               "operation" : "move"
             }, {
               "source" : "FileSize",
               "target" : "fileSize_l",
               "operation" : "move"
             }, {
               "source" : "FileName",
               "target" : "fileName_s",
               "operation" : "move"
             }, {
               "source" : "Content-Type",
               "target" : "mimeType_s",
               "operation" : "move"
             }, {
               "source" : "MimeType",
               "target" : "mimeType_s",
               "operation" : "move"
             }, {
               "source" : "Title",
               "target" : "title",
               "operation" : "move"
             }, {
               "source" : "Description",
               "target" : "description",
               "operation" : "move"
             }, {
               "source" : "Subject",
               "target" : "subject",
               "operation" : "move"
             }, {
               "source" : "created",
               "target" : "dateCreated_dt",
               "operation" : "move"
             }, {
               "source" : "ContentCreated",
               "target" : "dateCreated_dt",
               "operation" : "move"
             }, {
               "source" : "meta:creation_date",
               "target" : "dateCreated_dt",
               "operation" : "move"
             }, {
               "source" : "Creation-Date",
               "target" : "dateCreated_dt",
               "operation" : "move"
             }, {
               "source" : "date",
               "target" : "dateCreated_dt",
               "operation" : "move"
             }, {
               "source" : "Author",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "meta:author",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "Contributor",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "LastModifiedBy",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "Last-Author",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "fullname",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "meta:last-author",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "Last-Modified",
               "target" : "last_modified",
               "operation" : "move"
             }, {
               "source" : "fileLastModified",
               "target" : "last_modified",
               "operation" : "move"
             }, {
               "source" : "ContentLastModified",
               "target" : "last_modified",
               "operation" : "move"
             }, {
               "source" : "Last-Save-Date",
               "target" : "last_modified",
               "operation" : "move"
             }, {
               "source" : "fullText",
               "target" : "content_txt",
               "operation" : "move"
             }, {
               "source" : "plainTextContent",
               "target" : "content_txt",
               "operation" : "move"
             }, {
               "source" : "plainTextMessageContent",
               "target" : "content_txt",
               "operation" : "move"
             }, {
               "source" : "body",
               "target" : "content_txt",
               "operation" : "move"
             }, {
               "source" : "content",
               "target" : "content_txt",
               "operation" : "move"
             }, {
               "source" : "keyword",
               "target" : "keywords",
               "operation" : "move"
             }, {
               "source" : "Keywords",
               "target" : "keywords",
               "operation" : "move"
             }, {
               "source" : "messageSubject",
               "target" : "title",
               "operation" : "move"
             }, {
               "source" : "name",
               "target" : "title",
               "operation" : "move"
             }, {
               "source" : "Page-Count",
               "target" : "pageCount_i",
               "operation" : "move"
             }, {
               "source" : "PageCount",
               "target" : "pageCount_i",
               "operation" : "move"
             }, {
               "source" : "Slide-Count",
               "target" : "pageCount_i",
               "operation" : "move"
             }, {
               "source" : "Slides",
               "target" : "pageCount_i",
               "operation" : "move"
             }, {
               "source" : "xmpTPg:NPages",
               "target" : "pageCount_i",
               "operation" : "move"
             }, {
               "source" : "parsing_time",
               "target" : "parsing_time_l",
               "operation" : "move"
             }, {
               "source" : "parsing",
               "target" : "parsing_s",
               "operation" : "move"
             }, {
               "source" : "Comments",
               "target" : "comments",
               "operation" : "move"
             }, {
               "source" : "resourceName",
               "target" : "resourcename_s",
               "operation" : "move"
             }, {
               "source" : "resource_name",
               "target" : "resourcename_s",
               "operation" : "move"
             }, {
               "source" : "Content-Location",
               "target" : "url",
               "operation" : "move"
             }, {
               "source" : "meta:character-count",
               "target" : "character-count_i",
               "operation" : "move"
             }, {
               "source" : "Word-Count",
               "target" : "wordCount_i",
               "operation" : "move"
             }, {
               "source" : "type",
               "target" : "type_s",
               "operation" : "move"
             }, {
               "source" : "X-Parsed-By",
               "target" : "xParsedBy_ss",
               "operation" : "move"
             }, {
               "source" : "body.links.anchor",
               "target" : "body_links_anchor_ss",
               "operation" : "move"
             }, {
               "source" : "body.links.params.alt",
               "target" : "body_links_params_alt_ss",
               "operation" : "move"
             }, {
               "source" : "body.links.params.type",
               "target" : "body_links_params_type_ss",
               "operation" : "move"
             }, {
               "source" : "body.links.title",
               "target" : "body_links_title_ss",
               "operation" : "move"
             }, {
               "source" : "body.links.targetUri",
               "target" : "body_links_targetUri_ss",
               "operation" : "move"
             }, {
               "source" : "Brightness Value",
               "target" : "Brightness_Value_ss",
               "operation" : "move"
             }, {
               "source" : "svn:eol-style",
               "target" : "svn_eol_style_s",
               "operation" : "move"
             }, {
               "source" : "svn:keywords",
               "target" : "svn_keywords",
               "operation" : "move"
             }, {
               "source" : "svn:last-author",
               "target" : "author",
               "operation" : "move"
             }, {
               "source" : "svn:last-change-date",
               "target" : "last_modified",
               "operation" : "move"
             }, {
               "source" : "svn:last-change-revision",
               "target" : "svn_last_change_revision_s",
               "operation" : "move"
             }, {
               "source" : "svn:mergeinfo",
               "target" : "svn_mergeinfo_txt",
               "operation" : "move"
             }, {
               "source" : "svn:mime-type",
               "target" : "svn_mime_type_ss",
               "operation" : "move"
             }, {
               "source" : "/(.*)_[isltbfd]s?/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_txt/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_en/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_dts?/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_t[ilfd]/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_p/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_c/",
               "operation" : "keep"
             }, {
               "source" : "/(.*)_coordinate/",
               "operation" : "keep"
             }, {
               "source" : "/attr_(.*)/",
               "operation" : "keep"
             }, {
               "source" : "/random_(.*)/",
               "operation" : "keep"
             }, {
               "source" : "/ignored_(.*)/",
               "operation" : "keep"
             } ],
             "reservedFieldsMappingAllowed" : false,
             "type" : "field-mapping",
             "skip" : false
           }, {
             "type" : "lang-detect",
             "id" : "conn_language_detection",
             "source" : [ "content", "title" ],
             "outputType" : "document",
             "outputKey" : "languages",
             "documentPostfix" : "_lang",
             "type" : "lang-detect",
             "skip" : false
           }, {
             "type" : "solr-dynamic-field-name-mapping",
             "id" : "dyn-mapping-default",
             "duplicateSingleValuedFields" : false,
             "fieldsToExclude" : [ ],
             "advancedTextFieldsIndexing" : true,
             "maxTextLengthForAdvancedIndexing" : 100,
             "type" : "solr-dynamic-field-name-mapping",
             "skip" : false
           }, {
             "type" : "solr-index",
             "id" : "solr-default",
             "enforceSchema" : true,
             "dateFormats" : [ ],
             "params" : [ ],
             "bufferDocsForSolr" : false,
             "unmapped" : {
               "source" : "/(^.*)$/",
               "target" : "$1_txt",
               "operation" : "move"
             },
             "type" : "solr-index",
             "skip" : false
           } ],
           "properties" : { }
         }
     /lwfusion/3.1.0/core/index-pipelines/_lw_tmp_1508538407 (0)
     DATA:
         {
           "id" : "_lw_tmp_1508538407",
           "stages" : [ {
             "type" : "solr-dynamic-field-name-mapping",
             "id" : "87d6fc9e-b9fd-42d0-b1f8-a7fea22075b8",
             "duplicateSingleValuedFields" : false,
             "fieldsToExclude" : [ ],
             "advancedTextFieldsIndexing" : true,
             "maxTextLengthForAdvancedIndexing" : 100,
             "type" : "solr-dynamic-field-name-mapping",
             "skip" : false
           }, {
             "type" : "lang-detect",
             "id" : "ha",
             "source" : [ "title_t", "body_t" ],
             "outputType" : "document",
             "outputKey" : "languages",
             "documentPostfix" : "_lang",
             "type" : "lang-detect",
             "skip" : false,
             "label" : "detect-lang"
           }, {
             "type" : "solr-index",
             "id" : "41d237da-9047-4f26-aaaf-d9b3b95f4d08",
             "enforceSchema" : true,
             "dateFormats" : [ ],
             "params" : [ ],
             "bufferDocsForSolr" : false,
             "type" : "solr-index",
             "skip" : false
           } ],
           "properties" : { }
         }
    /lwfusion/3.1.0/core/query-profiles (1)
    DATA:
        
     /lwfusion/3.1.0/core/query-profiles/default (0)
     DATA:
         {
           "pipelines" : {
             "default" : "default"
           }
         }
   /lwfusion/3.1.0/proxy (12)
   DATA:
       
    /lwfusion/3.1.0/proxy/realm-config (1)
     /lwfusion/3.1.0/proxy/realm-config/0bcef73e-3e43-4e9a-ae18-76c99b5dfe7e (0)
     DATA:
         {"id":"0bcef73e-3e43-4e9a-ae18-76c99b5dfe7e","enabled":true,"name":"native","realm-type":"native","created-at":"2017-10-20T21:41:53Z"}
    /lwfusion/3.1.0/proxy/collection-pref (0)
    DATA:
        
    /lwfusion/3.1.0/proxy/role (3)
    DATA:
        
     /lwfusion/3.1.0/proxy/role/b317e126-87e1-44bd-ab6d-e35722e7b883 (0)
     DATA:
         {"id":"b317e126-87e1-44bd-ab6d-e35722e7b883","name":"admin","created-at":"2017-10-20T21:41:53Z","permissions":[{"methods":["GET","POST","PUT","DELETE","PATCH","HEAD"],"path":"/**"}],"ui-permissions":["*"],"desc":"Full access to every service. This is the super-admin role."}
     /lwfusion/3.1.0/proxy/role/a76eb9a9-2cc7-4ac1-9d50-4dcf7b2367d3 (0)
     DATA:
         {"id":"a76eb9a9-2cc7-4ac1-9d50-4dcf7b2367d3","name":"search","created-at":"2017-10-20T21:41:53Z","permissions":[{"methods":["POST"],"path":"/signals/default"},{"methods":["GET"],"path":"/collections/default/query-profiles/default/select"},{"methods":["GET"],"path":"/query-pipelines/default/collections/default/select"},{"methods":["PATCH"],"path":"/users/{id}","params":{"id":["#ID"]}}],"ui-permissions":[],"desc":"Provides read-only query and write-only signal API access to the Fusion \"default\" collection."}
     /lwfusion/3.1.0/proxy/role/9c449832-d69e-4f3a-868b-c48f66432cb4 (0)
     DATA:
         {"id":"9c449832-d69e-4f3a-868b-c48f66432cb4","name":"developer","created-at":"2017-10-20T21:41:53Z","permissions":[{"methods":["GET","POST","PUT"],"path":"/system/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/stopwords/**"},{"methods":["GET","POST","PUT"],"path":"/usage/**"},{"methods":["GET"],"path":"/features/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/blobs/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/scheduler/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/aggregator/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/experiments"},{"methods":["GET"],"path":"/introspect/**"},{"methods":["PUT"],"path":"/usage/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/index-stages/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/messaging/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/catalog"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/parsers/**"},{"methods":["GET","POST","PUT"],"path":"/recommend/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/history/**"},{"methods":["GET","POST"],"path":"/dynamicSchema/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/solr/**"},{"methods":["GET","POST","PUT"],"path":"/signals/**"},{"methods":["GET","POST","PUT"],"path":"/searchLogs/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/query-pipelines/**"},{"methods":["GET","POST","PUT"],"path":"/configurations/**"},{"methods":["GET"],"path":"/suggestions/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/searchCluster/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/index-pipelines/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/spark/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/query-stages/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/prefs/apps/search/*"},{"methods":["GET"],"path":"/nodes/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/solrAdmin/**"},{"methods":["GET","POST","PUT"],"path":"/synonyms/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/jobs/**"},{"methods":["GET","POST","PUT","DELETE","HEAD","OPTIONS"],"path":"/collections/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/connectors/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/groups/**"},{"methods":["GET","POST","PUT"],"path":"/templates/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/tasks/**"},{"methods":["GET","POST","PUT","DELETE","HEAD"],"path":"/links/**"},{"methods":["PATCH"],"path":"/users/{id}","params":{"id":["#ID"]}},{"methods":["GET","POST","PUT"],"path":"/registration/**"},{"methods":["GET","POST","PUT"],"path":"/objects/**"}],"ui-permissions":["collections","collections.commit","collections.clear","collections.delete","datasources","solr-config","stopwords","synonyms","query-workbench","index-workbench","scheduler","dashboards","blobs","jobs","tasks","links","groups","fields","aggregations","parsers","index-workbench","index-pipelines","index-pipelines.delete","index-profiles","query-workbench","query-pipelines","query-pipelines.delete","query-profiles","system"],"desc":"Developer access with read/write permission required for building/running applications."}
    /lwfusion/3.1.0/proxy/acls (0)
    DATA:
        
    /lwfusion/3.1.0/proxy/proxy-ignite-nodes-1.7.0 (1)
    DATA:
        
     /lwfusion/3.1.0/proxy/proxy-ignite-nodes-1.7.0/ignite (1)
     DATA:
         
      /lwfusion/3.1.0/proxy/proxy-ignite-nodes-1.7.0/ignite/8c21d7b0-2989-4710-ab27-9be2f3e18ac0 (0)
      DATA:
          {"name":"ignite","id":"8c21d7b0-2989-4710-ab27-9be2f3e18ac0","address":"10.128.0.2","port":49202,"sslPort":null,"payload":null,"registrationTimeUTC":1508532122525,"serviceType":"DYNAMIC","uriSpec":{"parts":[{"value":"address","variable":true},{"value":":","variable":false},{"value":"port","variable":true}]}}
    /lwfusion/3.1.0/proxy/keys (1)
    DATA:
        
     /lwfusion/3.1.0/proxy/keys/default (0)
     DATA:
         {"id":"default","algorithm":"AES","size":128,"type":"secret","createdOn":1508532121806,"value":"k1FI3jxzRwsUdaUSrrP/4dUAi8W+ianlUNGdeZjuxFHdYhqQefOrOyYOA1wNHR5Wj5pkqVINyRGpotNgLE9gk/YiG2o="}
    /lwfusion/3.1.0/proxy/object-acl (0)
    DATA:
        
    /lwfusion/3.1.0/proxy/sys (1)
    DATA:
        
     /lwfusion/3.1.0/proxy/sys/init-meta (0)
     DATA:
         {"id":"init-meta","initialized-at":"2017-10-20T20:42:01Z","version":"local","datasets-installed-at":"2017-10-20T20:42:05Z","initial-db-installed-at":"2017-10-20T21:41:53Z"}
    /lwfusion/3.1.0/proxy/user (2)
     /lwfusion/3.1.0/proxy/user/b525c29e-c67c-4a5a-b9be-960d42c8eaad (0)
     DATA:
         {"realm-name":"native","password-hash":"$2a$08$RQ93bdKfArmw/nsDa9e.WePBsTYAD2IgaeQ2E7L8Ofj.QRptuzNI.","username":"admin","id":"b525c29e-c67c-4a5a-b9be-960d42c8eaad","role-names":["admin"],"permissions":[],"created-at":"2017-10-20T21:41:53Z"}
     /lwfusion/3.1.0/proxy/user/5c27e166-db85-4070-b1d6-f848617f4408 (0)
     DATA:
         {"realm-name":"native","password-hash":"$2a$08$27dYcIFOx1CyJzLeCplHvujmXJFl3MbSGx1cH2OTDFFSubiIfY/TO","username":"catalog_jdbc_service_account","id":"5c27e166-db85-4070-b1d6-f848617f4408","role-names":[],"permissions":[{"path":"/solr/**","methods":["GET"]},{"path":"/catalog/**","methods":["GET","POST","PUT","DELETE"]},{"path":"/spark/**","methods":["GET"]}],"created-at":"2017-10-20T20:42:03Z"}
    /lwfusion/3.1.0/proxy/search-app-pref (3)
    DATA:
        
     /lwfusion/3.1.0/proxy/search-app-pref/default._lw_qwb_tmp_479065324734418 (0)
     DATA:
         {"collection-id":"default","query-pipeline-id":"_lw_qwb_tmp_479065324734418","id":"default._lw_qwb_tmp_479065324734418","created-at":"2017-10-20T22:03:25Z","per-page":10}
     /lwfusion/3.1.0/proxy/search-app-pref/default._lw_qwb_tmp_8693497299788498 (0)
     DATA:
         {"collection-id":"default","query-pipeline-id":"_lw_qwb_tmp_8693497299788498","id":"default._lw_qwb_tmp_8693497299788498","created-at":"2017-10-20T22:18:44Z","per-page":10}
     /lwfusion/3.1.0/proxy/search-app-pref/default.default (0)
     DATA:
         {"collection-id":"default","query-pipeline-id":"default","id":"default.default","created-at":"2017-10-20T22:03:25Z","per-page":10,"updated-at":"2017-10-20T22:10:46Z"}
    /lwfusion/3.1.0/proxy/proxy-startup-lock (0)
    DATA:
        
    /lwfusion/3.1.0/proxy/object (0)
   /lwfusion/3.1.0/solr (8)
   DATA:
       10.128.0.2
    /lwfusion/3.1.0/solr/configs (12)
    DATA:
        
     /lwfusion/3.1.0/solr/configs/system_metrics (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/system_metrics/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_metrics/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_metrics/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/system_metrics/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_metrics/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_metrics/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_metrics/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_metrics/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/system_metrics/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_metrics/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/system_blobs (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/system_blobs/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_blobs/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_blobs/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
            <field indexed="false" multiValued="false" name="rawdata_bin" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/system_blobs/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_blobs/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_blobs/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_blobs/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_blobs/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/system_blobs/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_blobs/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/default (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/default/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8"?>
          <!-- Solr managed schema - automatically generated - DO NOT EDIT -->
          <schema name="example-data-driven-schema" version="1.6">
            <uniqueKey>id</uniqueKey>
            <fieldType name="ancestor_path" class="solr.TextField">
              <analyzer type="index">
                <tokenizer class="solr.KeywordTokenizerFactory"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
              </analyzer>
            </fieldType>
            <fieldType name="binary" class="solr.BinaryField"/>
            <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
            <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>
            <fieldType name="currency" class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" precisionStep="8"/>
            <fieldType name="date" class="solr.TrieDateField" positionIncrementGap="0" docValues="true" precisionStep="0"/>
            <fieldType name="dates" class="solr.TrieDateField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="0"/>
            <fieldType name="descendent_path" class="solr.TextField">
              <analyzer type="index">
                <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.KeywordTokenizerFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="double" class="solr.TrieDoubleField" positionIncrementGap="0" docValues="true" precisionStep="0"/>
            <fieldType name="doubles" class="solr.TrieDoubleField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="0"/>
            <fieldType name="float" class="solr.TrieFloatField" positionIncrementGap="0" docValues="true" precisionStep="0"/>
            <fieldType name="floats" class="solr.TrieFloatField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="0"/>
            <fieldType name="ignored" class="solr.StrField" indexed="false" stored="false" docValues="false" multiValued="true"/>
            <fieldType name="int" class="solr.TrieIntField" positionIncrementGap="0" docValues="true" precisionStep="0"/>
            <fieldType name="ints" class="solr.TrieIntField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="0"/>
            <fieldType name="location" class="solr.LatLonPointSpatialField" docValues="true"/>
            <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType" geo="true" maxDistErr="0.001" distErrPct="0.025" distanceUnits="kilometers"/>
            <fieldType name="long" class="solr.TrieLongField" positionIncrementGap="0" docValues="true" precisionStep="0"/>
            <fieldType name="longs" class="solr.TrieLongField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="0"/>
            <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
            <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>
            <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>
            <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
            <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
            <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
            <fieldType name="phonetic_en" class="solr.TextField" indexed="true" stored="false">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
              </analyzer>
            </fieldType>
            <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
            <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
            <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
            <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
            <fieldType name="point" class="solr.PointType" subFieldSuffix="_d" dimension="2"/>
            <fieldType name="random" class="solr.RandomSortField" indexed="true"/>
            <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true"/>
            <fieldType name="strings" class="solr.StrField" sortMissingLast="true" docValues="true" multiValued="true"/>
            <fieldType name="tdate" class="solr.TrieDateField" positionIncrementGap="0" docValues="true" precisionStep="6"/>
            <fieldType name="tdates" class="solr.TrieDateField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="6"/>
            <fieldType name="tdouble" class="solr.TrieDoubleField" positionIncrementGap="0" docValues="true" precisionStep="8"/>
            <fieldType name="tdoubles" class="solr.TrieDoubleField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="8"/>
            <fieldType name="text_ar" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_ar.txt" ignoreCase="true"/>
                <filter class="solr.ArabicNormalizationFilterFactory"/>
                <filter class="solr.ArabicStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_bg" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_bg.txt" ignoreCase="true"/>
                <filter class="solr.BulgarianStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_ca" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.ElisionFilterFactory" articles="lang/contractions_ca.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_ca.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_cjk" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.CJKWidthFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.CJKBigramFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_cz" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_cz.txt" ignoreCase="true"/>
                <filter class="solr.CzechStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_da" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_da.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_de" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_de.txt" ignoreCase="true"/>
                <filter class="solr.GermanNormalizationFilterFactory"/>
                <filter class="solr.GermanLightStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_el" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.GreekLowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_el.txt" ignoreCase="false"/>
                <filter class="solr.GreekStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
              <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_en.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.EnglishPossessiveFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_en.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.EnglishPossessiveFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_en_splitting" class="solr.TextField" autoGeneratePhraseQueries="true" positionIncrementGap="100">
              <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_en.txt" ignoreCase="true"/>
                <filter class="solr.WordDelimiterFilterFactory" catenateNumbers="1" generateNumberParts="1" splitOnCaseChange="1" generateWordParts="1" catenateAll="0" catenateWords="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_en.txt" ignoreCase="true"/>
                <filter class="solr.WordDelimiterFilterFactory" catenateNumbers="0" generateNumberParts="1" splitOnCaseChange="1" generateWordParts="1" catenateAll="0" catenateWords="0"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_en_splitting_tight" class="solr.TextField" autoGeneratePhraseQueries="true" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_en.txt" ignoreCase="true"/>
                <filter class="solr.WordDelimiterFilterFactory" catenateNumbers="1" generateNumberParts="0" generateWordParts="0" catenateAll="0" catenateWords="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_es" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_es.txt" ignoreCase="true"/>
                <filter class="solr.SpanishLightStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_eu" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_eu.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_fa" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <charFilter class="solr.PersianCharFilterFactory"/>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.ArabicNormalizationFilterFactory"/>
                <filter class="solr.PersianNormalizationFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_fa.txt" ignoreCase="true"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_fi" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_fi.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_fr" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.ElisionFilterFactory" articles="lang/contractions_fr.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_fr.txt" ignoreCase="true"/>
                <filter class="solr.FrenchLightStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_ga" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.ElisionFilterFactory" articles="lang/contractions_ga.txt" ignoreCase="true"/>
                <filter class="solr.StopFilterFactory" words="lang/hyphenations_ga.txt" ignoreCase="true"/>
                <filter class="solr.IrishLowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_ga.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
              <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
                <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
              <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.ReversedWildcardFilterFactory" maxPosQuestion="2" maxFractionAsterisk="0.33" maxPosAsterisk="3" withOriginal="true"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_gl" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_gl.txt" ignoreCase="true"/>
                <filter class="solr.GalicianStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_hi" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.IndicNormalizationFilterFactory"/>
                <filter class="solr.HindiNormalizationFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_hi.txt" ignoreCase="true"/>
                <filter class="solr.HindiStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_hu" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_hu.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_hy" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_hy.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_id" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_id.txt" ignoreCase="true"/>
                <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_it" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.ElisionFilterFactory" articles="lang/contractions_it.txt" ignoreCase="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_it.txt" ignoreCase="true"/>
                <filter class="solr.ItalianLightStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_ja" class="solr.TextField" autoGeneratePhraseQueries="false" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                <filter class="solr.JapaneseBaseFormFilterFactory"/>
                <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                <filter class="solr.CJKWidthFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_ja.txt" ignoreCase="true"/>
                <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                <filter class="solr.LowerCaseFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_lv" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_lv.txt" ignoreCase="true"/>
                <filter class="solr.LatvianStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_nl" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_nl.txt" ignoreCase="true"/>
                <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_no" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_no.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_pt" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_pt.txt" ignoreCase="true"/>
                <filter class="solr.PortugueseLightStemFilterFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_ro" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_ro.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_ru" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_ru.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_sv" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" format="snowball" words="lang/stopwords_sv.txt" ignoreCase="true"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_th" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.ThaiTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_th.txt" ignoreCase="true"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_tr" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.TurkishLowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" words="lang/stopwords_tr.txt" ignoreCase="false"/>
                <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
              </analyzer>
            </fieldType>
            <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
              <analyzer>
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
              </analyzer>
            </fieldType>
            <fieldType name="tfloat" class="solr.TrieFloatField" positionIncrementGap="0" docValues="true" precisionStep="8"/>
            <fieldType name="tfloats" class="solr.TrieFloatField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="8"/>
            <fieldType name="tint" class="solr.TrieIntField" positionIncrementGap="0" docValues="true" precisionStep="8"/>
            <fieldType name="tints" class="solr.TrieIntField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="8"/>
            <fieldType name="tlong" class="solr.TrieLongField" positionIncrementGap="0" docValues="true" precisionStep="8"/>
            <fieldType name="tlongs" class="solr.TrieLongField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="8"/>
            <field name="_raw_content_" type="binary" multiValued="false" indexed="false" required="false" stored="true"/>
            <field name="_root_" type="string" docValues="false" indexed="true" stored="false"/>
            <field name="_text_" type="text_general" multiValued="true" indexed="true" stored="false"/>
            <field name="_version_" type="long" indexed="false" stored="false"/>
            <field name="body_t_lang" type="strings"/>
            <field name="id" type="string" multiValued="false" indexed="true" required="true" stored="true"/>
            <field name="title_t_lang" type="strings"/>
            <dynamicField name="*_txt_en_split_tight" type="text_en_splitting_tight" indexed="true" stored="true"/>
            <dynamicField name="*_descendent_path" type="descendent_path" indexed="true" stored="true"/>
            <dynamicField name="*_ancestor_path" type="ancestor_path" indexed="true" stored="true"/>
            <dynamicField name="*_txt_en_split" type="text_en_splitting" indexed="true" stored="true"/>
            <dynamicField name="ignored_*" type="ignored" multiValued="true"/>
            <dynamicField name="*_txt_rev" type="text_general_rev" indexed="true" stored="true"/>
            <dynamicField name="*_phon_en" type="phonetic_en" indexed="true" stored="true"/>
            <dynamicField name="*_s_lower" type="lowercase" indexed="true" stored="true"/>
            <dynamicField name="*_txt_cjk" type="text_cjk" indexed="true" stored="true"/>
            <dynamicField name="random_*" type="random"/>
            <dynamicField name="*_txt_en" type="text_en" indexed="true" stored="true"/>
            <dynamicField name="*_txt_ar" type="text_ar" indexed="true" stored="true"/>
            <dynamicField name="*_txt_bg" type="text_bg" indexed="true" stored="true"/>
            <dynamicField name="*_txt_ca" type="text_ca" indexed="true" stored="true"/>
            <dynamicField name="*_txt_cz" type="text_cz" indexed="true" stored="true"/>
            <dynamicField name="*_txt_da" type="text_da" indexed="true" stored="true"/>
            <dynamicField name="*_txt_de" type="text_de" indexed="true" stored="true"/>
            <dynamicField name="*_txt_el" type="text_el" indexed="true" stored="true"/>
            <dynamicField name="*_txt_es" type="text_es" indexed="true" stored="true"/>
            <dynamicField name="*_txt_eu" type="text_eu" indexed="true" stored="true"/>
            <dynamicField name="*_txt_fa" type="text_fa" indexed="true" stored="true"/>
            <dynamicField name="*_txt_fi" type="text_fi" indexed="true" stored="true"/>
            <dynamicField name="*_txt_fr" type="text_fr" indexed="true" stored="true"/>
            <dynamicField name="*_txt_ga" type="text_ga" indexed="true" stored="true"/>
            <dynamicField name="*_txt_gl" type="text_gl" indexed="true" stored="true"/>
            <dynamicField name="*_txt_hi" type="text_hi" indexed="true" stored="true"/>
            <dynamicField name="*_txt_hu" type="text_hu" indexed="true" stored="true"/>
            <dynamicField name="*_txt_hy" type="text_hy" indexed="true" stored="true"/>
            <dynamicField name="*_txt_id" type="text_id" indexed="true" stored="true"/>
            <dynamicField name="*_txt_it" type="text_it" indexed="true" stored="true"/>
            <dynamicField name="*_txt_ja" type="text_ja" indexed="true" stored="true"/>
            <dynamicField name="*_txt_lv" type="text_lv" indexed="true" stored="true"/>
            <dynamicField name="*_txt_nl" type="text_nl" indexed="true" stored="true"/>
            <dynamicField name="*_txt_no" type="text_no" indexed="true" stored="true"/>
            <dynamicField name="*_txt_pt" type="text_pt" indexed="true" stored="true"/>
            <dynamicField name="*_txt_ro" type="text_ro" indexed="true" stored="true"/>
            <dynamicField name="*_txt_ru" type="text_ru" indexed="true" stored="true"/>
            <dynamicField name="*_txt_sv" type="text_sv" indexed="true" stored="true"/>
            <dynamicField name="*_txt_th" type="text_th" indexed="true" stored="true"/>
            <dynamicField name="*_txt_tr" type="text_tr" indexed="true" stored="true"/>
            <dynamicField name="*_point" type="point" indexed="true" stored="true"/>
            <dynamicField name="*_srpt" type="location_rpt" indexed="true" stored="true"/>
            <dynamicField name="*_pdts" type="pdates" indexed="true" stored="true"/>
            <dynamicField name="*_tdts" type="tdates" indexed="true" stored="true"/>
            <dynamicField name="attr_*" type="text_general" multiValued="true" indexed="true" stored="true"/>
            <dynamicField name="*_txt" type="text_general" indexed="true" stored="true"/>
            <dynamicField name="*_dts" type="date" multiValued="true" indexed="true" stored="true"/>
            <dynamicField name="*_pis" type="pints" indexed="true" stored="true"/>
            <dynamicField name="*_pls" type="plongs" indexed="true" stored="true"/>
            <dynamicField name="*_pfs" type="pfloats" indexed="true" stored="true"/>
            <dynamicField name="*_pds" type="pdoubles" indexed="true" stored="true"/>
            <dynamicField name="*_pdt" type="pdate" indexed="true" stored="true"/>
            <dynamicField name="*_tis" type="tints" indexed="true" stored="true"/>
            <dynamicField name="*_tls" type="tlongs" indexed="true" stored="true"/>
            <dynamicField name="*_tfs" type="tfloats" indexed="true" stored="true"/>
            <dynamicField name="*_tds" type="tdoubles" indexed="true" stored="true"/>
            <dynamicField name="*_tdt" type="tdate" indexed="true" stored="true"/>
            <dynamicField name="*_is" type="ints" indexed="true" stored="true"/>
            <dynamicField name="*_ss" type="strings" indexed="true" stored="true"/>
            <dynamicField name="*_ls" type="longs" indexed="true" stored="true"/>
            <dynamicField name="*_bs" type="booleans" indexed="true" stored="true"/>
            <dynamicField name="*_fs" type="floats" indexed="true" stored="true"/>
            <dynamicField name="*_ds" type="doubles" indexed="true" stored="true"/>
            <dynamicField name="*_dt" type="date" indexed="true" stored="true"/>
            <dynamicField name="*_pi" type="pint" indexed="true" stored="true"/>
            <dynamicField name="*_pl" type="plong" indexed="true" stored="true"/>
            <dynamicField name="*_pf" type="pfloat" indexed="true" stored="true"/>
            <dynamicField name="*_pd" type="pdouble" indexed="true" stored="true"/>
            <dynamicField name="*_ti" type="tint" indexed="true" stored="true"/>
            <dynamicField name="*_tl" type="tlong" indexed="true" stored="true"/>
            <dynamicField name="*_tf" type="tfloat" indexed="true" stored="true"/>
            <dynamicField name="*_td" type="tdouble" indexed="true" stored="true"/>
            <dynamicField name="*_ws" type="text_ws" indexed="true" stored="true"/>
            <dynamicField name="*_i" type="int" indexed="true" stored="true"/>
            <dynamicField name="*_s" type="string" indexed="true" stored="true"/>
            <dynamicField name="*_l" type="long" indexed="true" stored="true"/>
            <dynamicField name="*_t" type="text_general" indexed="true" stored="true"/>
            <dynamicField name="*_b" type="boolean" indexed="true" stored="true"/>
            <dynamicField name="*_f" type="float" indexed="true" stored="true"/>
            <dynamicField name="*_d" type="double" indexed="true" stored="true"/>
            <dynamicField name="*_p" type="location" indexed="true" stored="true"/>
            <dynamicField name="*_c" type="currency" indexed="true" stored="true"/>
            <copyField source="*" dest="_text_"/>
          </schema>
      /lwfusion/3.1.0/solr/configs/default/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/default/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/default/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/system_messages (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/system_messages/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_messages/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_messages/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/system_messages/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_messages/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_messages/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_messages/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_messages/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/system_messages/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/system_messages/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_messages/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/default_logs (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/default_logs/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_logs/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_logs/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/default_logs/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_logs/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_logs/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_logs/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_logs/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/default_logs/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/default_logs/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_logs/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/default_signals (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/default_signals/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/default_signals/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/default_signals/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/default_signals/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/recommender_models (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/recommender_models/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/recommender_models/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/recommender_models/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/recommender_models/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/recommender_models/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/recommender_models/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/recommender_models/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/recommender_models/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/recommender_models/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/recommender_models/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/default_signals_aggr (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/default_signals_aggr/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/logs (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/logs/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/logs/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/logs/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/logs/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/logs/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/logs/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/logs/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/logs/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/logs/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/logs/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/logs/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/audit_logs (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/audit_logs/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/audit_logs/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/audit_logs/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
            <dynamicField indexed="false" multiValued="true" name="*_bi" required="false" stored="true" type="binary"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/audit_logs/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/audit_logs/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/audit_logs/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/audit_logs/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/audit_logs/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/audit_logs/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/audit_logs/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/system_jobs_history (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/system_jobs_history/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_jobs_history/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_jobs_history/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/system_jobs_history/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_jobs_history/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_jobs_history/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_jobs_history/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_jobs_history/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/system_jobs_history/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_jobs_history/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
     /lwfusion/3.1.0/solr/configs/system_history (9)
     DATA:
         10.128.0.2
      /lwfusion/3.1.0/solr/configs/system_history/currency.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_history/protwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_history/managed-schema (0)
      DATA:
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <!--
           Licensed to the Apache Software Foundation (ASF) under one or more
           contributor license agreements.  See the NOTICE file distributed with
           this work for additional information regarding copyright ownership.
           The ASF licenses this file to You under the Apache License, Version 2.0
           (the "License"); you may not use this file except in compliance with
           the License.  You may obtain a copy of the License at
          
               http://www.apache.org/licenses/LICENSE-2.0
          
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
          --><!--  
           This is the Solr schema file. This file should be named "schema.xml" and
           should be in the conf directory under the solr home
           (i.e. ./solr/conf/schema.xml by default) 
           or located where the classloader for the Solr webapp can find it.
          
           This example schema is the recommended starting point for users.
           It should be kept correct and concise, usable out-of-the-box.
          
           For more information, on how to customize this file, please see
           http://wiki.apache.org/solr/SchemaXml
          
           PERFORMANCE NOTE: this schema includes many optional features and should not
           be used for benchmarking.  To improve performance one could
            - set stored="false" for all fields possible (esp large fields) when you
              only need to search on the field but don't need to return the original
              value.
            - set indexed="false" if you don't need to search on the field, but only
              return the field as a result of searching on other indexed fields.
            - remove all unneeded copyField statements
            - for best index size and searching performance, set "index" to false
              for all general text fields, use copyField to copy them to the
              catchall "text" field, and use that for searching.
            - For maximum indexing performance, use the ConcurrentUpdateSolrServer
              java client.
            - Remember to run the JVM in server mode, and use a higher logging level
              that avoids logging every request
          --><schema name="example-data-driven-schema" version="1.6">
              <!-- attribute "name" is the name of this schema and is only used for display purposes.
                 version="x.y" is Solr's version number for the schema syntax and 
                 semantics.  It should not normally be changed by applications.
          
                 1.0: multiValued attribute did not exist, all fields are multiValued 
                      by nature
                 1.1: multiValued attribute introduced, false by default 
                 1.2: omitTermFreqAndPositions attribute introduced, true by default 
                      except for text fields.
                 1.3: removed optional field compress feature
                 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
                      behavior when a single string produces multiple tokens.  Defaults 
                      to off for version >= 1.4
                 1.5: omitNorms defaults to true for primitive field types 
                      (int, float, boolean, string...)
                 1.6: useDocValuesAsStored defaults to true.
              -->
          
              <!-- Valid attributes for fields:
               name: mandatory - the name for the field
               type: mandatory - the name of a field type from the 
                 fieldTypes section
               indexed: true if this field should be indexed (searchable or sortable)
               stored: true if this field should be retrievable
               docValues: true if this field should have doc values. Doc values are
                 useful (required, if you are using *Point fields) for faceting, 
                 grouping, sorting and function queries. Doc values will make the index 
                 faster to load, more NRT-friendly and more memory-efficient. 
                 They however come with some limitations: they are currently only 
                 supported by StrField, UUIDField, all Trie*Fields and *PointFields,
                 and depending on the field type, they might require the field to be
                 single-valued, be required or have a default value (check the
                 documentation of the field type you're interested in for more information)
               multiValued: true if this field may contain multiple values per document
               omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 Norms are omitted for primitive (non-analyzed) types by default.
               termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
               termPositions: Store position information with the term vector.  
                 This will increase storage costs.
               termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
               required: The field is required.  It will throw an error if the
                 value does not exist
               default: a value that should be used if no value is specified
                 when adding a document.
              -->
          
              <!-- field names should consist of alphanumeric or underscore characters only and
                not start with a digit.  This is not currently strictly enforced,
                but other field names will not have first class support from all components
                and back compatibility is not guaranteed.  Names with both leading and
                trailing underscores (e.g. _version_) are reserved.
              -->
          
              <!-- In this data_driven_schema_configs configset, only three fields are pre-declared: 
                   id, _version_, and _text_.  All other fields will be type guessed and added via the
                   "add-unknown-fields-to-the-schema" update request processor chain declared 
                   in solrconfig.xml.
                   
                   Note that many dynamic fields are also defined - you can use them to specify a 
                   field's type via field naming conventions - see below.
            
                   WARNING: The _text_ catch-all field will significantly increase your index size.
                   If you don't need it, consider removing it and the corresponding copyField directive.
              -->
              <field indexed="true" multiValued="false" name="id" required="true" stored="true" type="string"/>
              <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
              <field indexed="false" name="_version_" stored="false" type="long"/>
              <field docValues="false" indexed="true" name="_root_" stored="false" type="string"/>
              <field indexed="true" multiValued="true" name="_text_" stored="false" type="text_general"/>
            <field indexed="false" multiValued="false" name="_raw_content_" required="false" stored="true" type="binary"/>
          
              <!-- Only enabled in the "schemaless" data-driven example (assuming the client
                   does not know what fields may be searched) because it's very expensive to index everything twice. -->
              <copyField dest="_text_" source="*"/>
          
              <!-- Dynamic field definitions allow using convention over configuration
                 for fields via the specification of patterns to match field names. 
                 EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
                 RESTRICTION: the glob-like pattern in the name attribute must have
                 a "*" only at the start or the end.  -->
             
              <dynamicField indexed="true" name="*_i" stored="true" type="int"/>
              <dynamicField indexed="true" name="*_is" stored="true" type="ints"/>
              <dynamicField indexed="true" name="*_s" stored="true" type="string"/>
              <dynamicField indexed="true" name="*_ss" stored="true" type="strings"/>
              <dynamicField indexed="true" name="*_l" stored="true" type="long"/>
              <dynamicField indexed="true" name="*_ls" stored="true" type="longs"/>
              <dynamicField indexed="true" name="*_t" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_txt" stored="true" type="text_general"/>
              <dynamicField indexed="true" name="*_b" stored="true" type="boolean"/>
              <dynamicField indexed="true" name="*_bs" stored="true" type="booleans"/>
              <dynamicField indexed="true" name="*_f" stored="true" type="float"/>
              <dynamicField indexed="true" name="*_fs" stored="true" type="floats"/>
              <dynamicField indexed="true" name="*_d" stored="true" type="double"/>
              <dynamicField indexed="true" name="*_ds" stored="true" type="doubles"/>
          
              <dynamicField indexed="true" name="*_dt" stored="true" type="date"/>
              <dynamicField indexed="true" multiValued="true" name="*_dts" stored="true" type="date"/>
              <dynamicField indexed="true" name="*_p" stored="true" type="location"/>
              <dynamicField indexed="true" name="*_srpt" stored="true" type="location_rpt"/>
              
              <!-- KD-tree (point) numerics -->
              <dynamicField indexed="true" name="*_pi" stored="true" type="pint"/>
              <dynamicField indexed="true" name="*_pis" stored="true" type="pints"/>
              <dynamicField indexed="true" name="*_pl" stored="true" type="plong"/>
              <dynamicField indexed="true" name="*_pls" stored="true" type="plongs"/>
              <dynamicField indexed="true" name="*_pf" stored="true" type="pfloat"/>
              <dynamicField indexed="true" name="*_pfs" stored="true" type="pfloats"/>
              <dynamicField indexed="true" name="*_pd" stored="true" type="pdouble"/>
              <dynamicField indexed="true" name="*_pds" stored="true" type="pdoubles"/>
              <dynamicField indexed="true" name="*_pdt" stored="true" type="pdate"/>
              <dynamicField indexed="true" name="*_pdts" stored="true" type="pdates"/>
          
              <!-- some trie-coded dynamic fields -->
              <dynamicField indexed="true" name="*_ti" stored="true" type="tint"/>
              <dynamicField indexed="true" name="*_tis" stored="true" type="tints"/>
              <dynamicField indexed="true" name="*_tl" stored="true" type="tlong"/>
              <dynamicField indexed="true" name="*_tls" stored="true" type="tlongs"/>
              <dynamicField indexed="true" name="*_tf" stored="true" type="tfloat"/>
              <dynamicField indexed="true" name="*_tfs" stored="true" type="tfloats"/>
              <dynamicField indexed="true" name="*_td" stored="true" type="tdouble"/>
              <dynamicField indexed="true" name="*_tds" stored="true" type="tdoubles"/>
              <dynamicField indexed="true" name="*_tdt" stored="true" type="tdate"/>
              <dynamicField indexed="true" name="*_tdts" stored="true" type="tdates"/>
          
              <dynamicField indexed="true" name="*_c" stored="true" type="currency"/>
          
              <dynamicField multiValued="true" name="ignored_*" type="ignored"/>
              <dynamicField indexed="true" multiValued="true" name="attr_*" stored="true" type="text_general"/>
          
              <dynamicField name="random_*" type="random"/>
          
              <!-- uncomment the following to ignore any fields that don't already match an existing 
                  field name or dynamic field, rather than reporting them as an error. 
                  alternately, change the type="ignored" to some other type e.g. "text" if you want 
                  unknown fields indexed and/or stored by default 
                  
                  NB: use of "*" dynamic fields will disable field type guessing and adding
                  unknown fields to the schema. --> 
              <!--dynamicField name="*" type="ignored" multiValued="true" /-->
          
              <!-- Field to use to determine and enforce document uniqueness.
                Unless this field is marked with required="false", it will be a required field
              -->
              <uniqueKey>id</uniqueKey>
          
              <!-- copyField commands copy one field to another at the time a document
                 is added to the index.  It's used either to index the same field differently,
                 or to add multiple fields to the same field for easier/faster searching.
          
              <copyField source="sourceFieldName" dest="destinationFieldName"/>
              -->
          
              <!-- field type definitions. The "name" attribute is
                 just a label to be used by field definitions.  The "class"
                 attribute and any other attributes determine the real
                 behavior of the fieldType.
                   Class names starting with "solr" refer to java classes in a
                 standard package such as org.apache.solr.analysis
              -->
          
              <!-- The StrField type is not analyzed, but indexed/stored verbatim.
                 It supports doc values but in that case the field needs to be
                 single-valued and either required or have a default value.
                -->
              <fieldType class="solr.StrField" docValues="true" name="string" sortMissingLast="true"/>
              <fieldType class="solr.StrField" docValues="true" multiValued="true" name="strings" sortMissingLast="true"/>
          
              <!-- boolean type: "true" or "false" -->
              <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
          
              <fieldType class="solr.BoolField" multiValued="true" name="booleans" sortMissingLast="true"/>
          
              <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
                   currently supported on types that are sorted internally as strings
                   and on numeric types.
          	     This includes "string","boolean", "int", "float", "long", "date", "double",
          	     including the "Trie" and "Point" variants.
                 - If sortMissingLast="true", then a sort on this field will cause documents
                   without the field to come after documents with the field,
                   regardless of the requested sort order (asc or desc).
                 - If sortMissingFirst="true", then a sort on this field will cause documents
                   without the field to come before documents with the field,
                   regardless of the requested sort order.
                 - If sortMissingLast="false" and sortMissingFirst="false" (the default),
                   then default lucene sorting will be used which places docs without the
                   field first in an ascending sort and last in a descending sort.
              -->    
          
              <!--
                Numeric field types that index values using KD-trees. *Point fields are faster and more efficient than Trie* fields both, at
                search time and at index time, but some features are still not supported.
                Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
              -->
              <fieldType class="solr.IntPointField" docValues="true" name="pint"/>
              <fieldType class="solr.FloatPointField" docValues="true" name="pfloat"/>
              <fieldType class="solr.LongPointField" docValues="true" name="plong"/>
              <fieldType class="solr.DoublePointField" docValues="true" name="pdouble"/>
              
              <fieldType class="solr.IntPointField" docValues="true" multiValued="true" name="pints"/>
              <fieldType class="solr.FloatPointField" docValues="true" multiValued="true" name="pfloats"/>
              <fieldType class="solr.LongPointField" docValues="true" multiValued="true" name="plongs"/>
              <fieldType class="solr.DoublePointField" docValues="true" multiValued="true" name="pdoubles"/>
          
              <!--
                Default numeric field types. For faster range queries, consider *PointFields (pint/pfloat/plong/pdouble), or the 
                tint/tfloat/tlong/tdouble types.
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="int" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="float" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="long" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="double" positionIncrementGap="0" precisionStep="0"/>
          
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="ints" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="floats" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="longs" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="doubles" positionIncrementGap="0" precisionStep="0"/>
          
              <!--
               Numeric field types that index each value at various levels of precision
               to accelerate range queries when the number of values between the range
               endpoints is large. See the javadoc for NumericRangeQuery for internal
               implementation details.
          
               Smaller precisionStep values (specified in bits) will lead to more tokens
               indexed per value, slightly larger index size, and faster range queries.
               A precisionStep of 0 disables indexing at different precision levels.
               
               Consider using pint/pfloat/plong/pdouble instead of Trie* fields if possible
              -->
              <fieldType class="solr.TrieIntField" docValues="true" name="tint" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" name="tfloat" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" name="tlong" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" name="tdouble" positionIncrementGap="0" precisionStep="8"/>
              
              <fieldType class="solr.TrieIntField" docValues="true" multiValued="true" name="tints" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieFloatField" docValues="true" multiValued="true" name="tfloats" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieLongField" docValues="true" multiValued="true" name="tlongs" positionIncrementGap="0" precisionStep="8"/>
              <fieldType class="solr.TrieDoubleField" docValues="true" multiValued="true" name="tdoubles" positionIncrementGap="0" precisionStep="8"/>
          
              <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
                   is a more restricted form of the canonical representation of dateTime
                   http://www.w3.org/TR/xmlschema-2/#dateTime    
                   The trailing "Z" designates UTC time and is mandatory.
                   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
                   All other components are mandatory.
          
                   Expressions can also be used to denote calculations that should be
                   performed relative to "NOW" to determine the value, ie...
          
                         NOW/HOUR
                            ... Round to the start of the current hour
                         NOW-1DAY
                            ... Exactly 1 day prior to now
                         NOW/DAY+6MONTHS+3DAYS
                            ... 6 months and 3 days in the future from the start of
                                the current day
                                
                   Consult the TrieDateField javadocs for more information.
                -->
              <!-- KD-tree versions of date fields -->
              <fieldType class="solr.DatePointField" docValues="true" name="pdate"/>
              <fieldType class="solr.DatePointField" docValues="true" multiValued="true" name="pdates"/>
              
              <fieldType class="solr.TrieDateField" docValues="true" name="date" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="dates" positionIncrementGap="0" precisionStep="0"/>
              <fieldType class="solr.TrieDateField" docValues="true" name="tdate" positionIncrementGap="0" precisionStep="6"/>
              <fieldType class="solr.TrieDateField" docValues="true" multiValued="true" name="tdates" positionIncrementGap="0" precisionStep="6"/>
          
          
              <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
              <fieldType class="solr.BinaryField" name="binary"/>
          
              <!-- The "RandomSortField" is not used to store or search any
                   data.  You can declare fields of this type it in your schema
                   to generate pseudo-random orderings of your docs for sorting 
                   or function purposes.  The ordering is generated based on the field
                   name and the version of the index. As long as the index version
                   remains unchanged, and the same field name is reused,
                   the ordering of the docs will be consistent.  
                   If you want different psuedo-random orderings of documents,
                   for the same version of the index, use a dynamicField and
                   change the field name in the request.
               -->
              <fieldType class="solr.RandomSortField" indexed="true" name="random"/>
          
              <!-- solr.TextField allows the specification of custom text analyzers
                   specified as a tokenizer and a list of token filters. Different
                   analyzers may be specified for indexing and querying.
          
                   The optional positionIncrementGap puts space between multiple fields of
                   this type on the same document, with the purpose of preventing false phrase
                   matching across fields.
          
                   For more info on customizing your analyzer chain, please see
                   http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
               -->
          
              <!-- One can also specify an existing Analyzer class that has a
                   default constructor via the class attribute on the analyzer element.
                   Example:
              <fieldType name="text_greek" class="solr.TextField">
                <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
              </fieldType>
              -->
          
              <!-- A text field that only splits on whitespace for exact matching of words -->
              <dynamicField indexed="true" name="*_ws" stored="true" type="text_ws"/>
              <fieldType class="solr.TextField" name="text_ws" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A general text field that has reasonable, generic
                   cross-language defaults: it tokenizes with StandardTokenizer,
          	       removes stop words from case-insensitive "stopwords.txt"
          	       (empty by default), and down cases.  At query time only, it
          	       also applies synonyms.
          	  -->
              <fieldType class="solr.TextField" multiValued="true" name="text_general" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English: it
                   tokenizes with StandardTokenizer, removes English stop words
                   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
                   finally applies Porter's stemming.  The query time analyzer
                   also applies synonyms from synonyms.txt. -->
              <dynamicField indexed="true" name="*_txt_en" stored="true" type="text_en"/>
              <fieldType class="solr.TextField" name="text_en" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.EnglishPossessiveFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
          	      -->
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- A text field with defaults appropriate for English, plus
                   aggressive word-splitting and autophrase features enabled.
                   This field is just like text_en, except it adds
                   WordDelimiterFilter to enable splitting and matching of
                   words on case-change, alpha numeric boundaries, and
                   non-alphanumeric chars.  This means certain compound word
                   cases will work, for example query "wi fi" will match
                   document "WiFi" or "wi-fi".
              -->
              <dynamicField indexed="true" name="*_txt_en_split" stored="true" type="text_en_splitting"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <!-- in this example, we will only use synonyms at query time
                  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                  -->
                  <!-- Case insensitive stop word removal.
                  -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.PorterStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
                   but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
              <dynamicField indexed="true" name="*_txt_en_split_tight" stored="true" type="text_en_splitting_tight"/>
              <fieldType autoGeneratePhraseQueries="true" class="solr.TextField" name="text_en_splitting_tight" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="false" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
                  <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                  <filter class="solr.EnglishMinimalStemFilterFactory"/>
                  <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                       possible with WordDelimiterFilter in conjuncton with stemming. -->
                  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Just like text_general except it reverses the characters of
          	       each token, to enable more efficient leading wildcard queries.
              -->
              <dynamicField indexed="true" name="*_txt_rev" stored="true" type="text_general_rev"/>
              <fieldType class="solr.TextField" name="text_general_rev" positionIncrementGap="100">
                <analyzer type="index">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ReversedWildcardFilterFactory" maxFractionAsterisk="0.33" maxPosAsterisk="3" maxPosQuestion="2" withOriginal="true"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <dynamicField indexed="true" name="*_phon_en" stored="true" type="phonetic_en"/>
              <fieldType class="solr.TextField" indexed="true" name="phonetic_en" stored="false">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
                </analyzer>
              </fieldType>
          
              <!-- lowercases the entire field value, keeping it as a single token.  -->
              <dynamicField indexed="true" name="*_s_lower" stored="true" type="lowercase"/>
              <fieldType class="solr.TextField" name="lowercase" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- 
                Example of using PathHierarchyTokenizerFactory at index time, so
                queries for paths match documents at that path, or in descendent paths
              -->
              <dynamicField indexed="true" name="*_descendent_path" stored="true" type="descendent_path"/>
              <fieldType class="solr.TextField" name="descendent_path">
                <analyzer type="index">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
              </fieldType>
          
              <!--
                Example of using PathHierarchyTokenizerFactory at query time, so
                queries for paths match documents at that path, or in ancestor paths
              -->
              <dynamicField indexed="true" name="*_ancestor_path" stored="true" type="ancestor_path"/>
              <fieldType class="solr.TextField" name="ancestor_path">
                <analyzer type="index">
                  <tokenizer class="solr.KeywordTokenizerFactory"/>
                </analyzer>
                <analyzer type="query">
                  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
                </analyzer>
              </fieldType>
          
              <!-- since fields of this type are by default not stored or indexed,
                   any data added to them will be ignored outright.  --> 
              <fieldType class="solr.StrField" docValues="false" indexed="false" multiValued="true" name="ignored" stored="false"/>
          
              <!-- This point type indexes the coordinates as separate fields (subFields)
                If subFieldType is defined, it references a type, and a dynamic field
                definition is created matching *___<typename>.  Alternately, if 
                subFieldSuffix is defined, that is used to create the subFields.
                Example: if subFieldType="double", then the coordinates would be
                  indexed in fields myloc_0___double,myloc_1___double.
                Example: if subFieldSuffix="_d" then the coordinates would be indexed
                  in fields myloc_0_d,myloc_1_d
                The subFields are an implementation detail of the fieldType, and end
                users normally should not need to know about them.
               -->
              <dynamicField indexed="true" name="*_point" stored="true" type="point"/>
              <fieldType class="solr.PointType" dimension="2" name="point" subFieldSuffix="_d"/>
          
              <!-- A specialized field for geospatial search filters and distance sorting. -->
              <fieldType class="solr.LatLonPointSpatialField" docValues="true" name="location"/>
          
              <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
                For more information about this and other Spatial fields new to Solr 4, see:
                http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
              -->
              <fieldType class="solr.SpatialRecursivePrefixTreeFieldType" distErrPct="0.025" distanceUnits="kilometers" geo="true" maxDistErr="0.001" name="location_rpt"/>
          
              <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
                  Parameters:
                    defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
                    precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
                    providerClass:   Lets you plug in other exchange provider backend:
                                     solr.FileExchangeRateProvider is the default and takes one parameter:
                                       currencyConfig: name of an xml file holding exchange rates
                                     solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                                       ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                                       refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
              -->
              <fieldType class="solr.CurrencyField" currencyConfig="currency.xml" defaultCurrency="USD" name="currency" precisionStep="8"/>
                       
          
          
              <!-- some examples for different languages (generally ordered by ISO code) -->
          
              <!-- Arabic -->
              <dynamicField indexed="true" name="*_txt_ar" stored="true" type="text_ar"/>
              <fieldType class="solr.TextField" name="text_ar" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- for any non-arabic -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ar.txt"/>
                  <!-- normalizes ﻯ to ﻱ, etc -->
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.ArabicStemFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Bulgarian -->
              <dynamicField indexed="true" name="*_txt_bg" stored="true" type="text_bg"/>
              <fieldType class="solr.TextField" name="text_bg" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/> 
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_bg.txt"/> 
                  <filter class="solr.BulgarianStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Catalan -->
              <dynamicField indexed="true" name="*_txt_ca" stored="true" type="text_ca"/>
              <fieldType class="solr.TextField" name="text_ca" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_ca.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ca.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Catalan"/>       
                </analyzer>
              </fieldType>
              
              <!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) -->
              <dynamicField indexed="true" name="*_txt_cjk" stored="true" type="text_cjk"/>
              <fieldType class="solr.TextField" name="text_cjk" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- for any non-CJK -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.CJKBigramFilterFactory"/>
                </analyzer>
              </fieldType>
          
              <!-- Czech -->
              <dynamicField indexed="true" name="*_txt_cz" stored="true" type="text_cz"/>
              <fieldType class="solr.TextField" name="text_cz" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_cz.txt"/>
                  <filter class="solr.CzechStemFilterFactory"/>       
                </analyzer>
              </fieldType>
              
              <!-- Danish -->
              <dynamicField indexed="true" name="*_txt_da" stored="true" type="text_da"/>
              <fieldType class="solr.TextField" name="text_da" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_da.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Danish"/>       
                </analyzer>
              </fieldType>
              
              <!-- German -->
              <dynamicField indexed="true" name="*_txt_de" stored="true" type="text_de"/>
              <fieldType class="solr.TextField" name="text_de" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_de.txt"/>
                  <filter class="solr.GermanNormalizationFilterFactory"/>
                  <filter class="solr.GermanLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GermanMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Greek -->
              <dynamicField indexed="true" name="*_txt_el" stored="true" type="text_el"/>
              <fieldType class="solr.TextField" name="text_el" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- greek specific lowercase for sigma -->
                  <filter class="solr.GreekLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_el.txt"/>
                  <filter class="solr.GreekStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Spanish -->
              <dynamicField indexed="true" name="*_txt_es" stored="true" type="text_es"/>
              <fieldType class="solr.TextField" name="text_es" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_es.txt"/>
                  <filter class="solr.SpanishLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Basque -->
              <dynamicField indexed="true" name="*_txt_eu" stored="true" type="text_eu"/>
              <fieldType class="solr.TextField" name="text_eu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_eu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Basque"/>
                </analyzer>
              </fieldType>
              
              <!-- Persian -->
              <dynamicField indexed="true" name="*_txt_fa" stored="true" type="text_fa"/>
              <fieldType class="solr.TextField" name="text_fa" positionIncrementGap="100">
                <analyzer>
                  <!-- for ZWNJ -->
                  <charFilter class="solr.PersianCharFilterFactory"/>
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.ArabicNormalizationFilterFactory"/>
                  <filter class="solr.PersianNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fa.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Finnish -->
              <dynamicField indexed="true" name="*_txt_fi" stored="true" type="text_fi"/>
              <fieldType class="solr.TextField" name="text_fi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fi.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Finnish"/>
                  <!-- less aggressive: <filter class="solr.FinnishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- French -->
              <dynamicField indexed="true" name="*_txt_fr" stored="true" type="text_fr"/>
              <fieldType class="solr.TextField" name="text_fr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_fr.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_fr.txt"/>
                  <filter class="solr.FrenchLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Irish -->
              <dynamicField indexed="true" name="*_txt_ga" stored="true" type="text_ga"/>
              <fieldType class="solr.TextField" name="text_ga" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes d', etc -->
                  <filter articles="lang/contractions_ga.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <!-- removes n-, etc. position increments is intentionally false! -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/hyphenations_ga.txt"/>
                  <filter class="solr.IrishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ga.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Irish"/>
                </analyzer>
              </fieldType>
              
              <!-- Galician -->
              <dynamicField indexed="true" name="*_txt_gl" stored="true" type="text_gl"/>
              <fieldType class="solr.TextField" name="text_gl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_gl.txt"/>
                  <filter class="solr.GalicianStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.GalicianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Hindi -->
              <dynamicField indexed="true" name="*_txt_hi" stored="true" type="text_hi"/>
              <fieldType class="solr.TextField" name="text_hi" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <!-- normalizes unicode representation -->
                  <filter class="solr.IndicNormalizationFilterFactory"/>
                  <!-- normalizes variation in spelling -->
                  <filter class="solr.HindiNormalizationFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hi.txt"/>
                  <filter class="solr.HindiStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Hungarian -->
              <dynamicField indexed="true" name="*_txt_hu" stored="true" type="text_hu"/>
              <fieldType class="solr.TextField" name="text_hu" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_hu.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Hungarian"/>
                  <!-- less aggressive: <filter class="solr.HungarianLightStemFilterFactory"/> -->   
                </analyzer>
              </fieldType>
              
              <!-- Armenian -->
              <dynamicField indexed="true" name="*_txt_hy" stored="true" type="text_hy"/>
              <fieldType class="solr.TextField" name="text_hy" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_hy.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Armenian"/>
                </analyzer>
              </fieldType>
              
              <!-- Indonesian -->
              <dynamicField indexed="true" name="*_txt_id" stored="true" type="text_id"/>
              <fieldType class="solr.TextField" name="text_id" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_id.txt"/>
                  <!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false -->
                  <filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/>
                </analyzer>
              </fieldType>
              
              <!-- Italian -->
            <dynamicField indexed="true" name="*_txt_it" stored="true" type="text_it"/>
            <fieldType class="solr.TextField" name="text_it" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <!-- removes l', etc -->
                  <filter articles="lang/contractions_it.txt" class="solr.ElisionFilterFactory" ignoreCase="true"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_it.txt"/>
                  <filter class="solr.ItalianLightStemFilterFactory"/>
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Italian"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)
          
                   NOTE: If you want to optimize search for precision, use default operator AND in your query
                   parser config with <solrQueryParser defaultOperator="AND"/> further down in this file.  Use 
                   OR if you would like to optimize for recall (default).
              -->
              <dynamicField indexed="true" name="*_txt_ja" stored="true" type="text_ja"/>
              <fieldType autoGeneratePhraseQueries="false" class="solr.TextField" name="text_ja" positionIncrementGap="100">
                <analyzer>
                  <!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)
          
                     Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
                     is used to segment compounds into its parts and the compound itself is kept as synonym.
          
                     Valid values for attribute mode are:
                        normal: regular segmentation
                        search: segmentation useful for search with synonyms compounds (default)
                      extended: same as search mode, but unigrams unknown words (experimental)
          
                     For some applications it might be good to use search mode for indexing and normal mode for
                     queries to reduce recall and prevent parts of compounds from being matched and highlighted.
                     Use <analyzer type="index"> and <analyzer type="query"> for this and mode normal in query.
          
                     Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
                     model with your own entries for segmentation, part-of-speech tags and readings without a need
                     to specify weights.  Notice that user dictionaries have not been subject to extensive testing.
          
                     User dictionary attributes are:
                               userDictionary: user dictionary filename
                       userDictionaryEncoding: user dictionary encoding (default is UTF-8)
          
                     See lang/userdict_ja.txt for a sample user dictionary file.
          
                     Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.
          
                     See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
                  -->
                  <tokenizer class="solr.JapaneseTokenizerFactory" mode="search"/>
                  <!--<tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/>-->
                  <!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) -->
                  <filter class="solr.JapaneseBaseFormFilterFactory"/>
                  <!-- Removes tokens with certain part-of-speech tags -->
                  <filter class="solr.JapanesePartOfSpeechStopFilterFactory" tags="lang/stoptags_ja.txt"/>
                  <!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) -->
                  <filter class="solr.CJKWidthFilterFactory"/>
                  <!-- Removes common tokens typically not useful for search, but have a negative effect on ranking -->
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ja.txt"/>
                  <!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) -->
                  <filter class="solr.JapaneseKatakanaStemFilterFactory" minimumLength="4"/>
                  <!-- Lower-cases romaji characters -->
                  <filter class="solr.LowerCaseFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Latvian -->
              <dynamicField indexed="true" name="*_txt_lv" stored="true" type="text_lv"/>
              <fieldType class="solr.TextField" name="text_lv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_lv.txt"/>
                  <filter class="solr.LatvianStemFilterFactory"/>
                </analyzer>
              </fieldType>
              
              <!-- Dutch -->
              <dynamicField indexed="true" name="*_txt_nl" stored="true" type="text_nl"/>
              <fieldType class="solr.TextField" name="text_nl" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_nl.txt"/>
                  <filter class="solr.StemmerOverrideFilterFactory" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Dutch"/>
                </analyzer>
              </fieldType>
              
              <!-- Norwegian -->
              <dynamicField indexed="true" name="*_txt_no" stored="true" type="text_no"/>
              <fieldType class="solr.TextField" name="text_no" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_no.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Norwegian"/>
                  <!-- less aggressive: <filter class="solr.NorwegianLightStemFilterFactory"/> -->
                  <!-- singular/plural: <filter class="solr.NorwegianMinimalStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Portuguese -->
            <dynamicField indexed="true" name="*_txt_pt" stored="true" type="text_pt"/>
            <fieldType class="solr.TextField" name="text_pt" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_pt.txt"/>
                  <filter class="solr.PortugueseLightStemFilterFactory"/>
                  <!-- less aggressive: <filter class="solr.PortugueseMinimalStemFilterFactory"/> -->
                  <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/> -->
                  <!-- most aggressive: <filter class="solr.PortugueseStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Romanian -->
              <dynamicField indexed="true" name="*_txt_ro" stored="true" type="text_ro"/>
              <fieldType class="solr.TextField" name="text_ro" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_ro.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Romanian"/>
                </analyzer>
              </fieldType>
              
              <!-- Russian -->
              <dynamicField indexed="true" name="*_txt_ru" stored="true" type="text_ru"/>
              <fieldType class="solr.TextField" name="text_ru" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_ru.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Russian"/>
                  <!-- less aggressive: <filter class="solr.RussianLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Swedish -->
              <dynamicField indexed="true" name="*_txt_sv" stored="true" type="text_sv"/>
              <fieldType class="solr.TextField" name="text_sv" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" format="snowball" ignoreCase="true" words="lang/stopwords_sv.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Swedish"/>
                  <!-- less aggressive: <filter class="solr.SwedishLightStemFilterFactory"/> -->
                </analyzer>
              </fieldType>
              
              <!-- Thai -->
              <dynamicField indexed="true" name="*_txt_th" stored="true" type="text_th"/>
              <fieldType class="solr.TextField" name="text_th" positionIncrementGap="100">
                <analyzer>
                  <tokenizer class="solr.ThaiTokenizerFactory"/>
                  <filter class="solr.LowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_th.txt"/>
                </analyzer>
              </fieldType>
              
              <!-- Turkish -->
              <dynamicField indexed="true" name="*_txt_tr" stored="true" type="text_tr"/>
              <fieldType class="solr.TextField" name="text_tr" positionIncrementGap="100">
                <analyzer> 
                  <tokenizer class="solr.StandardTokenizerFactory"/>
                  <filter class="solr.TurkishLowerCaseFilterFactory"/>
                  <filter class="solr.StopFilterFactory" ignoreCase="false" words="lang/stopwords_tr.txt"/>
                  <filter class="solr.SnowballPorterFilterFactory" language="Turkish"/>
                </analyzer>
              </fieldType>
          
              <!-- Similarity is the scoring routine for each document vs. a query.
                 A custom Similarity or SimilarityFactory may be specified here, but 
                 the default is fine for most applications.  
                 For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
              -->
              <!--
               <similarity class="com.example.solr.CustomSimilarityFactory">
                 <str name="paramkey">param value</str>
               </similarity>
              -->
          
          </schema>
          
      /lwfusion/3.1.0/solr/configs/system_history/solrconfig.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_history/synonyms.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_history/elevate.xml (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_history/stopwords.txt (0)
      DATA: ...supressed...
      /lwfusion/3.1.0/solr/configs/system_history/params.json (0)
      DATA:
          {"params":{
            "query":{
              "defType":"edismax",
              "q.alt":"*:*",
              "rows":"10",
              "fl":"*,score",
              "":{"v":0}
            },
            "facets":{
              "facet":"on",
              "facet.mincount": "1",
              "":{"v":0}
            },
           "velocity":{
             "wt": "velocity",
             "v.template":"browse",
             "v.layout": "layout",
             "":{"v":0}
           }
          }}
          
      /lwfusion/3.1.0/solr/configs/system_history/lang (38)
      DATA:
          10.128.0.2
       /lwfusion/3.1.0/solr/configs/system_history/lang/contractions_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_hy.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_no.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stemdict_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/contractions_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_id.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_hi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_da.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_pt.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_hu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_el.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_ru.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_tr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_ar.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/userdict_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_it.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_eu.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_cz.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stoptags_ja.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/contractions_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_de.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_fa.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/contractions_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_ca.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_nl.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_bg.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_es.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_lv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_en.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_th.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_ro.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_fr.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_sv.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_fi.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/hyphenations_ga.txt (0)
       DATA: ...supressed...
       /lwfusion/3.1.0/solr/configs/system_history/lang/stopwords_gl.txt (0)
       DATA: ...supressed...
    /lwfusion/3.1.0/solr/overseer (6)
    DATA:
        
     /lwfusion/3.1.0/solr/overseer/collection-queue-work (0)
     /lwfusion/3.1.0/solr/overseer/queue-work (0)
     /lwfusion/3.1.0/solr/overseer/collection-map-failure (0)
     /lwfusion/3.1.0/solr/overseer/collection-map-completed (0)
     /lwfusion/3.1.0/solr/overseer/queue (0)
     /lwfusion/3.1.0/solr/overseer/collection-map-running (0)
    /lwfusion/3.1.0/solr/aliases.json (0)
    /lwfusion/3.1.0/solr/live_nodes (1)
     /lwfusion/3.1.0/solr/live_nodes/10.128.0.2:8983_solr (0)
    /lwfusion/3.1.0/solr/collections (12)
     /lwfusion/3.1.0/solr/collections/system_metrics (3)
     DATA:
         {"configName":"system_metrics"}
      /lwfusion/3.1.0/solr/collections/system_metrics/leaders (2)
       /lwfusion/3.1.0/solr/collections/system_metrics/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/system_metrics/leaders/shard2/leader (0)
        DATA:
            {
              "core":"system_metrics_shard2_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/system_metrics/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_metrics/leaders/shard1/leader (0)
        DATA:
            {
              "core":"system_metrics_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/system_metrics/state.json (0)
      DATA:
          {"system_metrics":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"system_metrics_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"system_metrics_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect/shard2/election/98863151089975299-core_node2-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/system_metrics/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/system_blobs (3)
     DATA:
         {"configName":"system_blobs"}
      /lwfusion/3.1.0/solr/collections/system_blobs/leaders (1)
       /lwfusion/3.1.0/solr/collections/system_blobs/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_blobs/leaders/shard1/leader (0)
        DATA:
            {
              "core":"system_blobs_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/system_blobs/state.json (0)
      DATA:
          {"system_blobs":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"1",
              "autoAddReplicas":"false",
              "shards":{"shard1":{
                  "range":"80000000-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"system_blobs_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/system_blobs/leader_elect (1)
       /lwfusion/3.1.0/solr/collections/system_blobs/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_blobs/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/system_blobs/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/default (3)
     DATA:
         {"configName":"default"}
      /lwfusion/3.1.0/solr/collections/default/leaders (2)
       /lwfusion/3.1.0/solr/collections/default/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default/leaders/shard2/leader (0)
        DATA:
            {
              "core":"default_shard2_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/default/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default/leaders/shard1/leader (0)
        DATA:
            {
              "core":"default_shard1_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/default/state.json (0)
      DATA:
          {"default":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"default_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"default_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/default/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/default/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/default/leader_elect/shard2/election/98863151089975299-core_node1-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/default/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/default/leader_elect/shard1/election/98863151089975299-core_node2-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/system_messages (3)
     DATA:
         {"configName":"system_messages"}
      /lwfusion/3.1.0/solr/collections/system_messages/leaders (1)
       /lwfusion/3.1.0/solr/collections/system_messages/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_messages/leaders/shard1/leader (0)
        DATA:
            {
              "core":"system_messages_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/system_messages/state.json (0)
      DATA:
          {"system_messages":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"1",
              "autoAddReplicas":"false",
              "shards":{"shard1":{
                  "range":"80000000-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"system_messages_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/system_messages/leader_elect (1)
       /lwfusion/3.1.0/solr/collections/system_messages/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_messages/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/system_messages/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/default_logs (3)
     DATA:
         {"configName":"default_logs"}
      /lwfusion/3.1.0/solr/collections/default_logs/leaders (2)
       /lwfusion/3.1.0/solr/collections/default_logs/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default_logs/leaders/shard2/leader (0)
        DATA:
            {
              "core":"default_logs_shard2_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/default_logs/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default_logs/leaders/shard1/leader (0)
        DATA:
            {
              "core":"default_logs_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/default_logs/state.json (0)
      DATA:
          {"default_logs":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"default_logs_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"default_logs_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/default_logs/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/default_logs/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default_logs/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/default_logs/leader_elect/shard2/election/98863151089975299-core_node2-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/default_logs/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default_logs/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/default_logs/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/default_signals (3)
     DATA:
         {"configName":"default_signals"}
      /lwfusion/3.1.0/solr/collections/default_signals/leaders (2)
       /lwfusion/3.1.0/solr/collections/default_signals/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default_signals/leaders/shard2/leader (0)
        DATA:
            {
              "core":"default_signals_shard2_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/default_signals/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default_signals/leaders/shard1/leader (0)
        DATA:
            {
              "core":"default_signals_shard1_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/default_signals/state.json (0)
      DATA:
          {"default_signals":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"default_signals_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"default_signals_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/default_signals/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/default_signals/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default_signals/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/default_signals/leader_elect/shard2/election/98863151089975299-core_node1-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/default_signals/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default_signals/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/default_signals/leader_elect/shard1/election/98863151089975299-core_node2-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/recommender_models (3)
     DATA:
         {"configName":"recommender_models"}
      /lwfusion/3.1.0/solr/collections/recommender_models/leaders (2)
       /lwfusion/3.1.0/solr/collections/recommender_models/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/recommender_models/leaders/shard2/leader (0)
        DATA:
            {
              "core":"recommender_models_shard2_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/recommender_models/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/recommender_models/leaders/shard1/leader (0)
        DATA:
            {
              "core":"recommender_models_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/recommender_models/state.json (0)
      DATA:
          {"recommender_models":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"recommender_models_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"recommender_models_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect/shard2/election/98863151089975299-core_node2-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/recommender_models/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/default_signals_aggr (3)
     DATA:
         {"configName":"default_signals_aggr"}
      /lwfusion/3.1.0/solr/collections/default_signals_aggr/leaders (2)
       /lwfusion/3.1.0/solr/collections/default_signals_aggr/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default_signals_aggr/leaders/shard2/leader (0)
        DATA:
            {
              "core":"default_signals_aggr_shard2_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/default_signals_aggr/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default_signals_aggr/leaders/shard1/leader (0)
        DATA:
            {
              "core":"default_signals_aggr_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/default_signals_aggr/state.json (0)
      DATA:
          {"default_signals_aggr":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"default_signals_aggr_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"default_signals_aggr_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect/shard2/election/98863151089975299-core_node2-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/default_signals_aggr/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/logs (3)
     DATA:
         {"configName":"logs"}
      /lwfusion/3.1.0/solr/collections/logs/leaders (2)
       /lwfusion/3.1.0/solr/collections/logs/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/logs/leaders/shard2/leader (0)
        DATA:
            {
              "core":"logs_shard2_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/logs/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/logs/leaders/shard1/leader (0)
        DATA:
            {
              "core":"logs_shard1_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/logs/state.json (0)
      DATA:
          {"logs":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"logs_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"logs_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/logs/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/logs/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/logs/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/logs/leader_elect/shard2/election/98863151089975299-core_node1-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/logs/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/logs/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/logs/leader_elect/shard1/election/98863151089975299-core_node2-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/audit_logs (3)
     DATA:
         {"configName":"audit_logs"}
      /lwfusion/3.1.0/solr/collections/audit_logs/leaders (2)
       /lwfusion/3.1.0/solr/collections/audit_logs/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/audit_logs/leaders/shard2/leader (0)
        DATA:
            {
              "core":"audit_logs_shard2_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/audit_logs/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/audit_logs/leaders/shard1/leader (0)
        DATA:
            {
              "core":"audit_logs_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/audit_logs/state.json (0)
      DATA:
          {"audit_logs":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"audit_logs_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"audit_logs_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect/shard2/election/98863151089975299-core_node2-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/audit_logs/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/system_jobs_history (3)
     DATA:
         {"configName":"system_jobs_history"}
      /lwfusion/3.1.0/solr/collections/system_jobs_history/leaders (2)
       /lwfusion/3.1.0/solr/collections/system_jobs_history/leaders/shard2 (1)
        /lwfusion/3.1.0/solr/collections/system_jobs_history/leaders/shard2/leader (0)
        DATA:
            {
              "core":"system_jobs_history_shard2_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
       /lwfusion/3.1.0/solr/collections/system_jobs_history/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_jobs_history/leaders/shard1/leader (0)
        DATA:
            {
              "core":"system_jobs_history_shard1_replica1",
              "core_node_name":"core_node2",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/system_jobs_history/state.json (0)
      DATA:
          {"system_jobs_history":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"2",
              "autoAddReplicas":"false",
              "shards":{
                "shard1":{
                  "range":"80000000-ffffffff",
                  "state":"active",
                  "replicas":{"core_node2":{
                      "core":"system_jobs_history_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}},
                "shard2":{
                  "range":"0-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"system_jobs_history_shard2_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect (2)
       /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect/shard2 (1)
        /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect/shard2/election (1)
         /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect/shard2/election/98863151089975299-core_node1-n_0000000000 (0)
       /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/system_jobs_history/leader_elect/shard1/election/98863151089975299-core_node2-n_0000000000 (0)
     /lwfusion/3.1.0/solr/collections/system_history (3)
     DATA:
         {"configName":"system_history"}
      /lwfusion/3.1.0/solr/collections/system_history/leaders (1)
       /lwfusion/3.1.0/solr/collections/system_history/leaders/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_history/leaders/shard1/leader (0)
        DATA:
            {
              "core":"system_history_shard1_replica1",
              "core_node_name":"core_node1",
              "base_url":"http://10.128.0.2:8983/solr",
              "node_name":"10.128.0.2:8983_solr"}
      /lwfusion/3.1.0/solr/collections/system_history/state.json (0)
      DATA:
          {"system_history":{
              "replicationFactor":"1",
              "router":{"name":"compositeId"},
              "maxShardsPerNode":"1",
              "autoAddReplicas":"false",
              "shards":{"shard1":{
                  "range":"80000000-7fffffff",
                  "state":"active",
                  "replicas":{"core_node1":{
                      "core":"system_history_shard1_replica1",
                      "base_url":"http://10.128.0.2:8983/solr",
                      "node_name":"10.128.0.2:8983_solr",
                      "state":"active",
                      "leader":"true"}}}}}}
      /lwfusion/3.1.0/solr/collections/system_history/leader_elect (1)
       /lwfusion/3.1.0/solr/collections/system_history/leader_elect/shard1 (1)
        /lwfusion/3.1.0/solr/collections/system_history/leader_elect/shard1/election (1)
         /lwfusion/3.1.0/solr/collections/system_history/leader_elect/shard1/election/98863151089975299-core_node1-n_0000000000 (0)
    /lwfusion/3.1.0/solr/overseer_elect (2)
     /lwfusion/3.1.0/solr/overseer_elect/leader (0)
     DATA:
         {"id":"98863151089975299-10.128.0.2:8983_solr-n_0000000000"}
     /lwfusion/3.1.0/solr/overseer_elect/election (1)
      /lwfusion/3.1.0/solr/overseer_elect/election/98863151089975299-10.128.0.2:8983_solr-n_0000000000 (0)
    /lwfusion/3.1.0/solr/security.json (0)
    DATA:
        {}
    /lwfusion/3.1.0/solr/clusterstate.json (0)
    DATA:
        {}

